/*
		  Data de Inicio do Game Mode: 16/12/2014
        Fim da Versão 1.0 do Game Mode: 03/02/2015
			Feito por Deiverson e HugoLeonardo
		        	Game Mode GF
 © Copyright - GTA Faccoes - Todos os direitos reservados.
				www.equipegf.com
*/
/*================[INCLUDES]===================*/
#include <a_samp>
#include <a_http>
#include <streamer>
#include <sscanf2>
#include <a_mysql>
#include <DOF2>
#include <zcmd>
#include <mapandreas>
#include <callbacks>
#include <foreach>
#include <ConvertDays>
#include <progressbar>
#include <xenon>
#define Kick(%0) SetTimerEx("Kicka", 100, false, "i", %0)
#define CONFIG "/GF/Armas.ini"
/* Conecta ao banco de Dados */
#define mysql_host "127.0.0.1" //IP DB;
#define mysql_user "root" //USER DB;
#define mysql_password "" //PASSWORD DB;
#define mysql_database "dbgf" //NAME DB;
/*================[DIALOGS]===================*/
#define     	DIALOG_REGISTRO      		  1
#define     	DIALOG_LOGIN                  2
#define     	DIALOG_REGRAS                 3
#define     	DIALOG_REGRAS2                4
#define     	DIALOG_REGRAS3                5
#define     	DIALOG_REGRAS4                6
#define     	DIALOG_REGRAS5                7
#define         DIALOG_FACCOES                8
#define         DIALOG_FACCOES2               9
#define         DIALOG_CV               	  10
#define         DIALOG_ADA                    11
#define         DIALOG_TCP                    12
#define         DIALOG_MLC                    13
#define         DIALOG_VEH                    15
#define         DIALOG_VEHVIP                 16
#define         DIALOG_HQ                     17
#define         DIALOG_CASH                   20
#define         DIALOG_TEMPO                  21
#define 		DIALOG_BANIDO                 22
#define         DIALOG_ARMAS                  23
#define         DIALOG_EN                     24
#define         DIALOG_MUDARNICK              25
#define         DIALOG_INICIO                 26
#define         DIALOG_INGRESSO         	  27
#define         DIALOG_TOCAR                  29
#define         DIALOG_MACONHA                30
#define         DIALOG_COCAINA                32
#define         DIALOG_FOGOS                  33
#define         DIALOG_GPS                    34
#define         GPS_CV                        35
#define         GPS_ADA                       36
#define         GPS_TCP                       37
#define         GPS_LOCAIS                    38
#define         GPS_FAVELAS                   39
#define         GPS_MLC                       40
#define         DIALOG_CAMERAS                41
#define         DIALOG_CASH1                  42
#define         DIALOG_CASH2                  43
#define         DIALOG_CASH3                  44
#define         DIALOG_CASH4                  45
#define         DIALOG_CASH5                  46
#define         DIALOG_ELEVADOR               47
#define         DIALOG_AVALIAR                48
#define         DIALOG_CREDITOS               49
#define         DIALOG_TUNAR                  50
#define 		PINTARV                       51
#define			DIALOG_RODAS                  52
#define			DIALOG_NEON                   53
#define         DIALOG_RADIO                  54
#define         DIALOG_FUNCAO                 55
#define         DIALOG_BEBIDAS                56
#define         GPS_LS                        57
#define         GPS_LV                        58
#define         GPS_SF                        59
#define         DIALOG_BAN                    60
#define         DIALOG_MESSAGE                61
#define         DIALOG_INFO                   62
#define         DIALOG_EVENTOS                66
#define         DIALOG_INTERFONE              68
#define         DIALOG_CASHS                  69
#define         DIALOG_BMLC                   70
#define         DIALOG_AJUDA                  71
// ================ [ BOCAS DE FUMO ] ============= //
#define         DIALOG_BOCA                   72
#define         DIALOG_BOCA2                  73
#define         DIALOG_BOCA3                  74
#define         DIALOG_BOCA4                  75
#define         DIALOG_BOCA5                  76
#define         DIALOG_BOCA6                  77
#define         DIALOG_BOCA7                  78
#define         DIALOG_BOCA8                  79
#define         DIALOG_BOCA9                  94
#define         DIALOG_BOCA10                 96
#define         DIALOG_BOCA11                 97
#define         DIALOG_BOCA12                 98
// =============== [ Eventos ] ===================== //
#define 		DIALOG_EVENTO_RESULTADO1      80
#define 		DIALOG_EVENTO_PREMIO1         81
#define 		DIALOG_EVENTO_PUBLICAR        82
// ============ [ Arsenal ] ======================== //
#define         DIALOG_ABRIRCV 					83
#define         DIALOG_ABRIR                    84
#define         DIALOG_ABRIRADA                 85
#define         DIALOG_ABRIRTCP             	86
#define         DIALOG_ABRIRMLC                 87
#define         DIALOG_EMPREGOS              	88
#define         DIALOG_HIERARQUIA            	89
#define         DIALOG_MUDARSENHA               90
#define         DIALOG_X9                       91
#define         DIALOG_X92                      92
#define         DIALOG_PUTEIRO                  93
#define         DIALOG_PUTA                     94
#define         DIALOG_ARSENAL2                 95
#define         DIALOG_PEGARFUZIL               96
#define         DIALOG_MENUARSENAL              97
#define         DIALOG_ARSENAL                  98
#define         DIALOG_ARSENAL3                 99
#define         DIALOG_PEGARFUZIL2              100
#define         DIALOG_PEGARFUZIL3              101
#define         DIALOG_MENUARSENAL2             102
#define         DIALOG_MENUARSENAL3             103
#define         DIALOG_MENUARSENAL4             104
#define         DIALOG_MENUARSENAL5             105
#define         DIALOG_MENUARSENAL6             106
#define         DIALOG_PEGARFUZIL4          	107
#define         DIALOG_ARSENAL4                 108
#define         DIALOG_ARSENAL5                 109
#define         DIALOG_PEGARFUZIL5          	110
#define         DIALOG_ARSENAL6                 111
#define         DIALOG_PEGARFUZIL6          	112
#define         DIALOG_MENUARSENAL7             113
#define         DIALOG_ARSENAL7                 114
#define         DIALOG_PEGARFUZIL7          	115
#define         DIALOG_MENUARSENAL8             116
#define         DIALOG_ARSENAL8                 117
#define         DIALOG_PEGARFUZIL8          	118
#define         DIALOG_MENUARSENAL9             119
#define         DIALOG_ARSENAL9                 120
#define         DIALOG_PEGARFUZIL9          	121
#define         DIALOG_MENUARSENAL10            122
#define         DIALOG_ARSENAL10                123
#define         DIALOG_PEGARFUZIL10          	124
#define         DIALOG_MENUARSENAL11            125
#define         DIALOG_ARSENAL11                126
#define         DIALOG_PEGARFUZIL11          	127
#define         DIALOG_MENUARSENAL12            128
#define         DIALOG_ARSENAL12                129
#define         DIALOG_PEGARFUZIL12          	130
#define         DIALOG_INFOFAV1                 131
#define         DIALOG_INFOFAV2                 132
#define         DIALOG_INFOFAV3                 133
#define         DIALOG_INFOFAV4                 134
#define         DIALOG_TOCAR2                   135
#define         DIALOG_COMPRARARMAS             136
#define         DIALOG_EVENTOS_1                137
#define         DIALOG_REGISTRO_EMAIL           138
#define         DIALOG_NICK_EM_USO              139
#define         DIALOG_ACESSORIOS               140
#define         DIALOG_CONTA                    141
#define         DIALOG_CONFIG                   142
#define         DIALOG_CONFIG2                  143
#define         DIALOG_TRANSFERIRCASH           144
#define         DIALOG_TRANSFERIRCASH2          145
// =========== [ ANT DDOS BOT ] ================ //
#if !defined varGet
#define varGet(%0)      getproperty(0,%0)
#endif
#if !defined varSet
#define varSet(%0,%1) setproperty(0, %0, %1)
#endif
stock botGetIP[24];
#define IsPlayerBot(%0)\
            GetPlayerPing(%0) == 65535 && (gettime() - varGet((GetPlayerIp(%0, botGetIP, sizeof botGetIP), botGetIP)) > 5)
/*================[DEFINES]===================*/
#define TEMPO 300000 // 5 Minutos em milisegundos
#define MAX_OBJ 50
#define MAX_TENTATIVAS		4 
#define SCM SendClientMessage
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
#define TIMER_UPDATEARROW 	100
#define CIDADELS 			1
#define CIDADESF 			2
#define CIDADELV 			3225
#define TEMPO_HOSPITAL      15
#define AntiDivulguer 60
#define SPECIAL_ACTION_PISSING	68
#define players 100 
#define chopperid 497 
#define ropelength 50
#define offsetz 15
#define dur 250
#define TireDano(%1,%2,%3,%4) %1 | (%2 << 1) | (%3 << 2) | (%4 << 3)
#define SendFormattedMessageToAll(%0,%1,%2) do{new _string[999]; format(_string,sizeof(_string),%1,%2); SendClientMessageToAll(%0,_string);} while(False)
#define SendFormattedMessage(%0,%1,%2,%3) do{new _string[999]; format(_string,sizeof(_string),%2,%3); SCM(%0,%1,_string);} while(False)
/*==================[CORES]====================*/
#define         COR_SERVIDOR        0x4682B4FF
#define 		COR_PRINCIPAL 		0x33AAFFFF
#define         COR_PORTAO          0x909596FF
#define         COR_NEGATIVO        0xFF7777FF
#define 		COR_ERRO            0xCD0000FF
#define         COR_USOCORRETO      0x0000EEFF
#define 		COR_REPORTER 		0xFF9900AA
#define 		COR_HELPER 			0x00F6F6AA
#define 		COR_VERDE		 	0x33AA33AA 
#define 		COR_AMARELO         0xFFFF00FF
#define 		COR_CV              0xFF0000AA
#define 		COR_ADA             0x0000FFAA
#define 		COR_TCP             0xFFFF00AA
#define 		COR_MLC             0xD2691EAA
#define         COR_PCRJ        	0xA9A9A9FF
#define 		COR_ROXO 			0xC798FAAA
#define 		COR_PMRJ 			0x3A5FCD96
#define 		COR_LARANJA         0xFF7100FF
#define 		COR_BRANCO          0xFFFFFFFF
#define 		COR_VERDEFORTE      0x33AA33AA
#define 		COR_AZULCLARO       0x00FFFFAA
#define 		COR_AZUL            0x7A67EEFF
#define         COR_DJ              0xA020F0FF
#define         COR_ADMIN           0x3333FF96
#define         COR_INFO            0x1E48BDFF
#define         COR_ARSENAL         0xADFF2FFF
#define         COR_MTX				0x00FF26FF
#define 		COR_ROXO 	 		0xC798FAAA
#define COLOR_NOTES 0x2894FFFF
#define COLOR_NOTES2 0xFF0000AA
#define DIALOG_SUSPECTLIST 123
#define BULLET_HIT_TYPE_PLAYER 1
#define PUB:%0(%1)      forward %0(%1); \
									public %0(%1)
// =================== [ GANGZONES ] ================== //
#define     MAX_GZS         14
new ChecksDominio[MAX_GZS];
new GangZonas[MAX_GZS];
new GZDono[MAX_GZS][50] =
{
	"{FF0000}CMD", "{FF0000}CMD", "{FF0000}CMD",
	"{0000FF}LLL", "{0000FF}LLL","{0000FF}LLL",
	"{FFFF00}3CP", "{FFFF00}3CP","{FFFF00}3CP",
	"{D2691E}MLC","{D2691E}MLC","{D2691E}MLC",
	"{3A5FCD}PMRJ", "{A9A9A9}PCRJ"
};
new ContagemDominio[MAX_GZS];
enum gz_info
{
	GZName[50],
	GZColor,
	Float:GZCoords[4],
	Float:CheckCoords[3]
};
new GangZone[MAX_GZS][gz_info] = {
	// ========== [ CMD ] ========= //
	{"{FF0000}Morro do Engenho", 	COR_CV, 	{2078.662, -1226.177, 2405.642, -677.3168}, {2200.8481,-980.8399,62.5842}},
	{"{FF0000}Martins", 		COR_CV, 	{2604.166, -1027.653, 2802.69, -653.961}, {2694.5,-841.09997558594,64.0}},
	{"{FF0000}Antares", 		COR_CV, 	{2697.589, 1950.205, 2989.536, 2650.878}, {2869.9612,2268.3896,10.8130}},
	// ========== [ ADA ] ========= //
	{"{0000FF}Morro da Primavera", 			COR_ADA, 	{1014.511, -2159.539, 1584.936, -1847.667}, {1174.9948,-2043.9192,69.0078}},
	{"{0000FF}Morro do Urubu",  		    COR_ADA, 	{688.9946, -969.2637, 1191.143, -618.9274}, {940.8082,-680.9699,120.1932}},
	{"{0000FF}Morro do Juramento",  		    COR_ADA, 	{-2685.911, -969.2637, -2265.508, -268.5911}, {-2395.9583,-614.8931,132.7850}},
	// ========== [ TD3 ] ========== //
	{"{FFFF00}Muquiço",  					COR_TCP, 	{-35.03363, -432.0814, 478.7929, 116.7788}, {207.4265,-144.0237,1.5859}},
	{"{FFFF00}Sapo de Camará",			COR_TCP, 	{1550.711, -2206.911, 2029.868, -1831.876}, {1868.0765,-2101.6897,13.5416}},
	{"{FFFF00}Vila Aliança",			COR_TCP, 	{779.4292, 1631.845, 1005.91, 2111.485}, {942.5204,1984.1465,10.8687}},
	// ========= [ MLC ] ========== //
	{"{D2691E}Tres Pontes",  					COR_MLC, 	{1763.359, 2627.522, 2499.065, 2942.825}, {2190.8745,2815.1069,10.8203}},
	{"{D2691E}Cesarão",  					COR_MLC, 	{2481.942, 1956.762, 2727.948, 2440.271}, {2605.4514,2281.8171,10.8203}},
	{"{D2691E}Bateau Mouche",  					COR_MLC, 	{595.5717, -759.0619, 969.2637, -373.692}, {654.0714,-542.9300,16.3281}},

	// ========= [ UPP ] ========== //
	{"{3A5FCD}Complexo da Maré",  					COR_PMRJ,	{1747.831, 544.9183, 2388.226, 831.1552}, {2003.4324,753.4951,10.6719}},
	{"{A9A9A9}PCRJ",  					COR_PCRJ, 	{-5.5,5.5,5.5}, {5.5,5.5,5.5}}
};
// ========================== [ MENSAGENS RANDOMICAS ] ========================= //
new Mensagens[17][9999] =
{
    "{1E48BD}[GF]: {ABABAB}Adiquira seu VIP já, e tenha previlégios dentro do servidor.",
    "{1E48BD}[GF]: {ABABAB}Está precisando de ajuda? visiste o fórum {1E48BD}'www.equipegf.com/forum'",
	"{1E48BD}[GF]: {ABABAB}Não sabe os comandos que pode usar? Digite {1E48BD}'/comandos' {ABABAB}e veja a lista de comandos disponíveis",
	"{1E48BD}[GF]: {ABABAB}Este jogo não faz nenhuma apologia ao crime.",
	"{1E48BD}[GF]: {ABABAB}Este jogo é proibido para menores de 18 anos, não nos responsabilizamos por qualquer ato.",
	"{1E48BD}[GF]: {ABABAB}Compre VIP e obtenha vantagens dentro do servidor, Use {1E48BD}'/vantagensvip' {ABABAB}para ver as vantagens.",
	"{1E48BD}[GF]: {ABABAB}Visite nosso site: {1E48BD}www.equipegf.com",
	"{1E48BD}[GF]: {ABABAB}Adquire seu vip logo, veja as vantagens digite {1E48BD}/vantagensvip.",
	"{1E48BD}[GF]: {ABABAB}Cadastre-se em nosso forum: {1E48BD}www.equipegf.com/forum",
	"{1E48BD}[GF]: {ABABAB}Curta nossa fã page no facebook. {1E48BD}(GTA Facções RJ)",
	"{1E48BD}[GF]: {ABABAB}Esta perdido ? Use {1E48BD}'/gps' {ABABAB}e ache uma localidade.",
	"{1E48BD}[GF]: {ABABAB}Use {1E48BD}'/hierarquia' {ABABAB}para ver os responsáveis de sua favela.",
	"{1E48BD}[GF]: {ABABAB}Qualquer dúvida digite {1E48BD}'/duvida' {ABABAB}e espere que algum administrador/helper te ajude.",
	"{1E48BD}[GF]: {ABABAB}Deseja saber sua info ? Digite {1E48BD}'/info' {ABABAB}e veja todas as suas informações.",
	"{1E48BD}[GF]: {ABABAB}Digite '!' antes de digitar um texto, e se comunique com players da sua facção.",
	"{1E48BD}[GF]: {ABABAB}Use {1E48BD}'/cash' {ABABAB}e veja suas opções de compras.",
	"{1E48BD}[GF]: {ABABAB}Acesse nosso portal de entretenimento e intereja com os nossos players: {1E48BD}www.equipegf.com."
};
/*================[VARIAVEIS]===================*/
new bool: DetectedForAimbot[ MAX_PLAYERS char ], bool: IsAFK[ MAX_PLAYERS char ], bool: CoolDown[ MAX_PLAYERS char ], TimesDetected[ MAX_PLAYERS ] = 0,ToggleCoolDown[ MAX_PLAYERS ];
new AnoL[MAX_PLAYERS],MesL[MAX_PLAYERS];
new OculpadoRGF[MAX_PLAYERS];
new conectDB = -1;
enum dDrogasEnum
{
        OID,
        Text3D:TID,
        DDATA[2],
        Float:OPOS[3]
};
new iDrogaData[MAX_OBJ][dDrogasEnum];
new tentativaDeLogin[MAX_PLAYERS];
new Text3D:VehicleLabelFree[MAX_VEHICLES];
new bool:Boca1,bool:Boca2,bool:Boca3,bool:Boca4,bool:Boca5,bool:Boca6,bool:Boca7,bool:Boca8,bool:Boca9,bool:Boca10,bool:Boca11,bool:Boca12;
new ob2[MAX_PLAYERS],ob3[MAX_PLAYERS],ob5[MAX_PLAYERS],ob7[MAX_PLAYERS],
ob6[MAX_PLAYERS],ob10[MAX_PLAYERS],ob11[MAX_PLAYERS],ob12[MAX_PLAYERS],
ob13[MAX_PLAYERS],ob14[MAX_PLAYERS],ob15[MAX_PLAYERS],ob16[MAX_PLAYERS],
ob17[MAX_PLAYERS],ob18[MAX_PLAYERS],ob19[MAX_PLAYERS],ob20[MAX_PLAYERS];
new DiaL[MAX_PLAYERS],MinutoL[MAX_PLAYERS],HoraL[MAX_PLAYERS];
enum config_vars { M4,M42,M43,M44,M45,M46,M47,M48,M49,M50,M51,M52}
new Config[config_vars];
enum pDados{Admin,MotoTaxi,Bafo,Flood,Flood2,Dinheiro,ORM:ORM_ID,pMaxTentativas,Grade,bool:BlockTR,bool:BlockIR,VehicleLabel,Resgatado,bool:CityAdmin,Cargo,Fogos,Passagens,Camera,FirstPS,BarreiraFrente,Dono,Lider,DJ,FilaHLP,FilaMTX,atendimentoshelper,FilaRGF,TempoPreso,CartelV,CartelD,CinturaoPERD,Cinturao,Lutador,
pBarreira,gSpectateID,LastReport,pRpt,Wanted,bool:ReloadPlayer,gSpectateType,RecebendoMsg,PMRJ,PCRJ,Reporter,pHelper,Vip,EquiparVIP,Iniciante,Float:LastPos[3],bool:BlockOlhar, bool:BlockPM,Cash,Matou,Morreu,bool:LerPM,Faccoes,Logou,bool:DelayAsay,bool:DelayReport, bool:DelayGov,bool:InHospital,Skin,Maconha,Cocaina,Procurado,sutotal,suabatidos,TempoLogado,Cone,TimerArrow, Kicked, Score}
new Text:Tecla[2];
new Text3D:LabelBot[MAX_PLAYERS];
new Gz[MAX_PLAYERS];
new FPS[MAX_PLAYERS];
new VehMTX[87];
// ==================== [ SLAP ] ======================== //
enum SlapPlayerInfo
{
	bool:Slapping=false,
	TickCount,
	SInt,
	Float:SposX,
	Float:SposY,
	Float:SposZ,
	Float:SposA,
	Float:SHl,
	Float:SAr
}
enum Variables
{
	pMoney,
	pSkin,
	VirtualWorld,
	pHealth,
	pArmour,
	Float:Float_X,
	Float:Float_Y,
	Float:Float_Z,
	Float:pAngle,
	WantedLevel,
	Inter
}
// ============================== [ VARIÁVEIS ] ================================ //
new Reports[10] = {INVALID_PLAYER_ID, ...};
new ReportsReasons[10][24];
new rep_idx;
new TaUFC[MAX_PLAYERS];
new bool:UFC[3];
new NoQuarto;
new NoQuarto2[MAX_PLAYERS];
new NoPuteiro[MAX_PLAYERS];
new bool:CinturaoEVENTO[3];
new Taximetro[MAX_PLAYERS][2];
new PrecoCorrida[MAX_PLAYERS];
new MaconhaOffer[MAX_PLAYERS];
new MaconhaPrice[MAX_PLAYERS];
new MaconhaGram[MAX_PLAYERS];
new CocainaOffer[MAX_PLAYERS];
new CocainaPrice[MAX_PLAYERS];
new CocainaGram[MAX_PLAYERS];
new Presidio[MAX_PLAYERS];
new PresoADM[MAX_PLAYERS];
new bombtimer[MAX_PLAYERS];
new Float:BombX[MAX_PLAYERS], Float: BombY[MAX_PLAYERS], Float: BombZ[MAX_PLAYERS], BombObject[MAX_PLAYERS], bool: BombArmed[MAX_PLAYERS];
new Weapons[MAX_PLAYERS][13][2];
new Variable[MAX_PLAYERS][Variables];
new SlapPlayer[MAX_PLAYERS][SlapPlayerInfo];
new animation[200];
new VehicleObject[10];
new portaoPMRJ1;
new portaoPCRJ;
new portaoPCRJ2;
new portaoPresidio;
new portaoPresidio1;
new portaoPresidio2;
new PortaoReporter;
new PortaoReporter2;
new portaohelper1;
new portaohelper2;
new portaomtx;
new Str[1000];
new HighestID;
new VehPmrj[25];
new carPCRJ[30];
new VehHelper[17];
new False=false;
new CP[MAX_PLAYERS];
new bool:TempoReal[2];
new bool:Explodindo;
new bool:Explodindo2;
new TimerBan[MAX_PLAYERS];
new TapeteCOP[MAX_PLAYERS];
new EmTrabalho[MAX_PLAYERS];
new VeiculoVeh[MAX_PLAYERS];
new CarroDeSom[MAX_PLAYERS];
new CrieiTapete[MAX_PLAYERS];
new TempoTapete[MAX_PLAYERS];
new Equipamentos[MAX_PLAYERS];
new NomeEnquete[128] = "N/A";
new UsouLocalizar[MAX_PLAYERS];
new LimiteReparar[MAX_PLAYERS];
new PassandoTapete[MAX_PLAYERS];
new Player[MAX_PLAYERS][pDados];
new bool:Logado[MAX_PLAYERS char];
new JogadorLocalizado[MAX_PLAYERS];
new Float:X, Float:Y, Float:Z, Float:A;
new SegundosContagem[MAX_PLAYERS] = 0;
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];
new Float:AnguloTapete, Float:TapeteX, Float:TapeteY, Float:TapeteZ;
new Vidro[7],Chao[15],Mesas[12],ParedeB[59],Pilar[9],Janelas[14],Parede[58],Parede2[54];
new bool:EnqueteAberta,SringEnquete[128],TotalDeVotosSim,TotalDeVotosNao,PlayerVotou[500];
new Text:Textdraw[4], Text:Inicio, Text:Inicio2,Text:TextAnim,Text:Hora1, Text:Entrada[4];
new Text:TDEditor_TD[4];
new Text:Menu[15];
new Senha;
new SenhaRGF;
new SenhaMTX;
new IDHELPER[MAX_PLAYERS];
new Atendimentos[MAX_PLAYERS];
new DelayHelper[MAX_PLAYERS];
new DelayRelato[MAX_PLAYERS];
new NaBoateVip[MAX_PLAYERS];
new Mtv[50];
new premio[80];
new antifakekill[MAX_PLAYERS];
// =========== [ CIFRÕES ] =========== //
new bool:TempoCifrao;
new bool:TempoCifrao2;
new bool:TempoCifrao3;
new bool:TempoCifrao4;
new bool:TempoCifrao5;
new bool:TempoCifrao6;
new bool:TempoCifrao7;
new bool:TempoCifrao8;
new bool:TempoCifrao9;
new bool:TempoCifrao10;
new bool:TempoCifrao11;
new bool:TempoCifrao12;
// ===== [ CAIXA ELETRONICOS ] ======= //
new Caixa[4];
new bool:Explodiu;
new bool:Explodiu2;
new bool:Explodiu3;
// ============= [ BAILE 2 ] =================== //
new Segurance[7], Strip[5],Puta[5];
// =============== [ EVENTOS ] ================ //
new Evento = 0;
new TipoEvento = 0;
new EntrouEvento = 0;
new Surf[2];
new bool:ParticipandoEvento[MAX_PLAYERS];
new eventoPrimeiroColocado [128];
new eventoPremioPrimeiroColocado[128];
new x9[500];
#define WEAPON_RESPAWN_TIME 30                    
#define MONEY_BAG_MONEY          0                       
#define MONEY_BAG_MODE       0            
new ForbiddenWeapons[]= { 38, 44, 45 };  
//Variables
new WeaponDrop[MAX_PLAYERS][14];
new WeaponData[MAX_PLAYERS][14][2];
new WeaponTimer[MAX_PLAYERS];
new BagMoney = MONEY_BAG_MONEY;
new BagMode = MONEY_BAG_MODE;
// =============== [ AFK ] ==================== //
/*================[FORWARDS]===================*/
static s_3DTextActorID[MAX_3DTEXT_GLOBAL] = {INVALID_ACTOR_ID, ...};
forward MensagemReporter(const string[]);
forward Taxi();
forward @FecharUFC();
forward MensagemHelperToAdmin(const string[]);
forward MensagemHelper(const string[]);
forward MensagemAdmin(const string[]);
forward MensagemLider(const string[]);
forward MensagemVip(const string[]);
forward MensagemPmrj(const string[]);
forward MensagemPCRJ(const string[]);
forward MensagemFrente(const string[]);
forward MensagemDJ(const string[]);
forward MensagemGerente(const string[]);
forward FecharPortaoPCRJ(playerid);
forward FecharPortaoPCRJ2(playerid);
forward FecharPortaoPresidio(playerid);
forward FecharPortaoPMRJ1(playerid);
forward FecharReporter(playerid);
forward BombTimer(playerid);
forward SendMensagens();
forward TextPlayer();
forward Banido(playerid);
forward CheckBan(playerid);
forward Contando(playerid);
forward @NoQuarto(playerid);
forward hora(playerid);
forward exp(playerid);
forward TempoReparar(playerid);
forward TimerLocalizar(playerid);
forward Localizar(playerid);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward Text3D:Attach3DTextLabelToActor(actorid, text[], color, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:distance = 10.0, worldid = 0, testlos = 0);
/*================[CALLBACKS]===================*/
main()
{
	print("-------------------------------------------------------------");
	print("                Game Mode GTA Faccoes");
	print("   © Copyright - GTA Faccoes - Todos os direitos reservados.");
	print("                  www.equipegf.com");
	print("------------------------------------------------------------");
}
new db[1000];
// ====================== [ NOME SERVIDOR ] ==================================== //
public OnGameModeInit()
{
	mysql_log(LOG_ERROR | LOG_WARNING, LOG_TYPE_HTML); //registra erros e avisos em um arquivo de log agradável .html
    conectDB = mysql_connect(mysql_host, mysql_user, mysql_database, mysql_password); //Usando as definições de conexão..

	strcat(db,"CREATE TABLE IF NOT EXISTS `pinfo` (`id` int(11) NOT NULL auto_increment PRIMARY KEY,`Nick` varchar(24),`Senha` varchar(20), `Email` varchar(64),IP varchar(16), `skin` int(11), `iniciante` int(11), `matou` int(11), `morreu` int(11), `logou` int(11), `dinheiro` int(11), `score` int(70),`cash` int (11), `cargo` int(11), `dono` int(11),");
	strcat(db,"`lider` int(11),`faccoes` int(11), `pmrj` int(11), `pcrj` int(11), `vip` int(11), `procurado` int(11), `cinturao` int(11), `cinturaoperd` int(11), `cartelv` int(11), `carteld` int(11), `dj` int(11), `mototaxi` int(11), `admin` int(11), `minutol` int(11), `horal` int(11), `dial` int(11), `mesl` int(11),");
	strcat(db,"`anol` int(11), `fogos` int(11), `reporter` int(11), `presidio` int(11), `estrelaprocurado` int(11),`suabatidos` int(11),`passagens` int(11),`reportslidos` int(11),`atendimentos` int(11),`fumo` int(11), `cheiro` int(11),`helper` int(11),`sutotal` int(11),`tempopreso` int(11), `presoadm` int(11))");
	mysql_query(conectDB, db, true);

    AddPlayerClass(0, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
    SendRconCommand("hostname [BR/PT] GTA Facções RJ - Oficial [v8.1]");
	SetGameModeText("[GF Mod] v8.1");
	SendRconCommand("language BR/PT");
	// ============================== [ TIMERS ] =============================== //
 	SetTimer("Taxi", 10000, 1);
	SetTimer("SendMensagens",90000,1);
	SetTimer("hora",1000,1);
	SetTimer("exp",1000,1);
	SetTimer("TextPlayer",1000, true);
	// ============================== [ FAVELAS ] ============================== //
	SendRconCommand("loadfs Favelas");
	TempoReal[1] = true;
	LoadConfig();
	OnWeaponDropInit();
	CinturaoEVENTO[1]=false;
	UFC[1]=false;
	AntiDeAMX();
	UsePlayerPedAnims();
	ShowPlayerMarkers(0);
	LimitGlobalChatRadius(30);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	// =================================== [ CRIA A GZ ] ========================= //
	for(new i=0;i < MAX_GZS;i++)
	{
		GangZonas[i] = GangZoneCreate(GangZone[i][GZCoords][0], GangZone[i][GZCoords][1], GangZone[i][GZCoords][2], GangZone[i][GZCoords][3]);
		ContagemDominio[i] = 0;
		ChecksDominio[i] = CreateDynamicCP(GangZone[i][CheckCoords][0], GangZone[i][CheckCoords][1], GangZone[i][CheckCoords][2], 4, -1, 0, -1, 100.0);
	}
    new p = GetMaxPlayers();
    for (new i=0; i < p; i++)
	{
            SetPVarInt(i, "laser", 0);
            SetPVarInt(i, "color", 18643);
    }
	// ========================== [ TEXTDRAW ] ================================= //
	TDEditor_TD[0] = TextDrawCreate(500.137359, 386.773468, "~b~G~w~TA ~b~F~w~accoes");
	TextDrawLetterSize(TDEditor_TD[0], 0.398000, 1.711999);
	TextDrawAlignment(TDEditor_TD[0], 1);
	TextDrawColor(TDEditor_TD[0], -1);
	TextDrawSetShadow(TDEditor_TD[0], 0);
	TextDrawSetOutline(TDEditor_TD[0], 1);
	TextDrawBackgroundColor(TDEditor_TD[0], 51);
	TextDrawFont(TDEditor_TD[0], 2);
	TextDrawSetProportional(TDEditor_TD[0], 1);
	
	TDEditor_TD[1] = TextDrawCreate(528.799865, 374.826751, "~b~versao: ~w~8.0v");
	TextDrawLetterSize(TDEditor_TD[1], 0.197199, 1.107200);
	TextDrawAlignment(TDEditor_TD[1], 1);
	TextDrawColor(TDEditor_TD[1], 1829119);
	TextDrawSetShadow(TDEditor_TD[1], 0);
	TextDrawSetOutline(TDEditor_TD[1], 1);
	TextDrawBackgroundColor(TDEditor_TD[1], 51);
	TextDrawFont(TDEditor_TD[1], 2);
	TextDrawSetProportional(TDEditor_TD[1], 1);
	
	TDEditor_TD[2] = TextDrawCreate(515.199829, 402.453399, "www.equipegf.com");
	TextDrawLetterSize(TDEditor_TD[2], 0.202795, 0.748800);
	TextDrawAlignment(TDEditor_TD[2], 1);
	TextDrawColor(TDEditor_TD[2], -1);
	TextDrawSetShadow(TDEditor_TD[2], 0);
	TextDrawSetOutline(TDEditor_TD[2], 1);
	TextDrawBackgroundColor(TDEditor_TD[2], 51);
	TextDrawFont(TDEditor_TD[2], 2);
	TextDrawSetProportional(TDEditor_TD[2], 1);
	
	TDEditor_TD[3] = TextDrawCreate(534.399902, 418.133453, "] 3 anos ]");
	TextDrawLetterSize(TDEditor_TD[3], 0.183600, 0.883200);
	TextDrawAlignment(TDEditor_TD[3], 1);
	TextDrawColor(TDEditor_TD[3], -5963521);
	TextDrawSetShadow(TDEditor_TD[3], 0);
	TextDrawSetOutline(TDEditor_TD[3], 1);
	TextDrawBackgroundColor(TDEditor_TD[3], 51);
	TextDrawFont(TDEditor_TD[3], 2);
	TextDrawSetProportional(TDEditor_TD[3], 1);

	Hora1 = TextDrawCreate(516.537292, 409.593231, "02/01/2016 - 10:30:10");
	TextDrawLetterSize(Hora1, 0.202795, 0.748800);
	TextDrawAlignment(Hora1, 1);
	TextDrawColor(Hora1, -1);
	TextDrawSetShadow(Hora1, 0);
	TextDrawSetOutline(Hora1, 1);
	TextDrawBackgroundColor(Hora1, 51);
	TextDrawFont(Hora1, 2);
	TextDrawSetProportional(Hora1, 1);

	TextAnim = TextDrawCreate(470.000000, 430.000000, "~b~~k~~PED_LOCK_TARGET~ ~w~to stop the animation");
	TextDrawFont(TextAnim, 2);
    TextDrawSetOutline(TextAnim, 1);
    TextDrawBackgroundColor(TextAnim, 255);
    TextDrawLetterSize(TextAnim, 0.250000, 0.950000);
    TextDrawColor(TextAnim, -1);
    TextDrawSetProportional(TextAnim, 1);
	
	Textdraw[0] = TextDrawCreate(641.531494, 366.083312, "usebox");
	TextDrawLetterSize(Textdraw[0], 0.000000, 8.887042);
	TextDrawTextSize(Textdraw[0], -2.000000, 0.000000);
	TextDrawAlignment(Textdraw[0], 1);
	TextDrawColor(Textdraw[0], 0);
	TextDrawUseBox(Textdraw[0], true);
	TextDrawBoxColor(Textdraw[0], 102);
	TextDrawSetShadow(Textdraw[0], 0);
	TextDrawSetOutline(Textdraw[0], 0);
	TextDrawFont(Textdraw[0], 0);

	Textdraw[1] = TextDrawCreate(641.531494, 361.416687, "usebox");
	TextDrawLetterSize(Textdraw[1], 0.000000, 0.007402);
	TextDrawTextSize(Textdraw[1], -2.000000, 0.000000);
	TextDrawAlignment(Textdraw[1], 1);
	TextDrawColor(Textdraw[1], 0x0000FFFF);
	TextDrawUseBox(Textdraw[1], true);
	TextDrawBoxColor(Textdraw[1], 0x1E48BDFF);
	TextDrawSetShadow(Textdraw[1], 0);
	TextDrawSetOutline(Textdraw[1], 0);
	TextDrawFont(Textdraw[1], 0);

	Textdraw[2] = TextDrawCreate(641.531494, 2.083280, "usebox");
	TextDrawLetterSize(Textdraw[2], 0.000000, 8.951853);
	TextDrawTextSize(Textdraw[2], -2.000001, 0.000000);
	TextDrawAlignment(Textdraw[2], 1);
	TextDrawColor(Textdraw[2], 0);
	TextDrawUseBox(Textdraw[2], true);
	TextDrawBoxColor(Textdraw[2], 102);
	TextDrawSetShadow(Textdraw[2], 0);
	TextDrawSetOutline(Textdraw[2], 0);
	TextDrawFont(Textdraw[2], 0);

	Textdraw[3] = TextDrawCreate(641.531555, 87.249938, "usebox");
	TextDrawLetterSize(Textdraw[3], 0.000000, 0.007402);
	TextDrawTextSize(Textdraw[3], -1.999999, 0.000000);
	TextDrawAlignment(Textdraw[3], 1);
	TextDrawColor(Textdraw[3], 0);
	TextDrawUseBox(Textdraw[3], true);
	TextDrawBoxColor(Textdraw[3], 0x1E48BDFF);
	TextDrawSetShadow(Textdraw[3], 0);
	TextDrawSetOutline(Textdraw[3], 0);
	TextDrawFont(Textdraw[3], 0);
	// ============================= [ ENTRADA ] =============================== //
	Entrada[1] = TextDrawCreate(268.215545, 386.493682, "~B~GTA ~W~FACCOES");
	TextDrawLetterSize(Entrada[1], 0.439599, 3.123197);
	TextDrawAlignment(Entrada[1], 1);
	TextDrawColor(Entrada[1], -1);
	TextDrawSetShadow(Entrada[1], 0);
	TextDrawSetOutline(Entrada[1], 1);
	TextDrawBackgroundColor(Entrada[1], 51);
	TextDrawFont(Entrada[1], 2);
	TextDrawSetProportional(Entrada[1], 1);

	Entrada[2] = TextDrawCreate(273.600067, 413.653442, "Inovando e Crescendo");
	TextDrawLetterSize(Entrada[2], 0.305199, 1.622400);
	TextDrawAlignment(Entrada[2], 1);
	TextDrawColor(Entrada[2], -1);
	TextDrawSetShadow(Entrada[2], 0);
	TextDrawSetOutline(Entrada[2], 1);
	TextDrawBackgroundColor(Entrada[2], 51);
	TextDrawFont(Entrada[2], 3);
	TextDrawSetProportional(Entrada[2], 1);

	Entrada[3] = TextDrawCreate(329.074188, 378.979919, "~b~versao: ~w~8.1v");
	TextDrawLetterSize(Entrada[3], 0.288399, 1.532800);
	TextDrawAlignment(Entrada[3], 1);
	TextDrawColor(Entrada[3], -1);
	TextDrawSetShadow(Entrada[3], 0);
	TextDrawSetOutline(Entrada[3], 1);
	TextDrawBackgroundColor(Entrada[3], 51);
	TextDrawFont(Entrada[3], 3);
	TextDrawSetProportional(Entrada[3], 1);
	
	// ================================ [ MENU ] =============================== //
	Menu[1] = TextDrawCreate(230.000000, 148.000000, "-");
	TextDrawBackgroundColor(Menu[1], 255);
	TextDrawFont(Menu[1], 0);
	TextDrawLetterSize(Menu[1], 3.889998, 18.799999);
	TextDrawColor(Menu[1], 255);
	TextDrawSetOutline(Menu[1], 0);
	TextDrawSetProportional(Menu[1], 1);
	TextDrawSetShadow(Menu[1], 1);
	TextDrawUseBox(Menu[1], 1);
	TextDrawBoxColor(Menu[1], 169);
	TextDrawTextSize(Menu[1], 382.000000, 31.000000);
	TextDrawSetPreviewModel(Menu[1], 2);
	TextDrawSetPreviewRot(Menu[1], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[1], 0);

	Menu[2] = TextDrawCreate(235.000000, 152.000000, "-");
	TextDrawBackgroundColor(Menu[2], -256);
	TextDrawFont(Menu[2], 0);
	TextDrawLetterSize(Menu[2], 4.569999, 1.299999);
	TextDrawColor(Menu[2], -256);
	TextDrawSetOutline(Menu[2], 1);
	TextDrawSetProportional(Menu[2], 1);
	TextDrawUseBox(Menu[2], 1);
	TextDrawBoxColor(Menu[2], 1182971050);
	TextDrawTextSize(Menu[2], 376.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[2], 2);
	TextDrawSetPreviewRot(Menu[2], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[2], 0);

	Menu[3] = TextDrawCreate(234.000000, 150.000000, "MENU");
	TextDrawBackgroundColor(Menu[3], 255);
	TextDrawFont(Menu[3], 1);
	TextDrawLetterSize(Menu[3], 0.500000, 1.600000);
	TextDrawColor(Menu[3], -1);
	TextDrawSetOutline(Menu[3], 1);
	TextDrawSetProportional(Menu[3], 1);
	TextDrawSetSelectable(Menu[3], 0);

	Menu[4] = TextDrawCreate(364.000000, 150.000000, "X");
	TextDrawBackgroundColor(Menu[4], 255);
	TextDrawFont(Menu[4], 1);
	TextDrawLetterSize(Menu[4], 0.500000, 1.600000);
	TextDrawColor(Menu[4], -1);
	TextDrawSetOutline(Menu[4], 1);
	TextDrawSetProportional(Menu[4], 1);
	TextDrawSetSelectable(Menu[4], 1);

	Menu[5] = TextDrawCreate(244.000000, 183.000000, "-");
	TextDrawBackgroundColor(Menu[5], -256);
	TextDrawFont(Menu[5], 0);
	TextDrawLetterSize(Menu[5], 4.509997, 1.199999);
	TextDrawColor(Menu[5], -256);
	TextDrawSetOutline(Menu[5], 1);
	TextDrawSetProportional(Menu[5], 1);
	TextDrawUseBox(Menu[5], 1);
	TextDrawBoxColor(Menu[5], 1182971050);
	TextDrawTextSize(Menu[5], 366.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[5], 2);
	TextDrawSetPreviewRot(Menu[5], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[5], 0);

	Menu[6] = TextDrawCreate(244.000000, 211.000000, "-");
	TextDrawBackgroundColor(Menu[6], -256);
	TextDrawFont(Menu[6], 0);
	TextDrawLetterSize(Menu[6], 4.509997, 1.199999);
	TextDrawColor(Menu[6], -256);
	TextDrawSetOutline(Menu[6], 1);
	TextDrawSetProportional(Menu[6], 1);
	TextDrawUseBox(Menu[6], 1);
	TextDrawBoxColor(Menu[6], 1182971050);
	TextDrawTextSize(Menu[6], 366.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[6], 2);
	TextDrawSetPreviewRot(Menu[6], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[6], 0);

	Menu[7] = TextDrawCreate(244.000000, 239.000000, "-");
	TextDrawBackgroundColor(Menu[7], -256);
	TextDrawFont(Menu[7], 0);
	TextDrawLetterSize(Menu[7], 4.509997, 1.199999);
	TextDrawColor(Menu[7], -256);
	TextDrawSetOutline(Menu[7], 1);
	TextDrawSetProportional(Menu[7], 1);
	TextDrawUseBox(Menu[7], 1);
	TextDrawBoxColor(Menu[7], 1182971050);
	TextDrawTextSize(Menu[7], 366.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[7], 2);
	TextDrawSetPreviewRot(Menu[7], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[7], 0);

	Menu[8] = TextDrawCreate(244.000000, 267.000000, "-");
	TextDrawBackgroundColor(Menu[8], -256);
	TextDrawFont(Menu[8], 0);
	TextDrawLetterSize(Menu[8], 4.509997, 1.199999);
	TextDrawColor(Menu[8], -256);
	TextDrawSetOutline(Menu[8], 1);
	TextDrawSetProportional(Menu[8], 1);
	TextDrawUseBox(Menu[8], 1);
	TextDrawBoxColor(Menu[8], 1182971050);
	TextDrawTextSize(Menu[8], 366.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[8], 2);
	TextDrawSetPreviewRot(Menu[8], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[8], 0);

	Menu[9] = TextDrawCreate(244.000000, 294.000000, "-");
	TextDrawBackgroundColor(Menu[9], -256);
	TextDrawFont(Menu[9], 0);
	TextDrawLetterSize(Menu[9], 4.509997, 1.199999);
	TextDrawColor(Menu[9], -256);
	TextDrawSetOutline(Menu[9], 1);
	TextDrawSetProportional(Menu[9], 1);
	TextDrawUseBox(Menu[9], 1);
	TextDrawBoxColor(Menu[9], 1182971050);
	TextDrawTextSize(Menu[9], 366.000000, -33.000000);
	TextDrawSetPreviewModel(Menu[9], 2);
	TextDrawSetPreviewRot(Menu[9], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Menu[9], 0);

	Menu[10] = TextDrawCreate(255.000000, 181.000000, "MUDAR NICK");
	TextDrawBackgroundColor(Menu[10], 255);
	TextDrawFont(Menu[10], 2);
	TextDrawLetterSize(Menu[10], 0.390000, 1.600000);
	TextDrawColor(Menu[10], -1);
	TextDrawSetOutline(Menu[10], 1);
	TextDrawSetProportional(Menu[10], 1);
	TextDrawSetSelectable(Menu[10], 1);

	Menu[11] = TextDrawCreate(247.000000, 209.000000, "mudar senha");
	TextDrawBackgroundColor(Menu[11], 255);
	TextDrawFont(Menu[11], 2);
	TextDrawLetterSize(Menu[11], 0.390000, 1.600000);
	TextDrawColor(Menu[11], -1);
	TextDrawSetOutline(Menu[11], 1);
	TextDrawSetProportional(Menu[11], 1);
	TextDrawSetSelectable(Menu[11], 1);

	Menu[12] = TextDrawCreate(247.000000, 237.000000, "INFORMACOES");
	TextDrawBackgroundColor(Menu[12], 255);
	TextDrawFont(Menu[12], 2);
	TextDrawLetterSize(Menu[12], 0.390000, 1.600000);
	TextDrawColor(Menu[12], -1);
	TextDrawSetOutline(Menu[12], 1);
	TextDrawSetProportional(Menu[12], 1);
	TextDrawSetSelectable(Menu[12], 1);

	Menu[13] = TextDrawCreate(247.000000, 264.000000, "MUDAR MORRO");
	TextDrawBackgroundColor(Menu[13], 255);
	TextDrawFont(Menu[13], 2);
	TextDrawLetterSize(Menu[13], 0.390000, 1.600000);
	TextDrawColor(Menu[13], -1);
	TextDrawSetOutline(Menu[13], 1);
	TextDrawSetProportional(Menu[13], 1);
	TextDrawSetSelectable(Menu[13], 1);

	Menu[14] = TextDrawCreate(276.000000, 291.000000, "AJUDA");
	TextDrawBackgroundColor(Menu[14], 255);
	TextDrawFont(Menu[14], 2);
	TextDrawLetterSize(Menu[14], 0.390000, 1.600000);
	TextDrawColor(Menu[14], -1);
	TextDrawSetOutline(Menu[14], 1);
	TextDrawSetProportional(Menu[14], 1);
	TextDrawSetSelectable(Menu[14], 1);
	
	// =================== [ COMPRAR ARMA ] ==================================== //
	Tecla[0] = TextDrawCreate(170.000000, 432.326660, "usebox");
	TextDrawLetterSize(Tecla[0], 0.000000, 0.927779);
	TextDrawTextSize(Tecla[0], 13.199999, 0.000000);
	TextDrawAlignment(Tecla[0], 1);
	TextDrawColor(Tecla[0], 0);
	TextDrawUseBox(Tecla[0], true);
	TextDrawBoxColor(Tecla[0], 102);
	TextDrawSetShadow(Tecla[0], 0);
	TextDrawSetOutline(Tecla[0], 0);
	TextDrawFont(Tecla[0], 0);
	
	Tecla[1] = TextDrawCreate(20.799983, 430.080047, "aperte ~r~Y ~w~para comprar armas");
	TextDrawLetterSize(Tecla[1], 0.205999, 1.256533);
	TextDrawAlignment(Tecla[1], 1);
	TextDrawColor(Tecla[1], -1);
	TextDrawSetShadow(Tecla[1], 0);
	TextDrawSetOutline(Tecla[1], 1);
	TextDrawBackgroundColor(Tecla[1], 51);
	TextDrawFont(Tecla[1], 2);
	TextDrawSetProportional(Tecla[1], 1);

	
	//PUTEIRO
	Strip[1] = CreateActor(178, 1214.2340,-4.1335,1001.3281,92.0036621); //4
    ApplyActorAnimation(Strip[1], "STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1);
    SetActorInvulnerable(Strip[1]);
    
   	Strip[2] = CreateActor(152, 1208.4767,-7.5106,1001.3281,0.0); //4
    ApplyActorAnimation(Strip[2], "STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1);
    SetActorInvulnerable(Strip[2]);

   	Strip[3] = CreateActor(237, 1203.0651,-8.4862,1002.0255,0.0); //4
    ApplyActorAnimation(Strip[3], "STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1);
    SetActorInvulnerable(Strip[3]);
    
   	Strip[4] = CreateActor(87, 1220.3564,7.6585,1001.3356,0.0); //4
    ApplyActorAnimation(Strip[4], "STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1);
    SetActorInvulnerable(Strip[4]);
    
   	Puta[1] = CreateActor(246, 345.5129,302.1619,999.9382,0.0); //4
    ApplyActorAnimation(Puta[1], "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
    SetActorInvulnerable(Puta[1]);
    
   	Segurance[6] = CreateActor(163, 1203.4209,12.5804,1000.9219,180.0); //4
    SetActorInvulnerable(Segurance[6]);
    
    Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 1215.3488,-12.9806,1000.9219, 25.0, 0); // BEBIDAS PUTEIRO LS
    CreatePickup(1239, 1, 1215.3488,-12.9806,1000.9219, -1); // BEBIDAS PUTEIRO LS
	// =================== [ Ivunerabilidade para os atores ] ================== //
	
  	for(new d = 0; d < sizeof(Strip); d++) SetActorInvulnerable(Strip[d]);
	// ========================= [ Configurações ] ======================== //
	//Prefeitura
	Create3DTextLabel("Prefeitura\nAperte F",0xE3E3E3FF,1481.0488,-1771.6431,18.7958,25.0,0,0);
	Create3DTextLabel("Empregos\nAperte F",0xE3E3E3FF,362.0780,173.6540,1008.3828,25.0,0,0);
	Create3DTextLabel("Sair\nAperte F",0xE3E3E3FF,390.0188,173.7865,1008.3828,25.0,0,0);
	CreatePickup(1239, 1, 1481.0488,-1771.6431,18.7958, 0); // PREFEITURA ENTRAR
	CreatePickup(1210, 1, 362.0780,173.6540,1008.3828, 0); // PREFEITURA EMPREGOS
	CreatePickup(1318, 1,390.0188,173.7865,1008.3828,0); // PREFEITURA SAIR
	//MotoTaxis
	//Primavera
	VehMTX[1]= CreateVehicle(461, 1376.5000, -1885.8000, 13.1000, 0.0000000,45,58,15); //PCJ-600
	VehMTX[2]= CreateVehicle(461, 1377.9004, -1886.0996, 13.1000, 0.0000000,45,58,15); //PCJ-600
	VehMTX[3]= CreateVehicle(461, 1375.3000, -1885.8000, 13.1000, 0.0000000,45,58,15); //PCJ-600
	VehMTX[4]= CreateVehicle(461, 1373.6000, -1885.6000, 13.1000, 0.0000000,45,58,15); //PCJ-600
	VehMTX[5]= CreateVehicle(461, 1372.0000, -1885.5000, 13.1000, 0.0000000,45,58,15); //PCJ-600
	//Cesarão
	VehMTX[6]= CreateVehicle(461,2517.2998, 2347.4004, 10.5000,90.0000000,45,58,15); //PCJ-600
	VehMTX[7]= CreateVehicle(461,2517.2998, 2348.7002, 10.5000,90.0000000,45,58,15); //PCJ-600
	VehMTX[8]= CreateVehicle(461,2517.1001, 2343.7000, 10.5000,90.0000000,45,58,15); //PCJ-600
	VehMTX[9]= CreateVehicle(461,2517.2000, 2344.8999, 10.5000,90.0000000,45,58,15); //PCJ-600
	VehMTX[10]= CreateVehicle(461,2517.3000, 2346.0000, 10.5000,90.0000000,45,58,15); //PCJ-600
	//Três Pontes
	VehMTX[11]= CreateVehicle(461,1870.0000, 2703.1001, 10.5000,0.0000000,14,49,15); //PCJ-600
	VehMTX[12]= CreateVehicle(461,1871.5000, 2702.8999, 10.5000,0.0000000,14,49,15); //PCJ-600
	VehMTX[13]= CreateVehicle(461,1873.0000, 2702.6001, 10.5000,0.0000000,14,49,15); //PCJ-600
	VehMTX[14]= CreateVehicle(461,1874.8000, 2702.3999, 10.5000,0.0000000,14,49,15); //PCJ-600
	VehMTX[15]= CreateVehicle(461,1876.9000, 2702.3999, 10.5000,0.0000000,14,49,15); //PCJ-600
	//VilaAliança
	VehMTX[16]= CreateVehicle(461,1909.3000000,665.7000100,10.5000000,0.0000000,109,40,15); //PCJ-600
	VehMTX[17]= CreateVehicle(461,1908.0000000,665.7000100,10.5000000,0.0000000,109,40,15); //PCJ-600
	VehMTX[18]= CreateVehicle(461,1905.5000000,665.7000100,10.5000000,0.0000000,109,40,15); //PCJ-600
	VehMTX[19]= CreateVehicle(461,1904.3000000,665.7000100,10.5000000,0.0000000,109,40,15); //PCJ-600
	VehMTX[20]= CreateVehicle(461,1906.7000000,665.7000100,10.5000000,0.0000000,109,40,15); //PCJ-600
	//Urubu
	VehMTX[21]= CreateVehicle(461,980.5999800,-936.5000000,41.0000000,0.0000000,22,34,15); //PCJ-600
	VehMTX[22]= CreateVehicle(461,979.7002000,-936.2998000,40.9000000,0.0000000,22,34,15); //PCJ-600
	VehMTX[23]= CreateVehicle(461,983.0999800,-936.5999800,41.1000000,0.0000000,22,34,15); //PCJ-600
	VehMTX[24]= CreateVehicle(461,981.9000200,-936.7000100,41.0000000,0.0000000,22,34,15); //PCJ-600
	VehMTX[25]= CreateVehicle(461,984.4000200,-937.0000000,41.4000000,0.0000000,22,34,15); //PCJ-600
	//Muquiço
	VehMTX[26]= CreateVehicle(461,40.1000, -202.4000, 1.3000, 180.0000,145,115,15); //PCJ-600
	VehMTX[27]= CreateVehicle(461,41.4000, -202.4000, 1.3000, 180.0000,145,115,15); //PCJ-600
	VehMTX[28]= CreateVehicle(461,42.7000, -202.4000, 1.3000, 180.0000,145,115,15); //PCJ-600
	VehMTX[29]= CreateVehicle(461,44.3000, -202.5000, 1.3000, 180.0000,145,115,15); //PCJ-600
	VehMTX[30]= CreateVehicle(461,45.6000, -202.8000, 1.3000, 180.0000,145,115,15); //PCJ-600
	//Morro do Engenho
	VehMTX[31]= CreateVehicle(461,2198.8999000,-1106.8000000,24.9000000,179.4990000,109,40,15); //PCJ-600
	VehMTX[32]= CreateVehicle(461,2199.9004000,-1107.5000000,25.0000000,179.4950000,109,40,15); //PCJ-600
	VehMTX[33]= CreateVehicle(461,2197.7000000,-1106.1000000,24.9000000,179.4950000,109,40,15); //PCJ-600
	VehMTX[34]= CreateVehicle(461,2196.3999000,-1105.7000000,24.8000000,179.4950000,109,40,15); //PCJ-600
	VehMTX[35]= CreateVehicle(461,2195.3999000,-1105.1000000,24.7000000,179.4950000,109,40,15); //PCJ-600
	//Proença
	VehMTX[36]= CreateVehicle(461,914.5000000,1937.4000000,10.5000000,90.0000000,109,40,15); //PCJ-600
	VehMTX[37]= CreateVehicle(461,914.5000000,1936.2000000,10.5000000,90.0250000,109,40,15); //PCJ-600
	VehMTX[38]= CreateVehicle(461,914.2999900,1935.1000000,10.5000000,90.0220000,109,40,15); //PCJ-600
	VehMTX[39]= CreateVehicle(461,914.2000100,1934.2000000,10.5000000,90.0220000,109,40,15); //PCJ-600
	VehMTX[40]= CreateVehicle(461,914.2999900,1933.4000000,10.5000000,90.0220000,109,40,15); //PCJ-600
	//Martins
	VehMTX[41]= CreateVehicle(461,2859.2000000,-875.0999800,10.6000000,90.0000000,145,115,15); //PCJ-600
	VehMTX[42]= CreateVehicle(461,2859.2000000,-873.4000200,10.6000000,90.0000000,145,115,15); //PCJ-600
	VehMTX[43]= CreateVehicle(461,2859.2000000,-871.5999800,10.6000000,90.0000000,145,115,15); //PCJ-600
	VehMTX[44]= CreateVehicle(461,2859.2000000,-873.4000200,10.6000000,90.0000000,145,115,15); //PCJ-600
	VehMTX[45]= CreateVehicle(461,2859.2000000,-875.0999800,10.6000000,90.0000000,145,115,15); //PCJ-600
	//Sapo de Camará
	VehMTX[46]= CreateVehicle(461,1937.9000000,-1978.0000000,13.2000000,314.0000000,95,10,15); //PCJ-600
	VehMTX[47]= CreateVehicle(461,1937.7000000,-1980.8000000,13.2000000,313.9950000,95,10,15); //PCJ-600
	VehMTX[48]= CreateVehicle(461,1937.7998000,-1979.5000000,13.2000000,313.9950000,95,10,15); //PCJ-600
	VehMTX[49]= CreateVehicle(461,1937.9000000,-1984.5000000,13.2000000,313.9950000,95,10,15); //PCJ-600
	VehMTX[50]= CreateVehicle(461,1937.7000000,-1982.8000000,13.2000000,313.9950000,95,10,15); //PCJ-600
	//Complexo da Maré
	VehMTX[51]= CreateVehicle(461,1972.7000, 765.0000, 10.5000,314.0000000,95,10,15); //PCJ-600
	VehMTX[52]= CreateVehicle(461,1971.8000, 764.9000, 10.5000,313.9950000,95,10,15); //PCJ-600
	VehMTX[53]= CreateVehicle(461,1968.0000, 764.7000, 10.5000,313.9950000,95,10,15); //PCJ-600
	VehMTX[54]= CreateVehicle(461,1970.7998, 765.0000, 10.5000,313.9950000,95,10,15); //PCJ-600
	VehMTX[55]= CreateVehicle(461,1969.2002, 765.0000, 10.5000,313.9950000,95,10,15); //PCJ-600
 	//Morro do Juramento
	VehMTX[56]= CreateVehicle(461,1376.5000, -1885.8000, 13.1000,0.0000000,22,34,15); //PCJ-600
	VehMTX[57]= CreateVehicle(461,1377.9004, -1886.0996, 13.1000,0.0000000,22,34,15); //PCJ-600
	VehMTX[58]= CreateVehicle(461,1375.3000, -1885.8000, 13.1000,0.0000000,22,34,15); //PCJ-600
	VehMTX[59]= CreateVehicle(461,1373.6000, -1885.6000, 13.1000,0.0000000,22,34,15); //PCJ-600
	VehMTX[60]= CreateVehicle(461,1372.0000, -1885.5000, 13.1000,0.0000000,22,34,15); //PCJ-600
 	//Antares
	VehMTX[61]= CreateVehicle(461,2862.8000, 2010.3000, 10.5000,90.0000000,145,115,15); //PCJ-600
	VehMTX[62]= CreateVehicle(461,2862.2002, 2006.2002, 10.5000,90.0000000,145,115,15); //PCJ-600
	VehMTX[63]= CreateVehicle(461,2862.8999, 2011.8000, 10.5000,90.0000000,145,115,15); //PCJ-600
	VehMTX[64]= CreateVehicle(461,2862.4004, 2007.5000, 10.5000,90.0000000,145,115,15); //PCJ-600
	VehMTX[65]= CreateVehicle(461,2862.4004, 2009.0996, 10.5000,90.0000000,145,115,15); //PCJ-600
 	//Bateau Mouche
	VehMTX[66]= CreateVehicle(461, 691.6000, -668.7000, 16.0000, 98.0000, 145,115,15);
	VehMTX[67]= CreateVehicle(461, 691.8000, -666.7000, 16.0000, 97.9980, 145,115,15);
	VehMTX[68]= CreateVehicle(461, 691.8000, -665.0000, 16.0000, 97.9980, 145,115,15);
	VehMTX[69]= CreateVehicle(461, 692.2000, -661.0000, 16.0000, 95.9980, 145,115,15);
	VehMTX[70]= CreateVehicle(461, 692.0000, -663.2002, 16.0000, 95.9930, 145,115,15);
 	//Vila Aliança
	VehMTX[71]= CreateVehicle(461, 918.0000, 2161.0000, 10.5000, 80.0000, 145,115,15);
	VehMTX[72]= CreateVehicle(461, 918.8000, 2164.8999, 10.5000, 79.9970, 145,115,15);
	VehMTX[73]= CreateVehicle(461, 918.2002, 2162.2998, 10.5000, 79.9970, 145,115,15);
	VehMTX[74]= CreateVehicle(461, 918.4004, 2163.6006, 10.5000, 79.9970, 145,115,15);
	VehMTX[75]= CreateVehicle(461, 918.8000, 2166.7000, 10.5000, 79.9970, 145,115,15);
	//===============================================[ARSENAL]==============================================
	//==============[ENGENHO]===================
	Create3DTextLabel("Fuzis do Engenho\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,2188.2839,-837.8320,128.3554,25.0,0,1);
	CreatePickup(356, 1,2188.2839,-837.8320,128.3554,-1);
	//==============[MARTINS]===================
	Create3DTextLabel("Fuzis do Martins\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,2690.6121,-830.8826,64.5395,25.0,0,1);
	CreatePickup(356, 1,2690.6121,-830.8826,64.5395,-1);
	//==============[ANTARES]===================
	Create3DTextLabel("Fuzis do Antares\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,2911.5725,2142.5842,11.3554,25.0,0,1);
	CreatePickup(356, 1,2911.5725,2142.5842,11.3554,-1);
	//==============[PRIMAVERA]===================
	Create3DTextLabel("Fuzis da Primavera\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,1112.1224,-2104.2859,69.3554,25.0,0,1);
	CreatePickup(356, 1,1112.1224,-2104.2859,69.3554,-1);
	//==============[URUBU]===================
	Create3DTextLabel("Fuzis do Urubu\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,939.8489,-711.0987,122.2109,25.0,0,1);
	CreatePickup(356, 1,939.8489,-711.0987,122.2109,-1);
	//==============[JURAMENTO]===================
	Create3DTextLabel("Fuzis do Juramento\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,-2500.7124,-702.9796,139.3554,25.0,0,1);
	CreatePickup(356, 1,-2500.7124,-702.9796,139.3554,-1);
	//==============[MUQUIÇO]===================
	Create3DTextLabel("Fuzis do Muquiço\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,123.0179,-283.6630,1.5781,25.0,0,1);
	CreatePickup(356, 1,123.0179,-283.6630,1.5781,-1);
	//==============[SAPO DE CAMARÁ]===================
	Create3DTextLabel("Fuzis do Sapo\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,1907.1077,-1981.2148,14.7859,25.0,0,1);
	CreatePickup(356, 1,1907.1077,-1981.2148,14.7859,-1);
	//==============[Vila Aliança]===================
	Create3DTextLabel("Fuzis da Vila Aliança\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,847.0629,1941.5298,10.9554,25.0,0,1);
	CreatePickup(356, 1,847.0629,1941.5298,10.9554,-1);
	//==============[Cesarão]===================
	Create3DTextLabel("Fuzis do Cesarão\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,2657.0427,2274.1494,10.8203,25.0,0,1);
	CreatePickup(356, 1,2657.0427,2274.1494,10.8203,-1);
	//==============[Tres Pontes]===================
	Create3DTextLabel("Fuzis do 3 Pontes\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,2181.2515,2850.7627,10.8203,25.0,0,1);
	CreatePickup(356, 1,2181.2515,2850.7627,10.8203,-1);
	//==============[Bateau Mouche]===================
	Create3DTextLabel("Fuzis do Bateau Mouche\nPara abrir\n{FF0000}Aperte F",0xE3E3E3FF,611.1261,-606.5334,17.2266,25.0,0,1);
	CreatePickup(356, 1,611.1261,-606.5334,17.2266,-1);
	//===============================================[FIM ARSENAL]==============================================
	// ======================================= [ GANGZONES ] =================== //
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Morro do Engenho",COR_BRANCO,2200.8481,-980.8399,62.5842,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Martins",COR_BRANCO,2694.5,-841.09997558594,64.0,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Antares",COR_BRANCO,2869.9612,2268.3896,10.8130,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar a Morro da Primavera",COR_BRANCO,1174.9948,-2043.9192,69.0078,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Morro do Urubu",COR_BRANCO,940.8082,-680.9699,120.1932,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Morro do Juramento",COR_BRANCO,-2395.9583,-614.8931,132.7850,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Sapo de Camará",COR_BRANCO,1868.0765,-2101.6897,13.5416,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Muquiço",COR_BRANCO,207.4265,-144.0237,1.5859,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar a Vila Aliança",COR_BRANCO,942.5204,1984.1465,10.8687,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Complexo da Maré",COR_BRANCO,2003.4324,753.4951,10.6719,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Cesarão",COR_BRANCO,2605.4514,2281.8171,10.8203,25.0,0,1);
    Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar o Bateau Mouche",COR_BRANCO,654.0714,-542.9300,16.3281,25.0,0,1);
	Create3DTextLabel("{FFFFFF}Digite {FF0000}/dominar {FFFFFF}para\ndominar a Tres Pontes",COR_BRANCO,2190.8745,2815.1069,10.8203,25.0,0,1);
	// ============================= [ RESGATE ] ================================ //
	Create3DTextLabel("{FFFF00}Interfone\n{ffffff}Para abrir o portão\nAperte F",COR_BRANCO,301.9921,1780.4479,17.6406,25.0,0,1);
	Create3DTextLabel("Exploda o Portão\n{ffffff}Digite {FF0000}/explodir {ffffff}para\nExplodir o primeiro portão",COR_BRANCO,286.7910,2052.5923,17.6406,25.0,0,1);
	Create3DTextLabel("Exploda o Portão\n{ffffff}Digite {FF0000}/explodir {ffffff}para\nExplodir o segundo portão",COR_BRANCO,266.7945,2052.7744,17.6406,25.0,0,1);
	Create3DTextLabel("Resgate\n{ffffff}Digite {FF0000}/resgatar {ffffff}para\nResgatar o player",COR_BRANCO,272.6010,1967.0321,17.7391,25.0,0,1);
	Create3DTextLabel("Resgate\n{ffffff}Digite {FF0000}/resgatar {ffffff}para\nResgatar o player",COR_BRANCO,267.9536,1944.7185,17.7391,25.0,0,1);
	Create3DTextLabel("Resgate\n{ffffff}Digite {FF0000}/resgatar {ffffff}para\nResgatar o player",COR_BRANCO,260.7818,1944.8075,17.7325,25.0,0,1);
	Create3DTextLabel("Resgate\n{ffffff}Digite {FF0000}/resgatar {ffffff}para\nResgatar o player",COR_BRANCO,265.6680,1966.8204,17.7391,25.0,0,1);
	// ===================== [ SLAP ] ========================================== //
	CreateObject(980,-23.8000000,-2507.3999000,38.4000000,0.0000000,0.0000000,30.0000000); //object(airportgate) (1)
	CreateObject(980,-24.1000000,-2506.1001000,38.4000000,0.0000000,0.0000000,30.0000000); //object(airportgate) (2)
	CreateObject(980,-23.2000000,-2506.3000500,38.4000000,0.0000000,0.0000000,302.0000000); //object(airportgate) (3)
	CreateObject(980,-24.4000000,-2507.0000000,38.4000000,0.0000000,0.0000000,304.0000000); //object(airportgate) (4)
	// =========================== [ COMANDO VERMELHO ] ======================== //
	Create3DTextLabel("Boca do Engenho\nAperte F",0xE3E3E3FF,2204.7800,-834.8940,128.3554,25.0,0,1); //BOCA DO Morro do Engenho
	Create3DTextLabel("Boca do Martins\nAperte F",0xE3E3E3FF,2688.3999023438,-827.79998779297,64.199996948242,25.0,0,1); //BOCA Martins
	Create3DTextLabel("Boca do Antares\nAperte F",0xE3E3E3FF,2903.8599,2142.7036,11.3554,25.0,0,1); //BOCA DO Antares
	CreatePickup(1279, 1, 2204.7800,-834.8940,128.3554, -1); //BOCA Do Morro do Engenho
	CreatePickup(1279, 1, 2688.3999023438,-827.79998779297,64.199996948242, -1); //BOCA DO Martins
	CreatePickup(1279, 1, 2903.8599,2142.7036,11.3554, -1); //BOCA DO Antares
	// =========================== [ LLL ] ======================== //
	Create3DTextLabel("Boca do Morro da Primavera\nAperte F",0xE3E3E3FF,1111.7084,-2093.1689,69.3554,25.0,0,1); //BOCA DA PRIMAVERA
	Create3DTextLabel("Boca do Morro do Urubu\nAperte F",0xE3E3E3FF,943.4615,-711.3625,122.2109,25.0,0,1); //BOCA DO URUBU
	CreatePickup(1279, 1, 1111.7084,-2093.1689,69.3554, -1); //BOCA DA PRIMAVERA
	CreatePickup(1279, 1, 943.4615,-711.3625,122.2109, -1); //BOCA DO URUBU
	Create3DTextLabel("Boca do Juramento\nAperte F",0xE3E3E3FF,-2505.0376,-702.4961,139.3554,25.0,0,1); //BOCA MORRO DO JURAMENTO
	CreatePickup(1279, 1, -2505.0376,-702.4961,139.3554, -1); //BOCA MORRO DO JURAMENTO
	// =========================== [ 3CP ] ======================== //
	Create3DTextLabel("Boca do Sapo de Sapo de Camará\nAperte F",0xE3E3E3FF,1911.6133,-1978.3553,14.7859,25.0,0,1); //BOCA Do Sapo de Sapo de Camará
	Create3DTextLabel("Boca do Muquiço\nAperte F",0xE3E3E3FF,123.2502,-288.7776,1.5781,25.0,0,1); //BOCA DO Muquiço
	Create3DTextLabel("Boca da Vila Aliança\nAperte F",0xE3E3E3FF,839.8510,1942.9387,10.9554,25.0,0,1); //BOCA DA VILA ALIANÇA
	CreatePickup(1279, 1, 1911.6133,-1978.3553,14.7859, -1); //BOCA DA P.L
	CreatePickup(1279, 1, 123.2502,-288.7776,1.5781, -1); //BOCA Do Muquiço
	CreatePickup(1279, 1, 839.8510,1942.9387,10.9554, -1); //BOCA DA VILA ALIANÇA
	// =========================== [ DEPOSITO Tres Pontes ] ======================== //
	Create3DTextLabel("Depósito Tres Pontes\nAperte F",0xE3E3E3FF,2190.5564,2857.6909,10.8203,25.0,0,1); //Depósito MLC
	CreatePickup(1279, 1, 2190.5564,2857.6909,10.8203, -1); //Depósito MLC
	// =========================== [ DEPOSITO CESARÃO ] ======================== //
	Create3DTextLabel("Depósito Cesarão\nAperte F",0xE3E3E3FF,2650.8037,2274.1150,10.8203,25.0,0,1); //Depósito CESARÃO
	CreatePickup(1279, 1, 2650.8037,2274.1150,10.8203, -1); //Depósito CESARÃO
 	// =========================== [ DEPOSITO BATEAU MOUCHE ] ======================== //
	Create3DTextLabel("Depósito Bateau Mouche\nAperte F",0xE3E3E3FF,611.0272,-609.6773,17.2266,25.0,0,1); //Depósito BATEAU MOUCHE
	CreatePickup(1279, 1, 611.0272,-609.6773,17.2266, -1); //Depósito BATEAU MOUCHE
	//=========================================== [MERCADINHO ROUBO] ==========================================================
	Create3DTextLabel("Mercadinho\nAperte F",0xE3E3E3FF,1352.4178,-1758.2500,13.5078,25.0,0,1); //Mercadinho de roubo Entrar
	CreatePickup(1318, 1, 1352.4178,-1758.2500,13.5078, -1); //Mercadinho de roubo Entrar
	Create3DTextLabel("Sair\nAperte F",0xE3E3E3FF,6.1220,-31.0830,1003.5494,25.0,0,1); //Mercadinho de roubo Sair
	CreatePickup(1318, 1, 6.1220,-31.0830,1003.5494, -1); //Mercadinho de roubo Sair
	// =========================== [ ROUBAR MERCADO 1 ] ========================== //
	Create3DTextLabel("Caixa Eletronico\n{FF0000}Para Roubar Aperte F",0xE3E3E3FF,-0.9927,-30.5773,1003.5494,25.0,0,1); // CAIXA ELETRONICO 1
	CreatePickup(1274, 1, -0.9927,-30.5773,1003.5494, -1); // CAIXA ELETRONICO 1
	// =========================== [ ROUBAR MERCADO 2 ] ========================== //
	Create3DTextLabel("Caixa Eletronico\n{FF0000}Para Roubar Aperte F",0xE3E3E3FF,8.4800,-30.9167,1003.5494,25.0,0,1); // CAIXA ELETRONICO 2
	CreatePickup(1274, 1, 8.4800,-30.9167,1003.5494, -1); // CAIXA ELETRONICO 2
	// =========================== [ ROUBAR MERCADO 3 ] ========================== //
	Create3DTextLabel("Caixa Eletronico\n{FF0000}Para Roubar Aperte F",0xE3E3E3FF,-10.0599,-30.5530,1003.5494,25.0,0,1); // CAIXA ELETRONICO 3
	CreatePickup(1274, 1, -10.0599,-30.5530,1003.5494, -1); // CAIXA ELETRONICO 3
	// ======================= [ CAIXAS ] ====================================== //
	Caixa[1] = CreateDynamicObject(2942, -0.9904,-31.3466,1003.5494,   0.00, 0.00, 180.00);
	Caixa[2] = CreateDynamicObject(2942, 8.4966,-31.5792,1003.5494,   0.00, 0.00, 180.00);
	Caixa[3] = CreateDynamicObject(2942, -10.0571,-31.2169,1003.5494,   0.00, 0.00, 180.00);
	// =========================== [ Puteiro ] ========================== //
	Create3DTextLabel("Vila Mimosa\n{FF0000}Aperte F",0xE3E3E3FF,2495.5181,-1691.0253,14.7656,25.0,0,1); // Entrada Puteiro
	CreatePickup(1318, 1, 2495.5181,-1691.0253,14.7656, -1); // Entrada Puteiro
	Create3DTextLabel("Sair\n{FF0000}Aperte F",0xE3E3E3FF,1204.7902,-13.2780,1000.9219,25.0,0,1); // Sair Puteiro
	CreatePickup(1318, 1, 1204.7902,-13.2780,1000.9219, -1); // Sair Puteiro
	Create3DTextLabel("Quarto\n{FF0000}Aperte F",0xE3E3E3FF,1204.8053,12.4724,1000.9219,25.0,0,1); // Quarto Entrar
	CreatePickup(1318, 1, 1204.8053,12.4724,1000.9219, -1); // Quarto Entrar
	Create3DTextLabel("Sair\n{FF0000}Aperte F",0xE3E3E3FF,344.0723,305.0365,999.1484,25.0,0,1); // Sair Quarto
	CreatePickup(1318, 1, 344.0723,305.0365,999.1484, -1); // Sair Quarto
	// ====================== [ BOATE VIP INTERIOR ] =============================== //
	CreateDynamicObject(19325, 489.37079, -24.22410, 1003.46552,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19325, 486.05569, -20.90200, 1003.46552,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19325, 482.41571, -20.90200, 1003.46552,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19450, 499.44821, -1.65990, 1001.32300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19388, 500.26309, -7.83150, 1001.32001,   0.00000, 0.00000, 30.00000);
    CreateDynamicObject(19450, 499.44821, -1.65990, 1004.80298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19358, 500.25400, -7.78470, 1004.80298,   0.00000, 0.00000, 30.00000);
    CreateDynamicObject(19450, 507.44861, -3.32960, 1001.32300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19450, 507.44861, -3.33710, 1004.80298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19450, 503.65100, -0.80720, 1001.32300,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19450, 502.56070, -0.80720, 1004.80298,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19450, 505.11191, -8.19370, 1001.32300,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19450, 505.11191, -8.19370, 1004.80298,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1491, 499.68118, -6.81520, 999.67700,   0.00000, 0.00000, -60.00000);
    CreateDynamicObject(19172, 504.58060, -8.10950, 1001.83759,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1714, 502.87646, -1.26938, 999.67706,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19173, 502.92099, -0.89490, 1001.61249,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1704, 505.30569, -3.12110, 999.67657,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 506.88519, -4.19030, 999.67670,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1704, 506.21329, -7.46736, 999.67657,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2126, 505.82440, -5.75690, 999.67700,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2229, 499.74374, -0.67745, 999.67767,   0.00000, 0.00000, 45.00000);
    CreateDynamicObject(2229, 507.62247, -1.12364, 999.67767,   0.00000, 0.00000, -45.00000);
    CreateDynamicObject(2700, 499.79901, -2.89040, 1001.93298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2610, 502.08371, -7.76530, 1000.47650,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2610, 502.56369, -7.76530, 1000.47650,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1829, 506.85284, -7.42741, 1000.15649,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(19175, 507.35559, -5.34410, 1001.89270,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19325, 477.34500, -13.99460, 1003.46552,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14820, 476.53909, -14.95810, 1003.56812,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19422, 476.44910, -14.76670, 1003.58209,   35.00000, 0.00000, 0.00000);
    CreateDynamicObject(2126, 477.17599, -17.49632, 1002.69141,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19128, 475.31149, -19.35990, 1002.63171,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19128, 475.31149, -15.41990, 1002.63171,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19128, 475.32761, -11.49176, 1002.63171,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3044, 505.29721, -4.44150, 1000.22369,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2002, 500.04349, -4.30650, 999.66040,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2206, 503.75449, -2.72650, 999.67688,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1703, 474.00311, -15.79270, 1002.69757,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1703, 474.35605, -10.81441, 1002.69757,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 476.56537, -18.72495, 1002.69659,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(19319, 481.40881, -4.98140, 1001.73669,   -25.00000, 0.00000, 90.00000);
    CreateDynamicObject(1491, 473.81723, -21.32220, 1002.69702,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1517, 503.69070, -17.48270, 1001.53210,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 503.65979, -17.82640, 1001.39209,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1517, 503.42426, -17.49793, 1002.07208,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 503.41461, -17.71120, 1001.93213,   0.00000, 0.00000, 45.00000);
    CreateDynamicObject(1517, 503.44312, -17.88070, 1002.07208,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 488.59720, -23.04720, 1002.10388,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1703, 485.50583, -21.66577, 1002.10480,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 487.55740, -26.43830, 1002.10480,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2126, 486.97815, -24.46183, 1002.10553,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1517, 505.54660, -5.82840, 1000.38361,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 505.69919, -4.89340, 1000.24353,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 502.82480, -2.48850, 1000.65228,   0.00000, 0.00000, -45.00000);
    CreateDynamicObject(18868, 503.37180, -2.43690, 1000.61249,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2247, 504.09418, -3.00514, 1001.05713,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2001, 488.74594, -26.37542, 1002.10486,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2001, 488.51880, -21.85158, 1002.10535,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1703, 480.90579, -21.66580, 1002.10480,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2126, 481.46832, -23.69004, 1002.10492,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1704, 479.80060, -23.58470, 1002.10101,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2001, 479.77454, -21.63727, 1002.10535,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1704, 484.18155, -22.69970, 1002.10498,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1703, 482.86844, -25.08413, 1002.10480,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2002, 483.93921, -26.43830, 1002.10437,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2229, 473.19720, -26.69890, 1002.10388,   0.00000, 0.00000, 135.00000);
    CreateDynamicObject(2229, 484.53860, -21.17420, 1002.10510,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1517, 482.60580, -23.11240, 1002.79132,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1520, 481.29260, -23.15660, 1002.67133,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1517, 486.64029, -23.75700, 1002.74170,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1517, 486.69199, -24.25910, 1002.74182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1520, 486.28391, -23.76570, 1002.66180,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 486.30121, -24.21910, 1002.64178,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1517, 476.63950, -16.47090, 1003.40790,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1520, 476.72739, -17.59700, 1003.25800,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(14416, 475.29099, -23.52870, 999.38483,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19129, 482.72470, -10.94800, 999.63660,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19128, 485.93149, -1.67100, 1001.34058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19128, 489.11151, -1.67100, 1001.34058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2190, 502.99094, -3.25387, 1000.61249,   0.00000, 0.00000, 180.00000);
	//========================== [OCTOGONO] ==================================== //
	CreatePickup(1318, 1,-1627.4648,1485.9337,1050.3679,0);//Entrar Octogono Lutador 1
 	CreatePickup(1318, 1,-1662.5610,1489.8246,1050.3679,0);//Entrar Octogono Lutador 2
	Create3DTextLabel("Lutador 1\nAperte F\nPara entrar no octogono",0xE3E3E3FF,-1627.4648,1485.9337,1050.3679,25.0,0,1);//Entrar Octogono Lutador 1
	Create3DTextLabel("Lutador 2\nAperte F\nPara entrar no octogono",0xE3E3E3FF,-1662.5610,1489.8246,1050.3679,25.0,0,1);//Entrar Octogono Lutador 2
	//EntrarOCTOGONOUFC
	Create3DTextLabel("Entrar\nArena UFC",0xE3E3E3FF,1099.5134,1601.2949,12.5469,25.0,0,1);//Label Entrar ARENA UFC
	CreatePickup(1318, 1,1099.5134,1601.2949,12.5469,0);//Pickup Entrar ARENA UFC
	//SairOCTOGONOUFC
	Create3DTextLabel("Sair\nArena UFC",0xE3E3E3FF,-1607.3954,1488.6144,1050.3610,25.0,0,1);//Label Sair ARENA UFC
	CreatePickup(1318, 1,-1607.3954,1488.6144,1050.3610,0);//Pickup Sair ARENA UFC
	//============================= [OCTOGONO] ================================= //
	CreateDynamicObject(13657,-1672.9004000,1450.5996000,1052.0000000,0.0000000,0.0000000,19.9900000); //object(bit) (2)
	CreateDynamicObject(13634,-1640.2002000,1481.5996000,1064.4000000,0.0000000,0.0000000,0.0000000); //object(dirtstad02) (3)
	CreateDynamicObject(13607,-1643.5000000,1487.5000000,1052.9000000,0.0000000,0.0000000,0.0000000); //object(ringwalls) (1)
	CreateDynamicObject(4100,-1628.3000000,1486.3000000,1051.1000000,0.0000000,0.0000000,40.0000000); //object(meshfence1_lan) (1)
	CreateDynamicObject(4100,-1634.7000000,1474.9000000,1051.1000000,0.0000000,0.0000000,0.0000000); //object(meshfence1_lan) (2)
	CreateDynamicObject(4100,-1643.2002000,1504.5000000,1051.1000000,0.0000000,0.0000000,131.9950000); //object(meshfence1_lan) (10)
	CreateDynamicObject(4100,-1631.8000000,1498.4000000,1051.1000000,0.0000000,0.0000000,90.0000000); //object(meshfence1_lan) (11)
	CreateDynamicObject(4100,-1647.4000000,1471.3000000,1051.1000000,0.0000000,0.0000000,131.9950000); //object(meshfence1_lan) (12)
	CreateDynamicObject(4100,-1658.6000000,1477.8000000,1051.1000000,0.0000000,0.0000000,90.0000000); //object(meshfence1_lan) (13)
	CreateDynamicObject(4100,-1661.7000000,1489.5000000,1051.1000000,0.0000000,0.0000000,220.0050000); //object(meshfence1_lan) (14)
	CreateDynamicObject(4100,-1654.9000000,1501.2000000,1051.1000000,0.0000000,0.0000000,0.0000000); //object(meshfence1_lan) (15)
	CreateDynamicObject(3440,-1627.3000000,1492.8000000,1049.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (2)
	CreateDynamicObject(3440,-1636.2000000,1503.5000000,1050.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (3)
	CreateDynamicObject(3440,-1629.7000000,1479.3000000,1050.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (4)
	CreateDynamicObject(3440,-1640.2000000,1470.4000000,1050.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (5)
	CreateDynamicObject(3440,-1653.9000000,1472.2000000,1050.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (6)
	CreateDynamicObject(3440,-1649.7998000,1505.4004000,1050.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (7)
	CreateDynamicObject(3440,-1662.7998000,1482.9004000,1049.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (8)
	CreateDynamicObject(3440,-1660.6000000,1496.6000000,1049.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (9)
	CreateDynamicObject(4100,-1628.2998000,1486.2998000,1053.1000000,0.0000000,0.0000000,39.9960000); //object(meshfence1_lan) (16)
	CreateDynamicObject(3440,-1629.7002000,1479.2998000,1051.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (14)
	CreateDynamicObject(3440,-1627.3000000,1492.8000000,1051.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (15)
	CreateDynamicObject(3440,-1627.5996000,1490.7002000,1054.2000000,0.0000000,90.0000000,79.9970000); //object(arptpillar01_lvs) (16)
	CreateDynamicObject(3440,-1628.4004000,1486.0996000,1054.2000000,0.0000000,90.0000000,79.9970000); //object(arptpillar01_lvs) (17)
	CreateDynamicObject(3440,-1629.2000000,1481.5000000,1054.2000000,0.0000000,90.0000000,79.9970000); //object(arptpillar01_lvs) (18)
	CreateDynamicObject(4100,-1634.7002000,1474.9004000,1053.1000000,0.0000000,0.0000000,0.0000000); //object(meshfence1_lan) (18)
	CreateDynamicObject(4100,-1647.4000000,1471.3000000,1053.1000000,0.0000000,0.0000000,131.9950000); //object(meshfence1_lan) (19)
	CreateDynamicObject(4100,-1658.6000000,1477.8000000,1053.2000000,0.0000000,0.0000000,90.0000000); //object(meshfence1_lan) (20)
	CreateDynamicObject(4100,-1661.7002000,1489.5000000,1053.2000000,0.0000000,0.0000000,219.9960000); //object(meshfence1_lan) (21)
	CreateDynamicObject(4100,-1654.9000000,1501.2000000,1053.2000000,0.0000000,0.0000000,0.0000000); //object(meshfence1_lan) (22)
	CreateDynamicObject(4100,-1643.2000000,1504.5000000,1053.2000000,0.0000000,0.0000000,131.9950000); //object(meshfence1_lan) (23)
	CreateDynamicObject(4100,-1631.8000000,1498.4000000,1053.1000000,0.0000000,0.0000000,90.0000000); //object(meshfence1_lan) (24)
	CreateDynamicObject(3440,-1640.2000000,1470.4000000,1051.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (19)
	CreateDynamicObject(3440,-1653.9004000,1472.2002000,1051.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (21)
	CreateDynamicObject(3440,-1662.9004000,1482.9004000,1052.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (22)
	CreateDynamicObject(3440,-1660.6000000,1496.6000000,1052.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (23)
	CreateDynamicObject(3440,-1649.8000000,1505.4000000,1051.7000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (24)
	CreateDynamicObject(3440,-1636.2000000,1503.5000000,1051.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (25)
	CreateDynamicObject(3440,-1628.7000000,1494.6000000,1054.2000000,0.0000000,90.0000000,129.9970000); //object(arptpillar01_lvs) (26)
	CreateDynamicObject(3440,-1631.7000000,1498.2000000,1054.2000000,0.0000000,90.0000000,129.9960000); //object(arptpillar01_lvs) (27)
	CreateDynamicObject(3440,-1634.7000000,1501.8000000,1054.2000000,0.0000000,90.0000000,129.9960000); //object(arptpillar01_lvs) (28)
	CreateDynamicObject(3440,-1638.4000000,1503.8000000,1054.2000000,0.0000000,90.0000000,171.9960000); //object(arptpillar01_lvs) (29)
	CreateDynamicObject(3440,-1631.2998000,1477.7998000,1054.2000000,0.0000000,90.0000000,39.9960000); //object(arptpillar01_lvs) (34)
	CreateDynamicObject(3440,-1634.9004000,1474.7998000,1054.2000000,0.0000000,90.0000000,39.9960000); //object(arptpillar01_lvs) (35)
	CreateDynamicObject(3440,-1642.6000000,1504.4000000,1054.2000000,0.0000000,90.0000000,171.9910000); //object(arptpillar01_lvs) (36)
	CreateDynamicObject(3440,-1646.2000000,1504.9000000,1054.2000000,0.0000000,90.0000000,171.9910000); //object(arptpillar01_lvs) (37)
	CreateDynamicObject(3440,-1658.4000000,1498.6000000,1054.2000000,0.0000000,90.0000000,219.9910000); //object(arptpillar01_lvs) (38)
	CreateDynamicObject(3440,-1638.5000000,1471.7998000,1054.2000000,0.0000000,90.0000000,39.9960000); //object(arptpillar01_lvs) (42)
	CreateDynamicObject(3440,-1642.5000000,1470.5996000,1054.2000000,0.0000000,90.0000000,351.9910000); //object(arptpillar01_lvs) (43)
	CreateDynamicObject(3440,-1646.7998000,1471.2002000,1054.2000000,0.0000000,90.0000000,351.9910000); //object(arptpillar01_lvs) (44)
	CreateDynamicObject(3440,-1647.5996000,1505.0996000,1054.2000000,0.0000000,90.0000000,171.9910000); //object(arptpillar01_lvs) (45)
	CreateDynamicObject(3440,-1651.5996000,1504.0000000,1054.2000000,0.0000000,90.0000000,217.9910000); //object(arptpillar01_lvs) (47)
	CreateDynamicObject(3440,-1654.7998000,1501.5000000,1054.2000000,0.0000000,90.0000000,217.9910000); //object(arptpillar01_lvs) (48)
	CreateDynamicObject(3440,-1655.4000000,1473.9000000,1054.2000000,0.0000000,90.0000000,309.9910000); //object(arptpillar01_lvs) (49)
	CreateDynamicObject(3440,-1651.7000000,1471.9000000,1054.2000000,0.0000000,90.0000000,351.9910000); //object(arptpillar01_lvs) (50)
	CreateDynamicObject(3440,-1650.4004000,1471.7002000,1054.2000000,0.0000000,90.0000000,351.9910000); //object(arptpillar01_lvs) (51)
	CreateDynamicObject(3440,-1660.6000000,1480.1000000,1054.2000000,0.0000000,90.0000000,309.9900000); //object(arptpillar01_lvs) (52)
	CreateDynamicObject(3440,-1658.0000000,1477.0000000,1054.2000000,0.0000000,90.0000000,309.9900000); //object(arptpillar01_lvs) (53)
	CreateDynamicObject(3440,-1662.5000000,1485.1000000,1054.2000000,0.0000000,90.0000000,259.9900000); //object(arptpillar01_lvs) (54)
	CreateDynamicObject(3440,-1661.5000000,1481.2002000,1054.2000000,0.0000000,90.0000000,309.9900000); //object(arptpillar01_lvs) (55)
	CreateDynamicObject(3440,-1661.7002000,1489.7002000,1054.2000000,0.0000000,90.0000000,259.9860000); //object(arptpillar01_lvs) (56)
	CreateDynamicObject(3440,-1660.9000000,1494.2000000,1054.2000000,0.0000000,90.0000000,259.9860000); //object(arptpillar01_lvs) (57)
	CreateDynamicObject(3440,-1658.9000000,1498.2000000,1054.2000000,0.0000000,90.0000000,219.9900000); //object(arptpillar01_lvs) (58)
	CreateDynamicObject(2885,-1630.9004000,1497.4004000,1049.2000000,90.0000000,0.0000000,129.9960000); //object(xref_garagedoor) (1)
	CreateDynamicObject(2885,-1641.3000000,1504.3000000,1049.2000000,90.0000000,0.0000000,171.9960000); //object(xref_garagedoor) (2)
	CreateDynamicObject(2885,-1632.4004000,1499.2002000,1049.2000000,90.0000000,0.0000000,129.9960000); //object(xref_garagedoor) (3)
	CreateDynamicObject(2885,-1654.1000000,1501.9000000,1049.2000000,90.0000000,0.0000000,219.9910000); //object(xref_garagedoor) (4)
	CreateDynamicObject(2885,-1644.2002000,1504.7002000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (5)
	CreateDynamicObject(2885,-1656.2000000,1500.2000000,1049.2000000,90.0000000,0.0000000,219.9900000); //object(xref_garagedoor) (6)
	CreateDynamicObject(2885,-1661.4004000,1491.4004000,1049.2000000,90.0000000,0.0000000,259.9860000); //object(xref_garagedoor) (8)
	CreateDynamicObject(2885,-1661.9000000,1488.3000000,1049.2000000,90.0000000,0.0000000,259.9860000); //object(xref_garagedoor) (9)
	CreateDynamicObject(2885,-1659.3000000,1478.6000000,1049.2000000,90.0000000,0.0000000,309.9860000); //object(xref_garagedoor) (10)
	CreateDynamicObject(2885,-1657.6000000,1476.6000000,1049.2000000,90.0000000,0.0000000,309.9850000); //object(xref_garagedoor) (11)
	CreateDynamicObject(2885,-1648.7002000,1471.5000000,1049.2000000,90.0000000,0.0000000,351.9800000); //object(xref_garagedoor) (12)
	CreateDynamicObject(2885,-1645.9000000,1471.1000000,1049.2000000,90.0000000,0.0000000,351.9800000); //object(xref_garagedoor) (13)
	CreateDynamicObject(2885,-1636.1000000,1473.7000000,1049.2000000,90.0000000,0.0000000,39.9800000); //object(xref_garagedoor) (15)
	CreateDynamicObject(2885,-1634.0000000,1475.5000000,1049.2000000,90.0000000,0.0000000,39.9790000); //object(xref_garagedoor) (16)
	CreateDynamicObject(2885,-1635.2000000,1485.7000000,1049.2000000,90.0000000,0.0000000,259.9860000); //object(xref_garagedoor) (17)
	CreateDynamicObject(2885,-1634.6000000,1488.9000000,1049.2000000,90.0000000,0.0000000,259.9860000); //object(xref_garagedoor) (18)
	CreateDynamicObject(2885,-1647.2000000,1475.3000000,1049.2000000,90.0000000,0.0000000,351.9800000); //object(xref_garagedoor) (23)
	CreateDynamicObject(2885,-1651.0996000,1475.9004000,1049.2000000,90.0000000,0.0000000,351.9800000); //object(xref_garagedoor) (24)
	CreateDynamicObject(2885,-1640.0996000,1477.7998000,1049.2000000,90.0000000,0.0000000,351.9800000); //object(xref_garagedoor) (25)
	CreateDynamicObject(2885,-1637.0000000,1489.5996000,1049.2000000,90.0000000,0.0000000,259.9860000); //object(xref_garagedoor) (26)
	CreateDynamicObject(2885,-1635.3000000,1495.5000000,1049.2000000,90.0000000,0.0000000,129.9960000); //object(xref_garagedoor) (27)
	CreateDynamicObject(2885,-1645.4004000,1499.9004000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (28)
	CreateDynamicObject(2885,-1652.4004000,1494.5000000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (30)
	CreateDynamicObject(16092,-1645.0000000,1487.9000000,1063.2000000,0.0000000,90.0000000,180.0000000); //object(des_pipestrut05) (1)
	CreateDynamicObject(16092,-1645.0000000,1487.9004000,1063.2000000,0.0000000,90.0000000,0.0000000); //object(des_pipestrut05) (4)
	CreateDynamicObject(14434,-1647.4004000,1494.7002000,1063.3000000,0.0000000,0.0000000,0.0000000); //object(carter-spotlight42) (2)
	CreateDynamicObject(14434,-1642.9000000,1481.8000000,1062.8000000,0.0000000,0.0000000,178.0000000); //object(carter-spotlight42) (3)
	CreateDynamicObject(16092,-1653.7000000,1487.9000000,1063.2000000,0.0000000,90.0000000,180.0000000); //object(des_pipestrut05) (5)
	CreateDynamicObject(16092,-1636.2002000,1487.9004000,1063.2000000,0.0000000,90.0000000,0.0000000); //object(des_pipestrut05) (6)
	CreateDynamicObject(16092,-1658.3000000,1488.0000000,1063.2000000,0.0000000,90.0000000,179.9950000); //object(des_pipestrut05) (7)
	CreateDynamicObject(16092,-1632.4000000,1487.9000000,1063.2000000,0.0000000,90.0000000,0.0000000); //object(des_pipestrut05) (8)
	CreateDynamicObject(16092,-1625.0000000,1487.9000000,1054.7000000,0.0000000,0.0000000,0.0000000); //object(des_pipestrut05) (9)
	CreateDynamicObject(16092,-1625.0000000,1487.9000000,1049.0000000,0.0000000,0.0000000,0.0000000); //object(des_pipestrut05) (10)
	CreateDynamicObject(16092,-1665.7000000,1488.0000000,1054.8000000,0.0000000,0.0000000,0.0000000); //object(des_pipestrut05) (11)
	CreateDynamicObject(16092,-1665.7000000,1488.0000000,1046.6000000,0.0000000,0.0000000,0.0000000); //object(des_pipestrut05) (12)
	CreateDynamicObject(354,-1644.4000000,1481.6000000,1064.2000000,0.0000000,0.0000000,0.0000000); //object(3)
	CreateDynamicObject(354,-1651.7000000,1489.2000000,1063.4000000,0.0000000,0.0000000,0.0000000); //object(4)
	CreateDynamicObject(354,-1637.7000000,1489.8000000,1064.2000000,0.0000000,0.0000000,0.0000000); //object(5)
	CreateDynamicObject(354,-1644.9000000,1495.4000000,1064.2000000,0.0000000,0.0000000,0.0000000); //object(6)
	CreateDynamicObject(2773,-1655.0000000,1505.2000000,1049.9000000,0.0000000,0.0000000,306.0000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,-1656.9000000,1503.8000000,1049.9000000,0.0000000,0.0000000,309.9970000); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,-1658.6000000,1502.1000000,1049.9000000,0.0000000,0.0000000,313.9960000); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,-1660.3000000,1500.2000000,1049.9000000,0.0000000,0.0000000,321.9950000); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-1661.8000000,1498.0000000,1049.9000000,0.0000000,0.0000000,329.9930000); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,-1662.9000000,1495.7000000,1049.9000000,0.0000000,0.0000000,337.9910000); //object(cj_airprt_bar) (6)
	CreateDynamicObject(2773,-1663.7000000,1493.4000000,1049.9000000,0.0000000,0.0000000,341.9890000); //object(cj_airprt_bar) (7)
	CreateDynamicObject(2773,-1664.3000000,1491.0000000,1049.9000000,0.0000000,0.0000000,351.9880000); //object(cj_airprt_bar) (8)
	CreateDynamicObject(2773,-1664.6000000,1488.5000000,1049.9000000,0.0000000,0.0000000,357.9850000); //object(cj_airprt_bar) (9)
	CreateDynamicObject(2773,-1664.5000000,1485.9000000,1049.9000000,0.0000000,0.0000000,3.9840000); //object(cj_airprt_bar) (10)
	CreateDynamicObject(2773,-1664.1000000,1483.3000000,1049.9000000,0.0000000,0.0000000,11.9830000); //object(cj_airprt_bar) (11)
	CreateDynamicObject(2773,-1663.4000000,1480.7000000,1049.9000000,0.0000000,0.0000000,15.9810000); //object(cj_airprt_bar) (12)
	CreateDynamicObject(2773,-1662.4000000,1478.2000000,1049.9000000,0.0000000,0.0000000,25.9800000); //object(cj_airprt_bar) (13)
	CreateDynamicObject(2773,-1661.1000000,1475.9000000,1049.9000000,0.0000000,0.0000000,33.9770000); //object(cj_airprt_bar) (14)
	CreateDynamicObject(2773,-1659.5000000,1473.7000000,1049.9000000,0.0000000,0.0000000,39.9750000); //object(cj_airprt_bar) (15)
	CreateDynamicObject(2773,-1657.7000000,1471.9000000,1049.9000000,0.0000000,0.0000000,47.9740000); //object(cj_airprt_bar) (16)
	CreateDynamicObject(2773,-1653.0000000,1506.4000000,1049.9000000,0.0000000,0.0000000,295.9970000); //object(cj_airprt_bar) (17)
	CreateDynamicObject(2773,-1650.8000000,1507.3000000,1049.9000000,0.0000000,0.0000000,287.9940000); //object(cj_airprt_bar) (18)
	CreateDynamicObject(2773,-1648.5000000,1508.0000000,1049.9000000,0.0000000,0.0000000,283.9900000); //object(cj_airprt_bar) (19)
	CreateDynamicObject(2773,-1646.1000000,1508.4000000,1049.9000000,0.0000000,0.0000000,275.9860000); //object(cj_airprt_bar) (20)
	CreateDynamicObject(2773,-1643.6000000,1508.5000000,1049.9000000,0.0000000,0.0000000,271.9820000); //object(cj_airprt_bar) (21)
	CreateDynamicObject(2773,-1655.7000000,1470.4000000,1049.9000000,0.0000000,0.0000000,53.9720000); //object(cj_airprt_bar) (24)
	CreateDynamicObject(2773,-1653.6000000,1469.1000000,1049.9000000,0.0000000,0.0000000,61.9700000); //object(cj_airprt_bar) (25)
	CreateDynamicObject(2773,-1651.3000000,1468.0000000,1049.9000000,0.0000000,0.0000000,67.9680000); //object(cj_airprt_bar) (26)
	CreateDynamicObject(2773,-1649.0000000,1467.3000000,1049.9000000,0.0000000,0.0000000,75.9670000); //object(cj_airprt_bar) (27)
	CreateDynamicObject(2773,-1646.6000000,1466.8000000,1049.9000000,0.0000000,0.0000000,83.9650000); //object(cj_airprt_bar) (28)
	CreateDynamicObject(2773,-1644.2000000,1466.5000000,1049.9000000,0.0000000,0.0000000,87.9630000); //object(cj_airprt_bar) (29)
	CreateDynamicObject(2773,-1641.0000000,1508.4000000,1049.9000000,0.0000000,0.0000000,261.9780000); //object(cj_airprt_bar) (30)
	CreateDynamicObject(2773,-1638.5000000,1508.0000000,1049.9000000,0.0000000,0.0000000,255.9740000); //object(cj_airprt_bar) (31)
	CreateDynamicObject(2773,-1636.2000000,1507.3000000,1049.9000000,0.0000000,0.0000000,249.9700000); //object(cj_airprt_bar) (32)
	CreateDynamicObject(2773,-1633.9000000,1506.3000000,1049.9000000,0.0000000,0.0000000,243.9660000); //object(cj_airprt_bar) (33)
	CreateDynamicObject(2773,-1631.8000000,1505.0000000,1049.9000000,0.0000000,0.0000000,235.9620000); //object(cj_airprt_bar) (34)
	CreateDynamicObject(2773,-1629.7000000,1503.4000000,1049.9000000,0.0000000,0.0000000,225.9590000); //object(cj_airprt_bar) (35)
	CreateDynamicObject(2773,-1627.9000000,1501.7000000,1049.9000000,0.0000000,0.0000000,221.9560000); //object(cj_airprt_bar) (36)
	CreateDynamicObject(2773,-1626.4000000,1499.8000000,1049.9000000,0.0000000,0.0000000,215.9510000); //object(cj_airprt_bar) (37)
	CreateDynamicObject(2773,-1625.1000000,1497.8000000,1049.9000000,0.0000000,0.0000000,209.9470000); //object(cj_airprt_bar) (38)
	CreateDynamicObject(2773,-1624.0000000,1495.7000000,1049.9000000,0.0000000,0.0000000,201.9430000); //object(cj_airprt_bar) (39)
	CreateDynamicObject(2773,-1623.2000000,1493.5000000,1049.9000000,0.0000000,0.0000000,195.9400000); //object(cj_airprt_bar) (40)
	CreateDynamicObject(2773,-1622.6000000,1491.2000000,1049.9000000,0.0000000,0.0000000,187.9360000); //object(cj_airprt_bar) (41)
	CreateDynamicObject(2773,-1641.8000000,1466.5000000,1049.9000000,0.0000000,0.0000000,95.9620000); //object(cj_airprt_bar) (43)
	CreateDynamicObject(2773,-1639.3000000,1466.9000000,1049.9000000,0.0000000,0.0000000,101.9600000); //object(cj_airprt_bar) (44)
	CreateDynamicObject(2773,-1636.9000000,1467.6000000,1049.9000000,0.0000000,0.0000000,107.9590000); //object(cj_airprt_bar) (45)
	CreateDynamicObject(2773,-1634.8000000,1468.4000000,1049.9000000,0.0000000,0.0000000,113.9570000); //object(cj_airprt_bar) (46)
	CreateDynamicObject(2773,-1632.7000000,1469.5000000,1049.9000000,0.0000000,0.0000000,119.9560000); //object(cj_airprt_bar) (47)
	CreateDynamicObject(2773,-1630.8000000,1470.8000000,1049.9000000,0.0000000,0.0000000,127.9540000); //object(cj_airprt_bar) (48)
	CreateDynamicObject(2773,-1628.8000000,1472.5000000,1049.9000000,0.0000000,0.0000000,133.9520000); //object(cj_airprt_bar) (49)
	CreateDynamicObject(2773,-1627.2000000,1474.3000000,1049.9000000,0.0000000,0.0000000,141.9510000); //object(cj_airprt_bar) (50)
	CreateDynamicObject(2773,-1625.8000000,1476.1000000,1049.9000000,0.0000000,0.0000000,147.9490000); //object(cj_airprt_bar) (51)
	CreateDynamicObject(2773,-1624.6000000,1478.2000000,1049.9000000,0.0000000,0.0000000,151.9470000); //object(cj_airprt_bar) (52)
	CreateDynamicObject(2773,-1623.7000000,1480.4000000,1049.9000000,0.0000000,0.0000000,163.9460000); //object(cj_airprt_bar) (53)
	CreateDynamicObject(2773,-1623.0000000,1482.7000000,1049.9000000,0.0000000,0.0000000,169.9430000); //object(cj_airprt_bar) (54)
	CreateDynamicObject(2773,-1622.6000000,1485.1000000,1049.9000000,0.0000000,0.0000000,169.9420000); //object(cj_airprt_bar) (55)
	CreateDynamicObject(2773,-1622.4000000,1487.5000000,1049.9000000,0.0000000,0.0000000,177.9420000); //object(cj_airprt_bar) (56)
	CreateDynamicObject(974,-1621.9000000,1456.4000000,1051.9000000,0.0000000,0.0000000,34.0000000); //object(tall_fence) (2)
	CreateDynamicObject(974,-1633.5996000,1451.2002000,1051.9000000,0.0000000,0.0000000,13.9970000); //object(tall_fence) (3)
	CreateDynamicObject(974,-1639.7000000,1450.0000000,1051.9000000,0.0000000,0.0000000,7.9970000); //object(tall_fence) (4)
	CreateDynamicObject(974,-1646.2000000,1449.9000000,1051.9000000,0.0000000,0.0000000,353.9930000); //object(tall_fence) (5)
	CreateDynamicObject(974,-1627.4004000,1453.2998000,1051.9000000,0.0000000,0.0000000,24.0000000); //object(tall_fence) (6)
	CreateDynamicObject(974,-1616.9000000,1460.7000000,1051.9000000,0.0000000,0.0000000,47.9970000); //object(tall_fence) (7)
	CreateDynamicObject(974,-1612.7002000,1465.7002000,1051.9000000,0.0000000,0.0000000,51.9930000); //object(tall_fence) (8)
	CreateDynamicObject(974,-1609.3000000,1471.3000000,1051.9000000,0.0000000,0.0000000,65.9930000); //object(tall_fence) (9)
	CreateDynamicObject(974,-1607.1000000,1477.4000000,1051.9000000,0.0000000,0.0000000,73.9890000); //object(tall_fence) (10)
	CreateDynamicObject(974,-1605.9000000,1483.7000000,1051.9000000,0.0000000,0.0000000,83.9870000); //object(tall_fence) (11)
	CreateDynamicObject(974,-1605.9000000,1490.2000000,1051.9000000,0.0000000,0.0000000,95.9850000); //object(tall_fence) (12)
	CreateDynamicObject(974,-1652.5000000,1451.1000000,1051.9000000,0.0000000,0.0000000,343.9900000); //object(tall_fence) (13)
	CreateDynamicObject(974,-1658.7000000,1453.2000000,1051.9000000,0.0000000,0.0000000,337.9870000); //object(tall_fence) (14)
	CreateDynamicObject(974,-1664.4000000,1456.2000000,1051.9000000,0.0000000,0.0000000,325.9830000); //object(tall_fence) (15)
	CreateDynamicObject(974,-1669.4000000,1460.1000000,1051.9000000,0.0000000,0.0000000,317.9810000); //object(tall_fence) (16)
	CreateDynamicObject(974,-1673.9000000,1464.9000000,1051.9000000,0.0000000,0.0000000,307.9770000); //object(tall_fence) (17)
	CreateDynamicObject(974,-1677.0000000,1470.2000000,1051.9000000,0.0000000,0.0000000,291.9740000); //object(tall_fence) (18)
	CreateDynamicObject(974,-1679.2000000,1475.9000000,1051.9000000,0.0000000,0.0000000,289.9730000); //object(tall_fence) (19)
	CreateDynamicObject(974,-1680.8000000,1482.0000000,1051.9000000,0.0000000,0.0000000,277.9680000); //object(tall_fence) (20)
	CreateDynamicObject(974,-1606.9000000,1496.6000000,1051.9000000,0.0000000,0.0000000,101.9820000); //object(tall_fence) (21)
	CreateDynamicObject(974,-1608.9000000,1502.7000000,1051.9000000,0.0000000,0.0000000,113.9810000); //object(tall_fence) (22)
	CreateDynamicObject(974,-1612.0000000,1508.4000000,1051.9000000,0.0000000,0.0000000,123.9780000); //object(tall_fence) (23)
	CreateDynamicObject(974,-1616.1000000,1513.5000000,1051.9000000,0.0000000,0.0000000,133.9750000); //object(tall_fence) (24)
	CreateDynamicObject(974,-1621.0000000,1517.7000000,1051.9000000,0.0000000,0.0000000,145.9730000); //object(tall_fence) (25)
	CreateDynamicObject(974,-1681.1000000,1488.4000000,1051.9000000,0.0000000,0.0000000,265.9650000); //object(tall_fence) (26)
	CreateDynamicObject(974,-1680.3000000,1494.8000000,1051.9000000,0.0000000,0.0000000,259.9630000); //object(tall_fence) (27)
	CreateDynamicObject(974,-1678.6000000,1501.1000000,1051.9000000,0.0000000,0.0000000,249.9590000); //object(tall_fence) (31)
	CreateDynamicObject(974,-1675.8000000,1506.9000000,1051.9000000,0.0000000,0.0000000,237.9550000); //object(tall_fence) (32)
	CreateDynamicObject(974,-1672.0000000,1512.0000000,1051.9000000,0.0000000,0.0000000,227.9530000); //object(tall_fence) (33)
	CreateDynamicObject(974,-1667.3000000,1516.4000000,1051.9000000,0.0000000,0.0000000,217.9500000); //object(tall_fence) (34)
	CreateDynamicObject(974,-1662.1000000,1520.2000000,1051.9000000,0.0000000,0.0000000,213.9470000); //object(tall_fence) (35)
	CreateDynamicObject(974,-1656.5000000,1523.1000000,1051.9000000,0.0000000,0.0000000,199.9420000); //object(tall_fence) (36)
	CreateDynamicObject(974,-1650.4000000,1524.7000000,1051.9000000,0.0000000,0.0000000,189.9400000); //object(tall_fence) (37)
	CreateDynamicObject(974,-1644.1000000,1525.2000000,1051.9000000,0.0000000,0.0000000,177.9370000); //object(tall_fence) (38)
	CreateDynamicObject(974,-1637.5000000,1524.7000000,1051.9000000,0.0000000,0.0000000,173.9350000); //object(tall_fence) (39)
	CreateDynamicObject(974,-1631.4000000,1523.2000000,1051.9000000,0.0000000,0.0000000,157.9300000); //object(tall_fence) (40)
	CreateDynamicObject(974,-1626.1000000,1520.8000000,1051.9000000,0.0000000,0.0000000,151.9280000); //object(tall_fence) (41)
	CreateDynamicObject(974,-1645.3000000,1498.4000000,1046.7000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (1)
	CreateDynamicObject(974,-1639.3000000,1496.5000000,1046.7000000,0.0000000,0.0000000,144.7500000); //object(tall_fence) (28)
	CreateDynamicObject(974,-1635.6000000,1491.5000000,1046.7000000,0.0000000,0.0000000,107.7450000); //object(tall_fence) (29)
	CreateDynamicObject(974,-1635.6000000,1485.2000000,1046.7000000,0.0000000,0.0000000,71.7430000); //object(tall_fence) (30)
	CreateDynamicObject(974,-1639.3000000,1480.1000000,1046.7000000,0.0000000,0.0000000,35.7410000); //object(tall_fence) (42)
	CreateDynamicObject(974,-1645.3000000,1478.2000000,1046.7000000,0.0000000,0.0000000,359.4860000); //object(tall_fence) (43)
	CreateDynamicObject(974,-1651.2000000,1480.1000000,1046.7000000,0.0000000,0.0000000,324.7360000); //object(tall_fence) (44)
	CreateDynamicObject(974,-1654.9000000,1485.1000000,1046.7000000,0.0000000,0.0000000,288.2340000); //object(tall_fence) (45)
	CreateDynamicObject(974,-1654.9000000,1491.4000000,1046.7000000,0.0000000,0.0000000,252.7320000); //object(tall_fence) (46)
	CreateDynamicObject(974,-1651.2000000,1496.5000000,1046.7000000,0.0000000,0.0000000,216.2290000); //object(tall_fence) (47)
	CreateDynamicObject(2885,-1648.6000000,1498.7000000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (7)
	CreateDynamicObject(2885,-1649.2998000,1493.9004000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (14)
	CreateDynamicObject(2885,-1650.2002000,1487.7002000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (19)
	CreateDynamicObject(2885,-1644.4004000,1488.0996000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (20)
	CreateDynamicObject(2885,-1641.1000000,1491.4000000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (21)
	CreateDynamicObject(2885,-1640.7002000,1493.9004000,1049.2000000,90.0000000,0.0000000,171.9910000); //object(xref_garagedoor) (22)
	CreateDynamicObject(2631,-1645.5000000,1488.8000000,1049.4000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (1)
	// ============================ [ HOSPITAL CAMAS ] ========================= //
	CreateDynamicObject(1800,2272.50000000,1630.30004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (5)
	CreateDynamicObject(1800,2272.50000000,1631.80004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (6)
	CreateDynamicObject(1800,2272.50000000,1633.30004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (7)
	CreateDynamicObject(1800,2272.50000000,1634.80004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (8)
	CreateDynamicObject(1800,2272.50000000,1636.30004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (9)
	CreateDynamicObject(1800,2272.50000000,1637.80004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (10)
	CreateDynamicObject(1800,2272.50000000,1639.30004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (11)
	CreateDynamicObject(1800,2272.50000000,1640.80004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (12)
	CreateDynamicObject(1800,2272.50000000,1642.30004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (14)
	CreateDynamicObject(1800,2272.50000000,1643.80004883,1083.19995117,0.00000000,0.00000000,90.00000000); //object(low_bed_1) (13)
	// =============================== [ OBJETOS HOSPITAL] ===================== //
	CreateDynamicObject(14595,1175.05078125,-1328.92089844,9283.52246094,0.00000000,0.00000000,0.00000000); //object(paperchase02) (1)
	CreateDynamicObject(5020,1178.11718750,-1340.39355469,9281.22070312,0.00000000,0.00000000,0.00000000); //object(mul_las) (1)
	CreateDynamicObject(5020,1178.11621094,-1340.39746094,9282.38867188,0.00000000,0.00000000,0.00000000); //object(mul_las) (2)
	CreateDynamicObject(14598,1175.03491211,-1328.92651367,9283.51562500,0.00000000,0.00000000,0.00000000); //object(paperchase_glass) (1)
    CreateDynamicObject(1523,1174.26074219,-1315.62304688,9279.56933594,0.00000000,0.00000000,0.00000000); //object(gen_doorext10) (1)
    CreateDynamicObject(1704,1170.88537598,-1333.26599121,9279.56933594,0.00000000,0.00000000,180.00000000); //object(kb_chair03) (1)
    CreateDynamicObject(1704,1167.13879395,-1325.55065918,9279.56933594,0.00000000,0.00000000,59.99938965); //object(kb_chair03) (2)
    CreateDynamicObject(1726,1169.29589844,-1324.67285156,9279.56933594,0.00000000,0.00000000,0.00000000); //object(mrk_seating2) (1)
    CreateDynamicObject(2293,1170.42285156,-1331.69628906,9279.49316406,0.00000000,0.00000000,0.00000000); //object(swk_1_fstool) (1)
    CreateDynamicObject(3383,1170.69042969,-1305.55371094,9279.56933594,0.00000000,0.00000000,270.00000000); //object(a51_labtable1_) (1)
    CreateDynamicObject(1671,1180.88574219,-1332.81640625,9280.02929688,0.00000000,0.00000000,159.99938965); //object(swivelchair_a) (1)
    CreateDynamicObject(1705,1182.30761719,-1329.62500000,9279.56933594,0.00000000,0.00000000,319.49890137); //object(kb_chair04) (1)
    CreateDynamicObject(2008,1180.47851562,-1331.94335938,9279.56933594,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
    CreateDynamicObject(1705,1179.29589844,-1330.18066406,9279.56933594,0.00000000,0.00000000,50.74584961); //object(kb_chair04) (2)
    CreateDynamicObject(1808,1183.95117188,-1324.01953125,9279.56933594,0.00000000,0.00000000,319.99877930); //object(cj_watercooler2) (1)
    CreateDynamicObject(1808,1177.81542969,-1334.52636719,9279.54980469,0.00000000,0.00000000,265.99548340); //object(cj_watercooler2) (2)
    CreateDynamicObject(630,1179.38964844,-1324.77050781,9280.59472656,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (1)
    CreateDynamicObject(632,1165.56054688,-1325.03710938,9280.01855469,0.00000000,0.00000000,0.00000000); //object(veg_palmkb7) (1)
    CreateDynamicObject(2245,1169.67956543,-1326.65368652,9280.30957031,0.00000000,0.00000000,0.00000000); //object(plant_pot_11) (1)
    CreateDynamicObject(2251,1167.75500488,-1331.84020996,9280.84375000,0.00000000,0.00000000,0.00000000); //object(plant_pot_20) (1)
    CreateDynamicObject(8659,1158.04785156,-1329.11425781,9280.56933594,0.00000000,0.00000000,90.00000000); //object(shbbyhswall11_lvs) (1)
    CreateDynamicObject(8659,1158.03710938,-1329.11816406,9282.56542969,0.00000000,0.00000000,90.00000000); //object(shbbyhswall11_lvs) (2)
    CreateDynamicObject(1997,1159.63012695,-1304.87231445,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (1)
    CreateDynamicObject(1997,1161.32995605,-1304.96093750,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (2)
    CreateDynamicObject(1997,1163.31799316,-1304.97705078,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (3)
    CreateDynamicObject(1997,1165.15136719,-1304.99511719,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (4)
    CreateDynamicObject(1997,1166.90063477,-1305.08386230,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (5)
    CreateDynamicObject(1997,1168.62402344,-1305.17089844,9279.56933594,0.00000000,0.00000000,0.00000000); //object(hos_trolley) (6)
    CreateDynamicObject(1663,1161.26855469,-1340.80761719,9280.03613281,0.00000000,0.00000000,129.99572754); //object(swivelchair_b) (1)
    CreateDynamicObject(2009,1161.20410156,-1339.68261719,9279.56933594,0.00000000,0.00000000,270.00000000); //object(officedesk2l) (1)
    CreateDynamicObject(2182,1160.41992188,-1342.13964844,9279.76660156,0.00000000,0.00000000,90.00000000); //object(med_office5_desk_1) (1)
    CreateDynamicObject(1727,1164.51782227,-1340.79711914,9279.57617188,0.00000000,0.00000000,239.99818420); //object(mrk_seating2b) (1)
    CreateDynamicObject(1727,1163.76611328,-1338.29174805,9279.56933594,0.00000000,0.00000000,309.99572754); //object(mrk_seating2b) (2)
    CreateDynamicObject(1808,1162.06445312,-1342.57324219,9279.54980469,0.00000000,0.00000000,185.99304199); //object(cj_watercooler2) (3)
    CreateDynamicObject(2921,1177.98413086,-1345.60217285,9282.83789062,0.00000000,0.00000000,330.00000000); //object(kmb_cam) (1)
    CreateDynamicObject(2921,1158.33374023,-1324.11962891,9282.86621094,0.00000000,0.00000000,189.99633789); //object(kmb_cam) (2)
    CreateDynamicObject(2921,1158.86291504,-1342.73022461,9282.51660156,0.00000000,0.00000000,259.99206543); //object(kmb_cam) (3)
    CreateDynamicObject(2921,1183.56713867,-1323.83264160,9282.76855469,0.00000000,0.00000000,89.99145508); //object(kmb_cam) (4)
    CreateDynamicObject(2921,1171.99426270,-1316.56140137,9282.96093750,0.00000000,0.00000000,139.98901367); //object(kmb_cam) (5)
    CreateDynamicObject(3391,1175.07373047,-1305.24548340,9279.56933594,0.00000000,0.00000000,0.00000000); //object(a51_sdsk_ncol2_) (1)
    CreateDynamicObject(3390,1175.03552246,-1308.79077148,9279.56933594,0.00000000,0.00000000,0.00000000); //object(a51_sdsk_ncol1_) (1)
    CreateDynamicObject(3395,1173.14868164,-1304.05212402,9279.56933594,0.00000000,0.00000000,90.00000000); //object(a51_sdsk_3_) (1)
    CreateDynamicObject(1726,1165.95532227,-1333.03588867,9279.56933594,0.00000000,0.00000000,90.00000000); //object(mrk_seating2) (3)
    CreateDynamicObject(2370,1167.54455566,-1332.17419434,9279.16308594,0.00000000,0.00000000,0.00000000); //object(shop_set_1_table) (1)
    CreateDynamicObject(2370,1169.28820801,-1327.00036621,9279.18847656,0.00000000,0.00000000,0.00000000); //object(shop_set_1_table) (2)
    CreateDynamicObject(2855,1168.29309082,-1331.32019043,9280.00976562,0.00000000,0.00000000,0.00000000); //object(gb_bedmags05) (1)
    CreateDynamicObject(2852,1170.00463867,-1326.30114746,9280.03515625,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
    CreateDynamicObject(1997,1160.23461914,-1335.54052734,9279.56933594,0.00000000,0.00000000,90.00000000); //object(hos_trolley) (6)
    CreateDynamicObject(1240,1174.99108887,-1315.88146973,9282.52148438,0.00000000,0.00000000,0.00000000); //object(health) (1)
    CreateDynamicObject(1241,1164.36645508,-1333.81457520,9282.55859375,0.00000000,0.00000000,0.00000000); //object(adrenaline) (1)

	// ========================================================================= HOSPITAL MLC
	AddStaticVehicleEx(492,1508.2000000,2145.3000000,10.7000000,270.0000000,0,0,15); //Greenwood
	AddStaticVehicleEx(492,1508.3000000,2148.7000000,10.7000000,270.0000000,0,0,15); //Greenwood
	AddStaticVehicleEx(492,1508.4000000,2142.1001000,10.7000000,270.0000000,0,0,15); //Greenwood
	AddStaticVehicleEx(492,1508.5000000,2138.5000000,10.7000000,270.0000000,0,0,15); //Greenwood
	AddStaticVehicleEx(521,1508.6000000,2135.1001000,10.5000000,264.0000000,0,0,15); //FCR-900
	AddStaticVehicleEx(521,1508.9000000,2132.0000000,10.5000000,263.9960000,0,0,15); //FCR-900
	AddStaticVehicleEx(521,1508.9000000,2128.8999000,10.5000000,263.9960000,0,0,15); //FCR-900
	AddStaticVehicleEx(521,1508.4000000,2125.3999000,10.5000000,263.9960000,0,0,15); //FCR-900
	// ========================================================================= HOSPITAL ADA
	AddStaticVehicleEx(492,1986.7000000,-1472.4000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(492,1989.3000000,-1472.4000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(492,1992.1000000,-1472.4000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(492,1994.9000000,-1472.5000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(492,1997.8000000,-1472.1000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(492,2000.7000000,-1472.1000000,13.5000000,0.0000000,53,53,15); //Greenwood
	AddStaticVehicleEx(521,1983.5000000,-1472.4000000,13.2000000,0.0000000,53,53,15); //FCR-900
	AddStaticVehicleEx(521,1982.0000000,-1472.3000000,13.2000000,0.0000000,53,53,15); //FCR-900
	AddStaticVehicleEx(521,1980.6000000,-1472.3000000,13.2000000,0.0000000,53,53,15); //FCR-900
	AddStaticVehicleEx(521,1979.2000000,-1472.3000000,13.2000000,0.0000000,53,53,15); //FCR-900
	AddStaticVehicleEx(521,1977.9000000,-1472.3000000,13.2000000,0.0000000,53,53,15); //FCR-900
	AddStaticVehicleEx(521,1976.5000000,-1472.4000000,13.2000000,0.0000000,53,53,15); //FCR-900
	// ========================================================================= HOSPITAL CMD
	CreateDynamicObject(6965, 1630.19995, 1856.69995, 12.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1602.69995, 1858.40002, 9.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1611.59998, 1858.40002, 9.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1594.00000, 1858.40002, 9.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1620.50000, 1858.40002, 9.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1619.69995, 1862.30005, 10.30000,   0.00000, 0.00000, 88.25000);
	CreateDynamicObject(1280, 1624.20020, 1858.20020, 10.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1619.50000, 1854.30005, 10.30000,   0.00000, 0.00000, 270.49799);
	CreateDynamicObject(1280, 1615.50000, 1858.50000, 10.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1281, 1598.19995, 1856.09998, 10.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1608.69995, 1855.50000, 10.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1592.69995, 1856.30005, 10.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 1611.09998, 1862.30005, 10.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 1603.69995, 1862.30005, 10.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1571, 1603.80005, 1855.59998, 11.00000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1281, 1595.30005, 1860.80005, 10.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1591.09998, 1862.00000, 12.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1622.69995, 1862.50000, 12.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1606.59961, 1862.40039, 12.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(738, 1632.80005, 1848.59998, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(738, 1581.09998, 1849.90002, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1216, 1619.50000, 1819.59998, 10.50000,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject(9241, 1607.50000, 1799.69995, 28.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1597.19995, 1854.09998, 10.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1589.80005, 1854.09998, 10.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1624.79980, 1862.40039, 10.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1589.69995, 1862.00000, 10.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1624.79980, 1854.09961, 10.40000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1614.69995, 1854.09998, 10.40000,   0.00000, 0.00000, 0.00000);
	AddStaticVehicleEx(521, 1616.8000, 1833.5000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(521, 1606.0000, 1833.4000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(521, 1608.4000, 1833.3000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(521, 1610.4000, 1833.3000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(521, 1612.8000, 1833.4000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(521, 1614.7000, 1833.4000, 10.5000, 0.0000, -1, -1, 100);
	AddStaticVehicleEx(492, 1617.0000, 1839.7000, 10.7000, 180.0000, -1, -1, 100);
	AddStaticVehicleEx(492, 1612.7000, 1839.7000, 10.7000, 179.9950, -1, -1, 100);
	AddStaticVehicleEx(492, 1608.1000, 1839.7000, 10.7000, 179.9950, -1, -1, 100);
	AddStaticVehicleEx(492, 1595.9000, 1839.9000, 10.7000, 179.9950, -1, -1, 100);
	AddStaticVehicleEx(492, 1604.4004, 1839.5996, 10.7000, 179.9950, -1, -1, 100);
	AddStaticVehicleEx(492, 1600.2002, 1839.7998, 10.7000, 179.9950, -1, -1, 100);
	// ========================================================================= HOSPITAL TCP
	AddStaticVehicleEx(521,-2649.6000000,583.3000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(521,-2650.9000000,583.3000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(521,-2648.2000000,583.1000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(521,-2647.0000000,583.3000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(521,-2646.0000000,583.1000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(521,-2645.0000000,583.2000000,14.1000000,0.0000000,6,6,15); //FCR-900
	AddStaticVehicleEx(492,-2642.9000000,585.2000000,14.4000000,0.0000000,6,6,15); //Greenwood
	AddStaticVehicleEx(492,-2640.1000000,585.3000000,14.4000000,2.0000000,6,6,15); //Greenwood
	AddStaticVehicleEx(492,-2637.0000000,585.6000000,14.4000000,2.0000000,6,6,15); //Greenwood
	AddStaticVehicleEx(492,-2634.1000000,585.8000000,14.4000000,2.0000000,6,6,15); //Greenwood
	AddStaticVehicleEx(492,-2631.1000000,585.9000000,14.4000000,2.0000000,6,6,15); //Greenwood
	AddStaticVehicleEx(492,-2628.0000000,586.7000000,14.4000000,2.0000000,6,6,15); //Greenwood
	// =========================== [ CIDADE DE LS ] ============================ //
	Create3DTextLabel("Elevador\nAperte F",COR_BRANCO, 256.2351,1712.6681,-10.5440,25.0,0); // HQ REPORTER LS
	Create3DTextLabel("Elevador\nAperte F",COR_BRANCO, 764.3279,-1379.8453,13.6471,25.0,0); // HQ REPORTER LS 2
 	Create3DTextLabel("Bar\nAperte F",COR_BRANCO, 2309.8137,-1643.8263,14.8270,25.0,0); // BAR EM LS
	Create3DTextLabel("Sair\nAperte F",COR_BRANCO, 501.8871,-68.1453,998.7578,25.0,0); // SAIR BAR EM LS
	Create3DTextLabel("Boate VIP\nAperte F",COR_BRANCO, 1836.8048,-1682.4952,13.3326, 25.0, 0); // BOATE VIP EM LS
	Create3DTextLabel("Sair\nAperte F",COR_BRANCO, 493.3535,-24.2877,1000.6797, 25.0, 0); // BOATE VIP EM LS
	Create3DTextLabel("Tocar Música\nAperte F",COR_BRANCO, 475.6608,-14.9578,1003.7020, 25.0, 0); // TOCAR MUSICA BOATE VIP EM LS
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 499.7475,-20.7463,1000.6797, 25.0, 0); // BEBIDAS BOATE VIP EM LS
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, -439.9226,-278.0242,4021.9387, 25.0, 0); // BEBIDAS BAR EM LS
	CreatePickup(1318, 1, 256.2351,1712.6681,-10.5440, -1); //HQ REPORTER LS ELEVADOR
	CreatePickup(1318, 1, 764.3279,-1379.8453,13.6471, -1); //HQ REPORTER LS ELEVADOR 2
	CreatePickup(1239, 1, 2309.8137,-1643.8263,14.8270, -1); //BAR EM LS
	CreatePickup(1318, 1, 501.8871,-68.1453,998.7578, -1); // SAIR BAR EM LS
	CreatePickup(1239, 1, 1836.8048,-1682.4952,13.3326, -1); // BOATE VIP EM LS
	CreatePickup(1318, 1, 493.3535,-24.2877,1000.6797, -1); // SAIR BOATE VIP EM LS
	CreatePickup(1239, 1, 475.6608,-14.9578,1003.7020, -1); // TOCAR MUSICA BOATE VIP EM LS
	CreatePickup(1239, 1, 499.7475,-20.7463,1000.6797, -1); // BEBIDAS BOATE VIP EM LS
	CreatePickup(1239, 1, -439.9226,-278.0242,4021.9387, -1); // BEBIDAS BAR EM LS
	// ========================== [ BEBIDAS FAVELAS ] ========================== //
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 2678.4841,-843.3865,71.6868, 25.0, 0); // BEBIDAS MARTINS
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 2805.8796,2227.8782,10.8203, 25.0, 0); // BEBIDAS ANTARES
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 1275.1118,-2028.8030,59.0031, 25.0, 0); // BEBIDAS PRIMAVERA
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 1027.3046,-804.5044,101.8482, 25.0, 0); // BEBIDAS URUBU
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, -2506.3259,-597.4611,132.7554, 25.0, 0); // BEBIDAS JURAMENTO
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 155.7629,-171.7017,1.6554, 25.0, 0); // BEBIDAS MUQUIÇO
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 1891.5981,-2024.6367,13.5469, 25.0, 0); // BEBIDAS SAPO DE CAMARÁ
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO,884.1252,2041.0659,10.8687, 25.0, 0); // BEBIDAS VILA ALIANÇA
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 2537.5159,2084.4548,10.8554, 25.0, 0); // BEBIDAS CESARÃO
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 2142.1326,2760.1511,10.8554, 25.0, 0); // BEBIDAS TRES PONTES
	Create3DTextLabel("Bebidas\nAperte F",COR_BRANCO, 708.4164,-468.2436,16.3359, 25.0, 0); // BEBIDAS BATEAU MOUCHE
	// ====================== [ BEBIDAS FAVELAS PICKUPS ] ====================== //
	CreatePickup(1239, 1, 2678.4841,-843.3865,71.6868, -1); // BEBIDAS MARTINS
	CreatePickup(1239, 1, 2805.8796,2227.8782,10.8203, -1); // BEBIDAS ANTARES
	CreatePickup(1239, 1, 1275.1118,-2028.8030,59.0031, -1); // BEBIDAS PRIMAVERA
	CreatePickup(1239, 1, 1027.3046,-804.5044,101.8482, -1); // BEBIDAS URUBU
	CreatePickup(1239, 1, -2506.3259,-597.4611,132.7554, -1); // BEBIDAS JURAMENTO
	CreatePickup(1239, 1, 155.7629,-171.7017,1.6554, -1); // BEBIDAS MUQUIÇO
	CreatePickup(1239, 1, 1891.5981,-2024.6367,13.5469, -1); // BEBIDAS SAPO DE CAMARÁ
	CreatePickup(1239, 1,884.1252,2041.0659,10.8687, -1); // BEBIDAS VILA ALIANÇA
	CreatePickup(1239, 1, 2537.5159,2084.4548,10.8554, -1); // BEBIDAS CESARÃO
	CreatePickup(1239, 1, 2142.1326,2760.1511,10.8554, -1); // BEBIDAS TRES PONTES
	CreatePickup(1239, 1, 708.4164,-468.2436,16.3359, -1); // BEBIDAS BATEAU MOUCHE
	// =========================== [ CIDADE DE LV ] ============================ //
	Create3DTextLabel("Banco\nAperte F",COR_BRANCO,2014.9452,1184.1688,10.8203,40,0,1); // ENTRAR BANCO LV
	Create3DTextLabel("Sair\nAperte F",COR_BRANCO,2315.4683,-0.0215,26.7422,40,0); // SAIR BANCO LV
 	Create3DTextLabel("Caixa Eletrónico\nAperte F\nPara explodir o caixa",COR_BRANCO,2308.7461,-13.5734,26.7422, 20,0,1);
	CreatePickup(1239, 1, 2014.9452,1184.1688,10.8203, -1); // ENTRAR BANCO LV
	CreatePickup(1239, 1, 2315.4683,-0.0215,26.7422, -1); // SAIR BANCO LV
	CreatePickup(1274, 1, 2308.7461,-13.5734,26.7422, -1); // BOMBA CAIXA ELETRONICO
	// =========================== [ CIDADE DE SF ] ============================ //
	Create3DTextLabel("Acesso as Cameras\nAperte F",COR_BRANCO,256.8570,2036.4297,17.7325,40,0,1); //
	CreatePickup(1239, 1, 256.8570,2036.4297,17.7325, -1); // PICKUP CAMERAS
	// ========================= [ PORTÕES ] =================================== //
	PortaoReporter = CreateDynamicObject(971, 777.70001, -1330.2, 12.9, 0, 0, 358);
	PortaoReporter2 = CreateDynamicObject(971, 778, -1384.8, 13.1, 0, 0, 0);
	portaohelper1 = CreateDynamicObject(971, -1770.4, 980.40002, 25.6, 0, 0, 270);
	portaohelper2 = CreateDynamicObject(971, -1770.4, 989.20001, 25.6, 0, 0, 270);
	portaoPMRJ1 = CreateDynamicObject(980,1539.4004000,-1628.0000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(airportgate) (1)
	portaoPCRJ=CreateDynamicObject(980,2237.6,2453.08,12.45,0.0,0.0,90.000);
	portaoPCRJ2=CreateDynamicObject(971,2334.43,2443.65,7.7906,180,180,56.0002);
	portaoPresidio = CreateDynamicObject(980,308.2002000,1782.5996000,19.4000000,0.0000000,0.0000000,0.0000000); //object(airportgate) (1)
	portaomtx = CreateDynamicObject(980, 1534.8, -1451.6, 15.2, 0, 0, 0);
	// ======================= [ VEÍCULOS HQ REPORTER ] ======================== //
	AddStaticVehicleEx(582,762.7000100,-1333.7000000,13.7000000,358.0000000, 8,8, 15); //Newsvan
	AddStaticVehicleEx(582,766.7000100,-1333.7000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(582,770.5000000,-1333.7000000,13.7000000,358.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(582,758.7999900,-1333.8000000,13.7000000,0.0000000 ,8,8,15); //Newsvan
 	AddStaticVehicleEx(582,754.5999800,-1333.7000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(488,740.7000100,-1367.6000000,25.8000000,0.0000000, 8,8,15); //News Chopper
	AddStaticVehicleEx(586,784.7000100,-1362.1000000,13.1000000,268.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1355.9000000,13.1000000,268.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(582,750.4000200,-1333.6000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(582,746.0999800,-1333.6000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(582,741.9000200,-1333.6000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(582,737.2000100,-1333.5000000,13.7000000,0.0000000, 8,8,15); //Newsvan
	AddStaticVehicleEx(586,784.7999900,-1358.9000000,13.1000000,268.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1365.1000000,13.1000000,268.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1368.0000000,13.1000000,270.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7999900,-1371.0000000,13.1000000,268.0000000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1353.3000000,13.1000000,267.9950000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1350.6000000,13.1000000,267.9950000, 8,8,15); //Wayfarer
	AddStaticVehicleEx(586,784.7000100,-1347.9000000,13.1000000,267.9950000, 8,8,15); //Wayfarer
	/* ============================ [ INTERIOR HQ REPÓRTER ] ========================== */
	new Objeto11= CreateDynamicObject(8661, 264.76300, 1712.81006, -11.54400, 0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(Objeto11, 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	new Objeto12= CreateDynamicObject(8661, 274.38919, 1711.92725, -11.55400, 0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(Objeto12, 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	Parede[0]= CreateDynamicObject(19377, 259.68201, 1707.25903, -14.79500, 0.00000, 0.00000, 90.00000);
	Parede[1]= CreateDynamicObject(19377, 252.68500, 1707.27698, -6.28300, 0.00000, 0.00000, 90.00000);
	Parede[2]= CreateDynamicObject(19377, 259.68201, 1707.25903, -1.84600, 0.00000, 0.00000, 90.00000);
	Parede[3]= CreateDynamicObject(19435, 265.27399, 1707.26294, -9.83300, 0.00000, 0.00000, 90.00000);
	Parede[4]= CreateDynamicObject(19435, 265.27399, 1707.26294, -6.33100, 0.00000, 0.00000, 90.00000);
	Parede[5]= CreateDynamicObject(19435, 265.27399, 1707.26294, -2.82900, 0.00000, 0.00000, 90.00000);
	Parede[6]= CreateDynamicObject(19377, 259.68201, 1718.25903, -14.79500, 0.00000, 0.00000, 90.00000);
	Parede[7]= CreateDynamicObject(19435, 265.27399, 1718.25903, -9.83300, 0.00000, 0.00000, 90.00000);
	Parede[8]= CreateDynamicObject(19435, 265.27399, 1718.25903, -2.82900, 0.00000, 0.00000, 90.00000);
	Parede[9]= CreateDynamicObject(19435, 265.27399, 1718.25903, -6.33100, 0.00000, 0.00000, 90.00000);
	Parede[10]= CreateDynamicObject(19377, 259.68201, 1718.25903, -1.84600, 0.00000, 0.00000, 90.00000);
	Parede[11]= CreateDynamicObject(19377, 252.68800, 1718.23901, -6.28300, 0.00000, 0.00000, 90.00000);
	Parede[12]= CreateDynamicObject(19377, 255.01199, 1713.66003, -6.28300, 0.00000, 0.00000, 0.00000);
	Parede[13]= CreateDynamicObject(19377, 254.99200, 1704.05298, -6.28300, 0.00000, 0.00000, 0.00000);
	Pilar[0]= CreateDynamicObject(18980, 266.18301, 1707.04102, -12.75100, 0.00000, 0.00000, 0.00000);
	Pilar[1]= CreateDynamicObject(18980, 265.89899, 1718.38403, -12.75100, 0.00000, 0.00000, 0.00000);
	Parede[55]= CreateDynamicObject(19377, 266.17099, 1723.19495, -14.79500, 0.00000, 0.00000, 0.00000);
	Parede[14]= CreateDynamicObject(19377, 266.36200, 1702.25598, -14.79500, 0.00000, 0.00000, 0.00000);
	Pilar[2]= CreateDynamicObject(18980, 266.18301, 1697.04102, -12.75100, 0.00000, 0.00000, 0.00000);
	Pilar[3]= CreateDynamicObject(18980, 265.89899, 1727.88403, -12.75100, 0.00000, 0.00000, 0.00000);
	Parede[15]= CreateDynamicObject(19377, 266.36200, 1702.25598, -1.79500, 0.00000, 0.00000, 0.00000);
	Parede[16]= CreateDynamicObject(19377, 266.17099, 1723.19495, -1.79500, 0.00000, 0.00000, 0.00000);
	Parede[17]= CreateDynamicObject(19435, 266.16699, 1719.67004, -7.79100, 0.00000, 0.00000, 0.00000);
	Parede[18]= CreateDynamicObject(19435, 266.16901, 1726.62402, -7.79100, 0.00000, 0.00000, 0.00000);
	Parede[19]= CreateDynamicObject(19435, 266.41599, 1705.75696, -7.79100, 0.00000, 0.00000, 0.00000);
	Parede[20]= CreateDynamicObject(19435, 266.36600, 1698.31299, -7.79100, 0.00000, 0.00000, 0.00000);
	Parede[21]= CreateDynamicObject(19377, 271.12000, 1697.14905, -14.79500, 0.00000, 0.00000, 90.00000);
	Pilar[4]= CreateDynamicObject(18980, 276.39801, 1696.94702, -12.75100, 0.00000, 0.00000, 0.00000);
	Parede[56]= CreateDynamicObject(19377, 281.62701, 1697.23706, -6.28300, 0.00000, 0.00000, 90.00000);
	Parede[57]= CreateDynamicObject(19377, 270.86099, 1728.02905, -14.79500, 0.00000, 0.00000, 90.00000);
	Pilar[5]= CreateDynamicObject(18980, 276.03299, 1728.40295, -12.75100, 0.00000, 0.00000, 0.00000);
	Parede[22]= CreateDynamicObject(19377, 270.86099, 1728.02905, -1.79500, 0.00000, 0.00000, 90.00000);
	Parede[23]= CreateDynamicObject(19377, 281.24799, 1728.05896, -6.28300, 0.00000, 0.00000, 90.00000);
	new Objeto= CreateDynamicObject(19376, 284.23499, 1712.44702, -6.28300, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto, 0, 14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	new Objeto1= CreateDynamicObject(19376, 284.23599, 1702.91504, -6.28300, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto1, 0, 14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	new Objeto3= CreateDynamicObject(19361, 284.25900, 1718.85303, -9.81700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto3, 0, 14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	new Objeto4= CreateDynamicObject(19361, 284.25900, 1718.85303, -6.33700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto4, 0, 14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	new Objeto13= CreateDynamicObject(8661, 275.38699, 1731.05005, -7.09300, 0.00000, 203.00000, 90.00000);
	SetDynamicObjectMaterial(Objeto13, 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	new Objeto14= CreateDynamicObject(8661, 274.84698, 1694.22998, -7.07200, 0.00000, -203.00000, 90.00000);
	SetDynamicObjectMaterial(Objeto14, 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	Parede[24]= CreateDynamicObject(19377, 271.47800, 1697.12305, -1.79500, 0.00000, 0.00000, 90.00000);
	new Objeto6= CreateDynamicObject(19378, 284.22299, 1715.56897, -1.24700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto6, 0, 14385, "trailerkb", "tr_wood1", 0);
	Parede[25]= CreateDynamicObject(19377, 265.05099, 1711.96704, 1.28200, 0.00000, 0.00000, 0.00000);
	Parede[26]= CreateDynamicObject(19377, 265.03699, 1721.60596, 1.28200, 0.00000, 0.00000, 0.00000);
	Janelas[0]= CreateDynamicObject(19446, 271.37299, 1697.11206, -8.59500, 0.00000, 0.00000, 90.00000);
	Janelas[1]= CreateDynamicObject(19446, 266.32700, 1701.47803, -8.59500, 0.00000, 0.00000, 0.00000);
	Janelas[2]= CreateDynamicObject(19446, 266.11301, 1723.03601, -8.59500, 0.00000, 0.00000, 0.00000);
	Janelas[3]= CreateDynamicObject(19446, 260.08401, 1707.21497, -8.59500, 0.00000, 0.00000, 90.00000);
	Janelas[4]= CreateDynamicObject(19446, 259.71301, 1718.27600, -8.59500, 0.00000, 0.00000, 90.00000);
	Janelas[5]= CreateDynamicObject(19446, 276.28201, 1704.59900, -2.61500, 0.00000, 247.00000, 90.00000);
	Janelas[6]= CreateDynamicObject(19446, 274.20499, 1720.64697, -2.61500, 0.00000, -247.00000, 90.00000);
	Janelas[7]= CreateDynamicObject(19446, 270.94601, 1728.08105, -8.59500, 0.00000, 0.00000, 90.00000);
	Janelas[8]= CreateDynamicObject(19446, 255.03300, 1716.44397, -11.75500, 90.00000, 0.00000, 0.00000);
	Janelas[9]= CreateDynamicObject(19446, 255.03400, 1708.87903, -11.75500, 90.00000, 0.00000, 0.00000);
	Janelas[10]= CreateDynamicObject(19446, 294.56329, 1722.11609, -8.68000, 0.00000, 0.00000, 15.41420);
	Janelas[11]= CreateDynamicObject(19446, 289.37570, 1714.85706, -8.78540, 0.00000, 0.00000, 42.97570);
	Janelas[12]= CreateDynamicObject(19431, 284.22870, 1702.11475, -9.51010, -90.00000, 0.00000, 0.00000);
	Janelas[13]= CreateDynamicObject(19431, 284.22650, 1709.04248, -9.72030, -90.00000, 0.00000, 0.00000);
	for(new i = 0; i != 14; i++) SetDynamicObjectMaterial(Janelas[i],0,4828, "airport3_las", "mirrwind1_LAn", 0);
	Parede[27]= CreateDynamicObject(19435, 255.05200, 1717.50195, -8.62700, 0.00000, 0.00000, 0.00000);
	Parede[28]= CreateDynamicObject(19435, 255.05200, 1717.50195, -12.11300, 0.00000, 0.00000, 0.00000);
	Parede[29]= CreateDynamicObject(19435, 255.04300, 1707.70898, -8.62700, 0.00000, 0.00000, 0.00000);
	Parede[30]= CreateDynamicObject(19435, 255.06300, 1707.70996, -12.11300, 0.00000, 0.00000, 0.00000);
	new Objeto2= CreateDynamicObject(19376, 284.20300, 1693.50806, -6.28300, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto2, 0, 14625, "trailerkb", "tr_wood1", 0xFF8B0000);
	new Objeto7= CreateDynamicObject(19378, 284.18799, 1702.05396, -1.24700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto7, 0, 14385, "trailerkb", "tr_wood1", 0);
	CreateDynamicObject(1569, 255.09200, 1711.16296, -11.57500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1569, 255.05000, 1714.15295, -11.57500, 0.00000, 0.00000, -90.00000);
	new MesaB= CreateDynamicObject(19359, 279.05099, 1714.20801, -12.14000, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB1= CreateDynamicObject(19359, 279.04099, 1711.01099, -12.14000, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB1, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB2= CreateDynamicObject(19359, 280.20099, 1708.36499, -12.14000, 0.00000, 0.00000, 47.26300);
	SetDynamicObjectMaterial(MesaB2, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB3= CreateDynamicObject(19359, 280.18399, 1716.81299, -12.14000, 0.00000, 0.00000, -47.26300);
	SetDynamicObjectMaterial(MesaB3, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaC= CreateDynamicObject(19444, 280.79501, 1716.38306, -10.46800, 0.00000, 90.00000, 42.70100);
	SetDynamicObjectMaterial(MesaC, 0, 14625, "mafcasmain", "walp72S");
	new MesaC1= CreateDynamicObject(19444, 279.77701, 1714.03296, -10.47000, 0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(MesaC1, 0, 14625, "mafcasmain", "walp72S");
	new MesaC2= CreateDynamicObject(19444, 279.76700, 1711.17297, -10.47200, 0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(MesaC2, 0, 14625, "mafcasmain", "walp72S");
	new MesaC3= CreateDynamicObject(19444, 280.78699, 1708.81897, -10.46800, 0.00000, 90.00000, -42.70100);
	SetDynamicObjectMaterial(MesaC3, 0, 14625, "mafcasmain", "walp72S");
	new MesaB4= CreateDynamicObject(19359, 279.05099, 1714.20801, -6.64000, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB4, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB5= CreateDynamicObject(19359, 279.04099, 1711.01099, -6.64000, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB5, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB6= CreateDynamicObject(19359, 280.20099, 1708.36499, -6.64000, 0.00000, 0.00000, 47.26300);
	SetDynamicObjectMaterial(MesaB6, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB7= CreateDynamicObject(19359, 280.18399, 1716.81299, -6.64000, 0.00000, 0.00000, -47.26300);
	SetDynamicObjectMaterial(MesaB7, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaC4= CreateDynamicObject(19444, 2870.77301, 1708.83398, -8.31000, 0.00000, 90.00000, -42.70100);
	SetDynamicObjectMaterial(MesaC4, 0, 14625, "mafcasmain", "walp72S");
	new MesaC5= CreateDynamicObject(19444, 279.76700, 1711.17297, -8.30800, 0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(MesaC5, 0, 14625, "mafcasmain", "walp72S");
	new MesaC6= CreateDynamicObject(19444, 279.77701, 1714.03296, -8.31000, 0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(MesaC6, 0, 14625, "mafcasmain", "walp72S");
	new MesaC7= CreateDynamicObject(19444, 280.79501, 1716.38306, -8.30800, 0.00000, 90.00000, 42.70100);
	SetDynamicObjectMaterial(MesaC7, 0, 14625, "mafcasmain", "walp72S");
	new MesaB8= CreateDynamicObject(19359, 282.92700, 1707.29395, -6.64000, 0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(MesaB8, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB9= CreateDynamicObject(19359, 282.90399, 1717.92505, -6.64000, 0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(MesaB9, 0, 14385, "trailerkb", "tr_wood1", 0);
	CreateDynamicObject(1569, 284.18399, 1713.84302, -11.57500, 0.00000, 0.00000, -90.00000);
	new Objeto8= CreateDynamicObject(19378, 284.21701, 1711.69702, -1.24700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto8, 0, 14385, "trailerkb", "tr_wood1", 0);
	new Objeto9=CreateDynamicObject(19378, 286.90799, 1724.27502, -1.24700, 0.00000, 0.00000, 325.39301);
	SetDynamicObjectMaterial(Objeto9, 0, 14385, "trailerkb", "tr_wood1", 0);
	new Objeto10= CreateDynamicObject(19378, 285.91000, 1727.63196, -1.24700, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto10, 0, 14385, "trailerkb", "tr_wood1", 0);
	Parede[54]= CreateDynamicObject(19435, 265.27399, 1707.26294, 0.67200, 0.00000, 0.00000, 90.00000);
	new Objeto5= CreateDynamicObject(19361, 284.25900, 1718.85303, -2.83600, 0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(Objeto5, 0, 14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	CreateDynamicObject(19379, 271.37399, 1720.83704, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 271.38300, 1730.46802, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 260.93799, 1720.83301, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 250.46001, 1720.83899, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 271.37399, 1704.36206, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 271.34500, 1694.75195, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 260.87900, 1704.38306, -11.60800, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 250.37399, 1704.37805, -11.60800, 0.00000, 90.00000, 0.00000);
	ParedeB[0]= CreateDynamicObject(19450, 252.58600, 1709.18298, -13.24800, 0.00000, 0.00000, 90.00000);
	ParedeB[1]= CreateDynamicObject(19450, 271.78699, 1715.98206, -13.24800, 0.00000, 0.00000, 90.00000);
	ParedeB[2]= CreateDynamicObject(19450, 262.19501, 1715.99402, -13.24800, 0.00000, 0.00000, 90.00000);
	ParedeB[3]= CreateDynamicObject(19450, 252.60400, 1715.98596, -13.24800, 0.00000, 0.00000, 90.00000);
	ParedeB[4]= CreateDynamicObject(19450, 276.56201, 1720.71399, -13.24800, 0.00000, 0.00000, 0.00000);
	ParedeB[5]= CreateDynamicObject(19450, 276.56000, 1730.33496, -13.24800, 0.00000, 0.00000, 0.00000);
	ParedeB[6]= CreateDynamicObject(19450, 276.63901, 1704.46106, -13.24800, 0.00000, 0.00000, 0.00000);
	ParedeB[7]= CreateDynamicObject(19450, 276.63901, 1694.88501, -13.24800, 0.00000, 0.00000, 0.00000);
	ParedeB[8]= CreateDynamicObject(19450, 260.58551, 1718.22900, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[9]= CreateDynamicObject(19450, 250.95930, 1718.23071, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[10]= CreateDynamicObject(19450, 266.17139, 1723.30457, -12.82430, 0.00000, 0.00000, 0.00000);
	ParedeB[11]= CreateDynamicObject(19450, 270.99100, 1728.01379, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[12]= CreateDynamicObject(19450, 280.40799, 1728.05615, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[13]= CreateDynamicObject(19450, 289.61221, 1726.21484, -13.29780, 0.00000, 0.00000, 64.96570);
	ParedeB[14]= CreateDynamicObject(19450, 280.94379, 1728.05176, -13.29780, 0.00000, 0.00000, 90.00000);
	ParedeB[15]= CreateDynamicObject(19450, 295.52921, 1718.54346, -13.29780, 0.00000, 0.00000, 15.41420);
	ParedeB[16]= CreateDynamicObject(19450, 293.07141, 1727.53113, -13.29780, 0.00000, 0.00000, 15.41420);
	ParedeB[17]= CreateDynamicObject(19450, 291.88129, 1712.74475, -13.29780, 0.00000, 0.00000, 48.92840);
	ParedeB[18]= CreateDynamicObject(19450, 287.14209, 1717.24585, -13.30780, 0.00000, 0.00000, 42.97570);
	ParedeB[19]= CreateDynamicObject(19450, 280.71970, 1697.25244, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[20]= CreateDynamicObject(19450, 271.15561, 1697.16089, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[21]= CreateDynamicObject(19450, 266.38000, 1698.57483, -12.82430, 0.00000, 0.00000, 0.00000);
	ParedeB[22]= CreateDynamicObject(19450, 266.38019, 1702.17175, -12.82430, 0.00000, 0.00000, 0.00000);
	ParedeB[23]= CreateDynamicObject(19450, 260.87619, 1707.27576, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[24]= CreateDynamicObject(19450, 252.70940, 1707.28198, -12.82430, 0.00000, 0.00000, 90.00000);
	ParedeB[25]= CreateDynamicObject(19450, 318.45963, 1703.35254, -13.33010, 0.20572, 0.30907, -31.80262);
	ParedeB[26]= CreateDynamicObject(19450, 309.07623, 1715.81494, -13.23140, 0.24053, -0.28283, 74.17127);
	ParedeB[27]= CreateDynamicObject(19450, 315.45621, 1710.92493, -13.27739, 0.37101, -0.01386, 26.68924);
	ParedeB[28]= CreateDynamicObject(19450, 312.45395, 1712.81226, -13.25818, 0.33472, -0.16065, 50.18927);
	ParedeB[29]= CreateDynamicObject(19450, 301.21399, 1715.64990, -13.21130, 0.01380, -0.37100, 112.42150);
	ParedeB[30]= CreateDynamicObject(19450, 262.22000, 1709.19604, -13.24800, 0.00000, 0.00000, 90.00000);
	ParedeB[31]= CreateDynamicObject(19450, 271.83499, 1709.19104, -13.24800, 0.00000, 0.00000, 90.00000);
	Parede[31]= CreateDynamicObject(19377, 286.85300, 1703.69800, 3.21600, 0.00000, 0.00000, 32.97300);
	Parede[32]= CreateDynamicObject(19377, 284.26099, 1721.99194, 4.21600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 257.65399, 1715.67395, -11.04200, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2773, 260.23401, 1715.67395, -11.04200, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2773, 257.65701, 1709.53406, -11.04200, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2773, 260.23700, 1709.53406, -11.04200, 0.00000, 0.00000, 90.00000);
	new MesaB10= CreateDynamicObject(19359, 280.70499, 1711.05200, -4.96800, 0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB10, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB11= CreateDynamicObject(19359, 280.71899, 1714.18994, -4.96800, 0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB11, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB12= CreateDynamicObject(19359, 281.33801, 1709.61902, -4.96400, 0.00000, 90.00000, 47.26300);
	SetDynamicObjectMaterial(MesaB12, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB13= CreateDynamicObject(19359, 283.02100, 1708.85803, -4.96800, 0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(MesaB13, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB14= CreateDynamicObject(19359, 281.31601, 1715.78003, -4.96600, 0.00000, 90.00000, 42.68300);
	SetDynamicObjectMaterial(MesaB14, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB15= CreateDynamicObject(19359, 283.21399, 1716.39697, -4.96800, 0.00000, 90.00000, 0.52600);
	SetDynamicObjectMaterial(MesaB15, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB16= CreateDynamicObject(19359, 284.07300, 1713.40796, -4.97000, 0.00000, 90.00000, 0.52600);
	SetDynamicObjectMaterial(MesaB16, 0, 14385, "trailerkb", "tr_wood1", 0);
	new MesaB17= CreateDynamicObject(19359, 284.07501, 1711.33203, -4.96600, 0.00000, 90.00000, 0.52600);
	SetDynamicObjectMaterial(MesaB17, 0, 14385, "trailerkb", "tr_wood1", 0);
	CreateDynamicObject(1726, 271.54678, 1726.33826, -11.64900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1726, 273.85284, 1721.62695, -11.64900, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1726, 270.65109, 1722.96716, -11.64900, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1726, 274.67560, 1725.15686, -11.64900, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2026, 270.32501, 1699.21497, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 274.32501, 1699.21497, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 278.32501, 1699.21497, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 282.32501, 1699.21497, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 263.01999, 1713.25098, -3.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 259.01999, 1713.25098, -3.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 270.34100, 1725.94397, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 274.34100, 1725.94397, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 278.34100, 1725.94397, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2026, 282.34100, 1725.94397, -4.81800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 255.66299, 1717.48596, -10.64400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 255.91000, 1707.78406, -10.64400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 281.56500, 1711.41895, -11.63100, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1715, 281.57800, 1714.90405, -11.63100, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2165, 280.11801, 1713.37000, -11.17300, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2165, 280.09500, 1711.14697, -11.17500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(957, 279.61099, 1712.63196, -8.43900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 279.61099, 1710.13196, -8.43900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 279.61099, 1715.13196, -8.43900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1827, 272.48120, 1724.26489, -11.64600, 0.00000, 0.00000, 0.00000);
	new Objeto15= CreateDynamicObject(8661, 255.13229, 1698.41699, -3.98170, 0.00000, -180.00000, 90.00000);
	SetDynamicObjectMaterial(Objeto15, 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	Vidro[0] = CreateDynamicObject(3851, 298.41315, 1695.92944, -6.31074, 89.62832, 22.89153, -155.44933);
	Vidro[1] = CreateDynamicObject(3851, 301.88504, 1693.80359, -6.33261, 89.62832, 42.63369, -155.44896);
	Vidro[2] = CreateDynamicObject(3851, 296.05643, 1698.89734, -6.26191, 89.62832, 2.88609, -155.44994);
	Parede2[8]= CreateDynamicObject(19443, 299.92667, 1694.74243, -9.88089, -0.27309, 0.25153, -112.80379);
	ParedeB[44]= CreateDynamicObject(19431, 299.92911, 1694.77942, -13.33075, -0.27744, 0.24672, -113.80383);
	ParedeB[45]= CreateDynamicObject(19431, 299.73291, 1694.85815, -13.32975, -0.34265, 0.14295, -132.80400);
	Parede2[9]= CreateDynamicObject(19443, 299.74829, 1694.84546, -9.82980, -0.34265, 0.14295, -132.80464);
	ParedeB[32]= CreateDynamicObject(19358, 298.37604, 1696.12097, -13.31866, -0.34265, 0.14295, -132.80464);
	Parede2[10]= CreateDynamicObject(19443, 296.94388, 1697.41272, -9.80712, -0.34266, 0.14292, -132.81012);
	ParedeB[46]= CreateDynamicObject(19431, 296.99841, 1697.39148, -13.30747, -0.34265, 0.14295, -132.80400);
	Parede2[11]= CreateDynamicObject(19443, 296.81766, 1697.60095, -9.80567, -0.37080, 0.01873, -152.55827);
	ParedeB[47]= CreateDynamicObject(19431, 296.80597, 1697.63220, -13.30553, -0.37088, 0.01713, -152.80550);
	Parede2[12]= CreateDynamicObject(19443, 296.82639, 1697.58032, -6.30574, -0.37080, 0.01873, -152.55827);
	Parede2[13]= CreateDynamicObject(19443, 296.95303, 1697.39282, -6.30719, -0.34266, 0.14292, -132.81012);
	Parede2[14]= CreateDynamicObject(19443, 299.75812, 1694.82458, -6.32987, -0.34265, 0.14295, -132.80464);
	Parede2[15]= CreateDynamicObject(19443, 299.93646, 1694.72180, -6.38096, -0.27309, 0.25153, -112.80379);
	Parede2[16]= CreateDynamicObject(19443, 303.42819, 1693.26184, -9.89904, -0.27309, 0.25153, -112.80379);
	ParedeB[48]= CreateDynamicObject(19431, 303.43320, 1693.30981, -13.34884, -0.27309, 0.25153, -112.80379);
	ParedeB[33]= CreateDynamicObject(19358, 301.58002, 1694.08044, -13.33931, -0.27200, 0.25271, -112.55444);
	Parede2[17]= CreateDynamicObject(19443, 303.43829, 1693.24060, -6.39912, -0.27309, 0.25153, -112.80379);
	Parede2[18]= CreateDynamicObject(19443, 295.08212, 1700.95801, -9.78122, -0.37080, 0.01873, -152.55827);
	ParedeB[49]= CreateDynamicObject(19431, 295.08566, 1700.96899, -13.28123, -0.37088, 0.01713, -152.80550);
	ParedeB[34]= CreateDynamicObject(19358, 295.79944, 1699.58093, -13.29134, -0.37088, 0.01713, -152.80493);
	Parede2[19]= CreateDynamicObject(19443, 295.09164, 1700.93738, -6.28129, -0.37080, 0.01873, -152.55827);
	Chao[0]= CreateDynamicObject(19378, 296.06332, 1703.89929, -12.30258, -0.35438, 269.88931, -172.80238);
	Chao[1]= CreateDynamicObject(19378, 307.26526, 1695.26990, -12.38358, -0.11075, 270.35437, -82.80586);
	Chao[2]= CreateDynamicObject(19378, 297.24023, 1694.33826, -12.36209, -0.35437, 269.88925, -172.80666);
	Chao[3]= CreateDynamicObject(19378, 305.95145, 1705.64490, -12.31890, -0.11075, 270.35437, -82.80586);
	Chao[4]= CreateDynamicObject(19378, 294.82626, 1713.45020, -12.24296, -0.35437, 269.88925, -172.80666);
	Chao[5]= CreateDynamicObject(19378, 316.81506, 1696.48767, -12.40211, -0.11075, 270.35437, -82.80586);
	Chao[6]= CreateDynamicObject(19378, 305.12292, 1715.68909, -12.25748, -0.35437, 269.88925, -172.80666);
	Chao[7]= CreateDynamicObject(19378, 315.49454, 1706.86206, -12.33741, -0.11075, 270.35437, -82.80586);
	Chao[8]= CreateDynamicObject(19378, 315.03348, 1717.37500, -12.27422, -0.11075, 270.35437, -82.80586);
	Chao[9]= CreateDynamicObject(19378, 303.89243, 1725.21692, -12.19802, -0.35437, 269.88925, -172.80666);
	Chao[10]= CreateDynamicObject(19378, 325.03329, 1708.06506, -12.35600, -0.11075, 270.35437, -82.80586);
	Chao[11]= CreateDynamicObject(19378, 314.18271, 1727.42175, -12.21272, -0.35437, 269.88925, -172.80666);
	Chao[12]= CreateDynamicObject(19378, 324.55191, 1718.57715, -12.29275, -0.11075, 270.35437, -82.80586);
	Vidro[3]= CreateDynamicObject(3851, 294.72162, 1702.79602, -6.23534, 89.62832, -17.35923, -155.44908);
	Parede2[20]= CreateDynamicObject(19443, 295.00885, 1701.17651, -9.77973, -0.35436, -0.11077, -172.80885);
	ParedeB[50]= CreateDynamicObject(19431, 295.00668, 1701.19006, -13.27972, -0.35437, -0.11075, -172.80605);
	Parede2[21]= CreateDynamicObject(19443, 295.01886, 1701.15674, -6.27980, -0.35436, -0.11079, -172.81215);
	ParedeB[35]= CreateDynamicObject(19358, 294.75507, 1703.11047, -13.26772, -0.35388, -0.11230, -173.05606);
	Vidro[4]= CreateDynamicObject(3851, 305.77457, 1693.00269, -6.32280, 89.62832, 62.88502, -155.44972);
	Parede2[22]= CreateDynamicObject(19443, 303.62460, 1693.19946, -9.89993, -0.17060, 0.32976, -92.80391);
	ParedeB[51]= CreateDynamicObject(19431, 303.62875, 1693.24426, -13.34975, -0.17347, 0.32826, -93.30388);
	Parede2[0]= CreateDynamicObject(19443, 303.63443, 1693.17957, -6.40000, -0.17063, 0.32974, -92.80878);
	ParedeB[36]= CreateDynamicObject(19358, 305.42325, 1693.15247, -13.35512, -0.16917, 0.33049, -92.55670);
	Parede2[23]= CreateDynamicObject(19443, 307.42081, 1693.00134, -9.91132, -0.17063, 0.32974, -92.80878);
	Parede2[24]= CreateDynamicObject(19443, 307.43097, 1692.98022, -6.41140, -0.17063, 0.32974, -92.80878);
	Parede2[25]= CreateDynamicObject(19443, 294.54376, 1704.94775, -9.75626, -0.35436, -0.11079, -172.81215);
	Parede2[26]= CreateDynamicObject(19443, 294.55450, 1704.92749, -6.25633, -0.35436, -0.11079, -172.81215);
	Vidro[5]= CreateDynamicObject(3851, 294.85391, 1706.78528, -6.23718, 89.62832, -37.36293, -155.44933);
	Parede2[27]= CreateDynamicObject(19443, 294.52103, 1705.16724, -9.75490, -0.29509, -0.22531, 167.18750);
	Parede2[28]= CreateDynamicObject(19443, 294.53098, 1705.14746, -6.25497, -0.29509, -0.22531, 167.18689);
	ParedeB[52]= CreateDynamicObject(19431, 294.58871, 1704.67029, -13.25808, -0.35082, -0.12153, -174.55670);
	ParedeB[53]= CreateDynamicObject(19431, 294.57806, 1705.17102, -13.25511, -0.31362, -0.19871, 172.19069);
	ParedeB[37]= CreateDynamicObject(19358, 294.96976, 1707.06714, -13.24498, -0.29511, -0.22529, 167.19029);
	Parede2[29]= CreateDynamicObject(19443, 295.37164, 1708.87207, -9.73536, -0.29509, -0.22531, 167.18689);
	Parede2[30]= CreateDynamicObject(19443, 295.38159, 1708.85205, -6.23542, -0.29509, -0.22531, 167.18689);
	Vidro[6]= CreateDynamicObject(3851, 309.66467, 1693.62097, -6.32963, 89.62832, 82.62993, -155.44951);
	for(new i = 0; i != 7; i++) SetDynamicObjectMaterial(Vidro[i],0,14625, "mafcasmain", "walp72S");
	Parede2[31]= CreateDynamicObject(19443, 307.64291, 1693.04712, -9.91165, -0.04756, 0.36821, -72.80915);
	Parede2[32]= CreateDynamicObject(19443, 307.65314, 1693.02600, -6.41173, -0.04759, 0.36821, -72.81404);
	ParedeB[54]= CreateDynamicObject(19431, 307.38016, 1693.05835, -13.36095, -0.17349, 0.32824, -93.30863);
	ParedeB[55]= CreateDynamicObject(19431, 307.62708, 1693.11096, -13.36130, -0.04595, 0.36842, -72.55904);
	ParedeB[38]= CreateDynamicObject(19358, 309.85175, 1693.81409, -13.36315, -0.04597, 0.36842, -72.56197);
	Parede2[33]= CreateDynamicObject(19443, 311.27097, 1694.18530, -9.91470, -0.04759, 0.36821, -72.81404);
	Parede2[34]= CreateDynamicObject(19443, 311.28024, 1694.16467, -6.41478, -0.04759, 0.36821, -72.81404);
	ParedeB[56]= CreateDynamicObject(19431, 311.65524, 1694.41235, -13.36448, -0.02500, 0.37043, -69.31141);
	ParedeB[39]= CreateDynamicObject(19358, 312.82941, 1695.38647, -13.36189, 0.08751, 0.36081, -51.81731);
	Parede2[35]= CreateDynamicObject(19462, 312.83508, 1695.30969, -6.87322, 89.62832, 103.64061, -155.44887);
	ParedeB[40]= CreateDynamicObject(19358, 315.11041, 1697.95874, -13.35287, 0.20426, 0.31003, -32.07215);
	ParedeB[57]= CreateDynamicObject(19431, 314.21738, 1696.58582, -13.35856, 0.16354, 0.33332, -39.31557);
	ParedeB[58]= CreateDynamicObject(19450, 317.51749, 1705.18726, -13.30690, 0.37100, -0.01390, 4.76640);
	new Janela1= CreateDynamicObject(19381, 316.90231, 1700.74658, -6.99010, 89.62830, -56.35870, -155.44901);
	SetDynamicObjectMaterial(Janela1, 0, 8555, "vgsdwntwn2", "courthse2_256");
	new Janela2= CreateDynamicObject(19381, 312.81549, 1712.51367, -6.90980, 89.62830, 205.60420, -155.44901);
	SetDynamicObjectMaterial(Janela2, 0, 8555, "vgsdwntwn2", "courthse2_256");
	new Janela3= CreateDynamicObject(19381, 317.55911, 1707.27209, -6.95340, 89.62830, 158.09070, -155.44890);
	SetDynamicObjectMaterial(Janela3, 0, 8555, "vgsdwntwn2", "courthse2_256");
	Parede[33]= CreateDynamicObject(19377, 302.24371, 1698.93445, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[34]= CreateDynamicObject(19377, 310.34610, 1693.72070, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[35]= CreateDynamicObject(19377, 294.14731, 1704.14636, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[36]= CreateDynamicObject(19377, 316.02411, 1702.52673, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[37]= CreateDynamicObject(19377, 321.68430, 1711.31812, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[38]= CreateDynamicObject(19377, 307.92789, 1707.74463, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[39]= CreateDynamicObject(19377, 305.53091, 1721.76831, -6.38640, -0.31260, 90.20030, -122.80140);
	Parede[40]= CreateDynamicObject(19377, 313.04269, 1715.65125, -6.41640, -0.31260, 90.20030, -122.80140);
	CreateDynamicObject(19295, 300.54285, 1705.09521, -5.99345, -0.31261, 0.20030, -122.80143);
	CreateDynamicObject(19295, 309.88370, 1699.64514, -6.05071, -0.31261, 0.20030, -122.80143);
	CreateDynamicObject(19295, 318.37936, 1713.14258, -5.99403, -0.31261, 0.20030, -122.80143);
	CreateDynamicObject(19295, 309.23831, 1718.80103, -5.93609, -0.31261, 0.20030, -122.80143);
	new Janela4= CreateDynamicObject(19381, 316.30371, 1709.27795, -6.93820, 89.62830, 182.08881, -155.44881);
	SetDynamicObjectMaterial(Janela4, 0, 8555, "vgsdwntwn2", "courthse2_256");
	Parede2[36]= CreateDynamicObject(19379, 301.61386, 1715.79993, -6.86027, 89.62832, 88.08896, -155.44896);
	Parede2[37]= CreateDynamicObject(19379, 312.91031, 1714.70776, -7.64712, 89.62832, 229.59921, -155.44887);
	Parede2[38]= CreateDynamicObject(19462, 304.27332, 1717.16736, -7.47138, 89.62832, 49.64052, -155.44867);
	Parede2[39]= CreateDynamicObject(19443, 306.20059, 1716.64075, -6.71866, 89.62832, 48.63708, -155.44867);
	Parede2[40]= CreateDynamicObject(19462, 306.73859, 1718.31030, -7.47128, 89.62832, 125.63766, -155.44919);
	Parede2[41]= CreateDynamicObject(19462, 308.82205, 1717.67041, -7.48066, 89.62832, 125.63560, -155.44919);
	Parede2[42]= CreateDynamicObject(19462, 311.08994, 1718.22998, -7.48347, 89.62832, 33.63534, -155.44887);
	Parede2[43]= CreateDynamicObject(19462, 314.01526, 1716.40063, -7.50212, 89.62832, 33.63054, -155.44908);
	Parede2[44]= CreateDynamicObject(19462, 316.95413, 1714.59229, -7.52069, 89.62832, 33.63054, -155.44908);
	Parede2[45]= CreateDynamicObject(19462, 318.63092, 1711.99939, -7.54048, 89.62832, -16.36987, -155.44867);
	Parede2[46]= CreateDynamicObject(19462, 320.65973, 1710.47534, -7.55492, 89.62832, 73.62650, -155.44933);
	Parede2[47]= CreateDynamicObject(19462, 323.30777, 1712.16772, -7.55208, 89.62832, 123.62608, -155.44896);
	Parede2[48]= CreateDynamicObject(19462, 325.10120, 1715.08887, -7.53969, 89.62832, 123.62488, -155.44896);
	Parede2[49]= CreateDynamicObject(19462, 308.43771, 1721.35059, -7.45794, 89.62832, 126.88546, -155.44904);
	Parede2[50]= CreateDynamicObject(19462, 307.77649, 1723.60864, -7.44285, 89.62832, 216.88261, -155.44922);
	Parede2[51]= CreateDynamicObject(19379, 321.85309, 1719.72339, -7.51663, 89.62832, 28.08423, -155.44919);
	Parede2[52]= CreateDynamicObject(19379, 312.87634, 1722.55029, -7.47581, 89.62832, 68.08232, -155.44897);
	Parede[41]= CreateDynamicObject(19377, 306.09543, 1722.15234, -8.92194, -0.24529, 90.27871, -106.80135);
	Parede[42]= CreateDynamicObject(19377, 313.13977, 1722.85986, -8.93673, -0.32583, 90.17797, -126.80538);
	Parede[43]= CreateDynamicObject(19377, 319.97711, 1715.94897, -8.99586, -0.32583, 90.17797, -126.80538);
	Parede2[53]= CreateDynamicObject(19462, 306.87091, 1716.44019, -7.47140, 89.62830, 49.64050, -155.44870);
	for(new i = 0; i != 54; i++) SetDynamicObjectMaterial(Parede2[i],0,14385, "trailerkb", "tr_wood1");
	CreateDynamicObject(19295, 310.40753, 1709.43628, -5.99442, -0.31261, 0.20030, -122.80143);
	CreateDynamicObject(10154, 312.98114, 1695.43787, -3.14878, -0.08918, -0.36040, 128.44756);
	CreateDynamicObject(10154, 312.96588, 1695.47156, -8.82366, -0.08915, -0.36041, 128.44389);
	CreateDynamicObject(10154, 312.95093, 1695.50403, -14.37355, -0.08915, -0.36041, 128.44389);
	ParedeB[41]= CreateDynamicObject(19358, 295.20190, 1708.11548, -13.24500, -0.29510, -0.22530, 167.19031);
	Parede2[53]= CreateDynamicObject(19462, 306.87091, 1716.44019, -7.47140, 89.62830, 49.64050, -155.44870);
	Parede[44]= CreateDynamicObject(19377, 289.85272, 1726.10510, -6.28300, 0.00000, 0.00000, 64.96571);
	Parede[45]= CreateDynamicObject(19377, 295.57150, 1718.47644, -7.32922, 0.00000, 0.00000, 15.41420);
	CreateDynamicObject(19377, 293.06870, 1727.54724, -7.32920, 0.00000, 0.00000, 15.41420);
	Parede[46]= CreateDynamicObject(19377, 287.52640, 1716.83264, -7.32920, 0.00000, 0.00000, 42.97570);
	Parede[47]= CreateDynamicObject(19377, 291.85971, 1712.75317, -7.32920, 0.00000, 0.00000, 48.92840);
	Chao[13]= CreateDynamicObject(19378, 290.87601, 1719.80200, -12.20300, -0.35440, 269.88931, -172.80670);
	Chao[14]= CreateDynamicObject(19378, 288.58801, 1723.96375, -12.17300, -0.35440, 269.88931, -172.80670);
	for(new i = 0; i != 15; i++) SetDynamicObjectMaterial(Chao[i],0,14594, "papaerchaseoffice", "ab_mottleGrey");
	CreateDynamicObject(14394, 285.29611, 1724.23865, -12.37660, 0.00000, 0.00000, 180.36670);
	Parede[48]= CreateDynamicObject(19377, 281.24799, 1728.05896, -16.73310, 0.00000, 0.00000, 90.00000);
	Parede[49]= CreateDynamicObject(19377, 289.85269, 1726.10510, -16.76040, 0.00000, 0.00000, 64.96570);
	CreateDynamicObject(18981, 296.69321, 1715.53674, -6.00500, 0.00000, 90.00000, 0.00000);
	Pilar[6]= CreateDynamicObject(18980, 284.66269, 1720.95483, -17.99440, 0.00000, 0.00000, 0.00000);
	Pilar[7]= CreateDynamicObject(18980, 284.80704, 1727.59436, -18.01780, 0.00000, 0.00000, 0.00000);
	Parede[50]= CreateDynamicObject(19377, 301.09207, 1701.06604, -6.44640, -0.31260, 90.20030, -122.80140);
	Parede[51]= CreateDynamicObject(19377, 302.41791, 1713.95142, -6.43640, -0.31260, 90.20030, -122.80140);
	Parede[52]= CreateDynamicObject(19377, 300.27475, 1710.72375, -6.43640, -0.31260, 90.20030, -122.80140);
	Parede[53]= CreateDynamicObject(19377, 306.69449, 1718.06946, -6.42640, -0.31260, 90.20030, -122.80140);
	for(new i = 0; i != 58; i++) SetDynamicObjectMaterial(Parede[i],0,14625, "mafcasmain", "ab_hosWallUpr");
	Pilar[8]= CreateDynamicObject(18980, 284.67169, 1719.97388, -18.98230, 0.00000, 0.00000, 0.00000);
	for(new i = 0; i != 9; i++) SetDynamicObjectMaterial(Pilar[i],0,5711,"cemetery_law","cemebuild03_law");
	CreateDynamicObject(1897, 276.62921, 1709.10315, -9.51580, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1897, 276.65671, 1709.10571, -10.42530, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19325, 274.52591, 1709.20703, -11.73450, -90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, 272.34949, 1709.18799, -10.43530, 0.00000, 180.00000, 270.00000);
	CreateDynamicObject(1897, 272.35571, 1709.20691, -9.51580, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1897, 271.36630, 1709.20496, -8.53560, 90.00000, 0.00000, 270.00000);
	CreateDynamicObject(1897, 270.15549, 1709.17578, -10.43530, 0.00000, 180.00000, 270.00000);
	CreateDynamicObject(1897, 270.34149, 1709.18323, -9.52580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 268.14911, 1709.20276, -11.73450, -90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, 266.00739, 1709.17102, -10.43530, 0.00000, 180.00000, 270.00000);
	CreateDynamicObject(1897, 266.20190, 1709.17236, -9.52580, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 266.12851, 1707.10205, -11.73450, -90.00000, 0.00000, 0.00000);
	CreateDynamicObject(1897, 273.53922, 1709.20435, -8.53560, 90.00000, 0.00000, 270.00000);
	CreateDynamicObject(1897, 275.56729, 1709.17700, -8.53560, 90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, 267.19321, 1709.19287, -8.54560, 90.00000, 0.00000, 270.00000);
	CreateDynamicObject(1897, 269.16269, 1709.16150, -8.54930, 90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, 266.14420, 1708.10156, -8.53560, 90.00000, 0.00000, 180.00000);
	CreateDynamicObject(19325, 276.64771, 1707.12341, -11.73450, -90.00000, 0.00000, 0.00000);
	CreateDynamicObject(1897, 276.64441, 1708.09094, -8.53560, 90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1897, 276.61880, 1706.14026, -8.53560, 90.00000, 0.00000, 360.00000);
	CreateDynamicObject(1897, 276.63541, 1704.94934, -10.42530, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(1897, 276.64120, 1705.14575, -9.51580, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19325, 276.62671, 1701.69617, -10.50970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 276.62250, 1695.06104, -10.50970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1897, 276.60779, 1702.09155, -8.53560, 90.00000, 0.00000, 360.00000);
	CreateDynamicObject(1897, 276.63800, 1703.94751, -8.53560, 90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1897, 276.63760, 1700.89734, -10.42530, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(1897, 276.63239, 1701.08667, -9.51580, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1897, 276.61230, 1697.67090, -8.53560, 90.00000, 0.00000, 360.00000);
	CreateDynamicObject(1897, 276.63770, 1699.88892, -8.53560, 90.00000, 0.00000, 180.00000);
	new TV= CreateDynamicObject(2737, 266.32260, 1723.45386, -10.54860, 0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(TV, 0, 1786, "cj_tv", "CJ_Black_metal", 0xFF888888);
	SetDynamicObjectMaterial(TV, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	CreateDynamicObject(2313, 266.26410, 1722.56128, -11.52290, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1840, 266.20090, 1724.55933, -11.04650, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1840, 266.21271, 1721.97571, -11.04650, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2227, 266.59509, 1722.25793, -11.03560, -180.00000, 0.00000, 90.00000);
	CreateDynamicObject(2227, 266.60611, 1724.83545, -11.02560, -179.97000, 0.00000, 90.00000);
	Mesas[0]= CreateDynamicObject(2198, 273.79718, 1698.91895, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[1]= CreateDynamicObject(2198, 274.81641, 1699.92896, -11.52270, 0.00000, 0.00000, 180.00000);
	Mesas[2]= CreateDynamicObject(2198, 274.70303, 1703.18286, -11.52270, 0.00000, 0.00000, 180.00000);
	Mesas[3]= CreateDynamicObject(2198, 273.68341, 1702.16675, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[4]= CreateDynamicObject(2198, 274.60449, 1706.56311, -11.52270, 0.00000, 0.00000, 180.00000);
	Mesas[5]= CreateDynamicObject(2198, 273.58429, 1705.55750, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[6]= CreateDynamicObject(2198, 267.89468, 1698.94592, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[7]= CreateDynamicObject(2198, 268.91611, 1699.94446, -11.52270, 0.00000, 0.00000, 180.00000);
	Mesas[8]= CreateDynamicObject(2198, 267.79929, 1702.11182, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[9]= CreateDynamicObject(2198, 268.81580, 1703.09204, -11.52270, 0.00000, 0.00000, 180.00000);
	Mesas[10]= CreateDynamicObject(2198, 267.69070, 1705.58179, -11.52270, 0.00000, 0.00000, 0.00000);
	Mesas[11]= CreateDynamicObject(2198, 268.71170, 1706.56824, -11.52270, 0.00000, 0.00000, 180.00000);
	for(new i = 0; i != 12; i++) SetDynamicObjectMaterial(Mesas[i],4,14625, "mafcasmain", "walp72S");
	CreateDynamicObject(2356, 268.12070, 1707.23743, -11.52000, 0.00000, 0.00000, 217.40160);
	CreateDynamicObject(2356, 267.93799, 1704.76172, -11.52040, 0.00000, 0.00000, 7.98710);
	CreateDynamicObject(2356, 268.35181, 1703.85706, -11.51990, 0.00000, 0.00000, 191.58299);
	CreateDynamicObject(2356, 268.10321, 1701.39490, -11.52060, 0.00000, 0.00000, 11.14439);
	CreateDynamicObject(2356, 268.40219, 1700.76257, -11.52060, 0.00000, 0.00000, 201.71809);
	CreateDynamicObject(2356, 268.20651, 1698.09888, -11.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, 274.17679, 1698.06140, -11.51980, 0.00000, 0.00000, 14.00380);
	CreateDynamicObject(2356, 274.40530, 1700.67578, -11.52030, 0.00000, 0.00000, 195.40540);
	CreateDynamicObject(2356, 274.06070, 1701.36646, -11.51980, 0.00000, 0.00000, 18.99930);
	CreateDynamicObject(2356, 274.50040, 1703.91882, -11.52050, 0.00000, 0.00000, 156.06281);
	CreateDynamicObject(2356, 274.07629, 1704.77246, -11.52070, 0.00000, 0.00000, 32.74850);
	CreateDynamicObject(2356, 274.22983, 1707.33765, -11.52124, 0.00000, 0.00000, 185.55672);
	CreateDynamicObject(14391, 300.19531, 1701.00562, -11.29360, 0.00000, 0.00000, 187.00000);
	ParedeB[42]= CreateDynamicObject(19358, 300.89011, 1702.14978, -12.88200, 0.00000, 0.00000, 6.64240);
	ParedeB[43]= CreateDynamicObject(19358, 301.15250, 1699.93372, -12.88200, 0.00000, 0.00000, 6.64240);
	for(new i = 0; i != 59; i++) SetDynamicObjectMaterial(ParedeB[i],0,14385, "trailerkb", "tr_wood1", 0xFF8B0000);
	CreateDynamicObject(2356, 298.69958, 1700.08435, -12.24686, 0.00000, 0.00000, 299.89844);
	CreateDynamicObject(2423, 312.66449, 1705.32751, -12.25650, 0.00000, 0.00000, 187.80791);
	CreateDynamicObject(2424, 312.72479, 1704.34668, -12.25630, 0.00000, 0.00000, 277.11938);
	CreateDynamicObject(2424, 312.83481, 1703.42725, -12.25630, 0.00000, 0.00000, 277.11938);
	CreateDynamicObject(2423, 312.95380, 1702.52222, -12.25630, 0.00000, 0.00000, 277.79010);
	CreateDynamicObject(1726, 312.15820, 1708.00293, -12.24170, 0.00000, 0.00000, 277.10730);
	new Chao1= CreateDynamicObject(18766, 312.60779, 1704.68347, -12.70640, 90.00000, 0.00000, 99.86900);
	SetDynamicObjectMaterial(Chao1, 0, 18056, "mp_diner1", "dinerfloor01_128");
	new not= CreateDynamicObject(2265, 312.75980, 1703.97290, -10.71230, -90.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(not, 1,2169,"cj_office","of_key_256");
	new not1= CreateDynamicObject(2265, 312.96719, 1704.69421, -10.88170, -14.00000, -90.00000, 90.00000);
	SetDynamicObjectMaterial(not1, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	new not2= CreateDynamicObject(2265, 312.01971, 1703.97925, -11.12770, 16.00000, -90.00000, 269.26837);
	SetDynamicObjectMaterial(not2, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	new Sofa= CreateDynamicObject(1759, 313.71759, 1704.50977, -12.20860, 0.00000, 0.00000, 260.92529);
	SetDynamicObjectMaterial(Sofa, 0, 2356, "cj_office", "CJ_CUSHION2");
	SetDynamicObjectMaterial(Sofa, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	CreateDynamicObject(16091, 312.86261, 1703.45532, -6.51020, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(16091, 312.86261, 1703.45532, -5.81080, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(19143, 312.96960, 1709.39661, -7.29930, 0.00000, 0.00000, 179.85460);
	CreateDynamicObject(19143, 309.48181, 1709.41736, -7.29930, 0.00000, 0.00000, 186.35548);
	CreateDynamicObject(19143, 306.12991, 1709.37512, -7.31930, 0.00000, 0.00000, 241.56039);
	CreateDynamicObject(19143, 306.16241, 1706.53760, -7.26990, 0.00000, 0.00000, 267.10239);
	CreateDynamicObject(19143, 306.18680, 1703.75391, -7.26990, 0.00000, 0.00000, 267.10239);
	CreateDynamicObject(19143, 306.24710, 1697.45496, -7.26990, 0.00000, 0.00000, 314.15039);
	CreateDynamicObject(19143, 309.05042, 1697.48511, -7.30320, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19143, 312.27731, 1697.48523, -7.30320, 0.00000, 0.00000, 0.00000);
	new TV1= CreateDynamicObject(2737, 317.51959, 1703.36108, -9.44810, 0.00000, 0.00000, 268.94009);
	SetDynamicObjectMaterial(TV1, 0, 1786, "cj_tv", "CJ_Black_metal", 0xFF888888);
	SetDynamicObjectMaterial(TV1, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	new TV2= CreateDynamicObject(2737, 317.42929, 1704.84790, -9.44810, 0.00000, 0.00000, 282.01520);
	SetDynamicObjectMaterial(TV2, 0, 1786, "cj_tv", "CJ_Black_metal", 0xFF888888);
	SetDynamicObjectMaterial(TV2, 1, 1786, "cj_tv", "CJ_Black_metal", 0xFF000000);
	CreateDynamicObject(2985, 300.44968, 1707.63306, -12.21893, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 301.19690, 1707.66272, -11.55380, -180.00000, 0.00000, 270.00000);
	CreateDynamicObject(1886, 300.59570, 1707.62976, -11.55380, -180.00000, 0.00000, 90.00000);
	CreateDynamicObject(1886, 300.28571, 1707.62781, -11.56390, -180.00000, 0.00000, 90.00000);
	CreateDynamicObject(1478, 301.13199, 1707.49646, -11.77870, 0.00000, -180.00000, 0.00000);
	CreateDynamicObject(1478, 301.10980, 1707.83789, -11.77470, 0.00000, -180.00000, 180.00000);
	CreateDynamicObject(2343, 299.64941, 1707.64600, -11.64360, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1516, 300.83200, 1707.60095, -12.70780, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1516, 299.87521, 1707.58911, -12.70730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1516, 303.37961, 1695.81030, -12.79580, 0.00000, 0.00000, 24.00390);
	CreateDynamicObject(1516, 302.41010, 1695.38391, -12.79580, 0.00000, 0.00000, 24.00390);
	CreateDynamicObject(2343, 302.24429, 1695.39661, -11.71670, 0.00000, 0.00000, 25.87740);
	CreateDynamicObject(2985, 303.06711, 1695.64404, -12.30020, 0.00000, 0.00000, 25.09250);
	CreateDynamicObject(1886, 303.01709, 1695.66150, -11.62380, -180.00000, 0.00000, 293.43149);
	CreateDynamicObject(1886, 303.50351, 1695.87341, -11.62380, -180.00000, 0.00000, 293.43149);
	CreateDynamicObject(1886, 303.77350, 1695.98340, -11.62380, -180.00000, 0.00000, 293.43149);
	CreateDynamicObject(1478, 303.65659, 1696.04810, -11.85470, 0.00000, -180.00000, 212.74850);
	CreateDynamicObject(1478, 303.83661, 1695.78809, -11.85470, 0.00000, -180.00000, 27.48060);
	new Texto = CreateObject(19358, 281.1695, 1697.2445, -8.3700, 0.00000, 0.00000, 270.00000);
	SetObjectMaterialText(Texto, " {FFFFFF}Rec", 0, 50, "Impact", 50, 0, 0xFF006400, 0, 0);
	new Texto1 = CreateObject(19358, 278.95291, 1697.24048, -8.37000, 0.00000, 0.00000, 270.00000);
	SetObjectMaterialText(Texto1, "{FFFFFF}ord", 0, 50, "Impact", 50, 0, 0xFF006400, 0, 0);

	// ========================== [ VEÍCULOS HQ HELPER ] ======================== //
	VehHelper[1] = AddStaticVehicleEx(521,-1720.0000000,1036.6000000,17.3000000,268.0000000, 240,240,15); //FCR 900
	VehHelper[2] = AddStaticVehicleEx(521,-1720.1000000,1032.6000000,17.3000000,267.9950000, 240,240,15); //FCR 900
	VehHelper[3] = AddStaticVehicleEx(521,-1720.3000000,1028.5000000,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[4] = AddStaticVehicleEx(521,-1720.4000000,1023.9000000,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[5] = AddStaticVehicleEx(521,-1721.0000000,1012.3000000,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[6] = AddStaticVehicleEx(521,-1721.1000000,1008.1000000,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[7] = AddStaticVehicleEx(521,-1721.2000000,1003.6000000,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[8] = AddStaticVehicleEx(521,-1721.3000000,999.7000100,17.3000000,267.9950000,240,240,15); //FCR 900
	VehHelper[9] = AddStaticVehicleEx(415,-1735.8000000,1008.0000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[10] = AddStaticVehicleEx(415,-1735.9000000,1012.0000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[11] = AddStaticVehicleEx(415,-1735.9000000,1016.1000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[12] = AddStaticVehicleEx(415,-1735.9000000,1020.2000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[13] = AddStaticVehicleEx(415,-1735.9000000,1024.3000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[14] = AddStaticVehicleEx(415,-1735.9000000,1028.4000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[15] = AddStaticVehicleEx(415,-1735.9000000,1032.7000000,17.4000000,90.0000000,240,240,15); //Cheetah
	VehHelper[16] = AddStaticVehicleEx(415,-1735.8000000,1036.7000000,17.4000000,90.0000000,240,240,15); //Cheetah

	//=============================== [DP PCRJ LV] ============================= //
	CreateDynamicObject(1337, 2289.8779296875, 2485.0859375, 17.285743713379, 0, 0, 0);//DP LV Objeto (2)
	CreateDynamicObject(987, 2281.9409179688, 2502.6938476563, 10.3203125, 0, 0, 0);//DP LV Objeto (3)
	CreateDynamicObject(987, 2270.0510253906, 2502.6647949219, 10.298473358154, 0, 0, 0);//DP LV Objeto (4)
	CreateDynamicObject(987, 2258.2131347656, 2502.6833496094, 10.298473358154, 0, 0, 0);//DP LV Objeto (5)
	CreateDynamicObject(987, 2246.8132324219, 2502.6723632813, 10.295305252075, 0, 0, 0);//DP LV Objeto (6)
	CreateDynamicObject(987, 2237.462890625, 2502.6950683594, 10.295305252075, 0, 0, 0);//DP LV Objeto (7)
	CreateDynamicObject(987, 2237.8383789063, 2490.7131347656, 10.312507629395, 0, 0, 90);//DP LV Objeto (8)
	CreateDynamicObject(987, 2237.8393554688, 2478.9033203125, 10.323474884033, 0, 0, 90);//DP LV Objeto (9)
	CreateDynamicObject(987, 2237.8598632813, 2467.0317382813, 10.331087112427, 0, 0, 90);//DP LV Objeto (10)
	CreateDynamicObject(987, 2237.8767089844, 2458.5717773438, 10.325777053833, 0, 0, 90);//DP LV Objeto (11)
	CreateDynamicObject(987, 2237.8547363281, 2437.0964355469, 10.423471450806, 0, 0, 90);//DP LV Objeto (12)
	CreateDynamicObject(987, 2237.8872070313, 2430.5041503906, 10.420303344727, 0, 0, 90);//DP LV Objeto (13)
	CreateDynamicObject(987, 2238.1240234375, 2430.9208984375, 10.408324241638, 0, 0, 0);//DP LV Objeto (14)

 	// =================== [ VEÍCULOS PCRJ ] ===================================== //
	carPCRJ[1] = CreateVehicle(490,2282.1152,2477.3601,10.7138,179.0098,0,1,60000); //
	carPCRJ[2] = CreateVehicle(490,2277.6846,2477.2725,10.5603,180.1091,0,1,60000); //
	carPCRJ[3] = CreateVehicle(490,2273.5161,2477.8120,10.7123,180.5015,0,1,60000); //
	carPCRJ[4] = CreateVehicle(490,2269.2578,2477.8269,10.7130,179.5302,0,1,60000); //
	carPCRJ[5] = CreateVehicle(490,2260.4070,2477.9712,10.7131,179.6287,0,1,60000); //
	carPCRJ[6] = CreateVehicle(490,2255.7454,2477.9014,10.7115,179.6411,0,1,60000); //
	carPCRJ[7] = CreateVehicle(598,2251.7871,2478.0071,10.7124,177.8916,0,1,60000); //
	carPCRJ[8] = CreateVehicle(598,2260.5415,2458.4551,10.7113,1.3456,0,1,60000); //
	carPCRJ[9] = CreateVehicle(598,2255.7742,2458.4878,10.7113,358.7373,0,1,60000); //
	carPCRJ[10] = CreateVehicle(598,2269.1118,2458.5486,10.7138,358.8112,0,1,60000); //
	carPCRJ[11] = CreateVehicle(598,2273.8113,2458.2876,10.7125,358.4223,0,1,60000); //
	carPCRJ[12] = CreateVehicle(598,2278.1143,2458.1877,10.7131,359.1316,0,1,60000); //
	carPCRJ[13] = CreateVehicle(598,2282.2993,2458.3198,10.7122,0.4213,0,1,60000); //
	carPCRJ[14] = CreateVehicle(598,2295.1733,2443.0007,10.7125,1.2980,0,1,60000); //
	carPCRJ[15] = CreateVehicle(598,2291.0605,2442.9233,10.7122,359.8896,0,1,60000); //
	carPCRJ[16] = CreateVehicle(523,2283.1582,2441.3345,10.3919,357.7822,0,1,60000); //
	carPCRJ[17] = CreateVehicle(523,2280.9163,2441.2688,10.3921,1.8715,0,1,60000); //
	carPCRJ[18] = CreateVehicle(523,2278.6685,2441.2317,10.3893,359.2724,0,1,60000); //
	carPCRJ[19] = CreateVehicle(523,2276.4285,2441.1260,10.3894,0.6812,0,1,60000); //
	carPCRJ[20] = CreateVehicle(523,2274.0627,2441.0720,10.3946,359.1118,0,1,60000); //
	carPCRJ[21] = CreateVehicle(523,2271.7517,2441.0212,10.3891,0.0873,0,1,60000); //
	carPCRJ[22] = CreateVehicle(523,2269.5515,2440.9453,10.3843,1.5222,0,1,60000); //
	carPCRJ[23] = CreateVehicle(497,2277.7742,2470.6748,38.6837,90.0209,0,1,60000); // HELLI
	carPCRJ[24] = CreateVehicle(427,2290.7000000,2476.3000000,11.1000000,180.0000000,0,1,60000); //Enforcer
	carPCRJ[25] = CreateVehicle(427,2294.6001000,2476.3000000,11.1000000,180.0000000,0,1,60000); //Enforcer
	
	// =========================== [ PCRJ ] ==================================== //
	Create3DTextLabel("Departamento de Polícia\nAperte F",0xE3E3E3FF,235.4019,165.7543,1003.0300,25.0,0,1); //PCRJ LV DP
	Create3DTextLabel("Entrar no Departamento\nAperte F",0xE3E3E3FF,2296.7395,2460.0120,10.8203,40,0,1); //DP PCRJ LV (ENTRAR)
	Create3DTextLabel("Sair\nAperte F",0xE3E3E3FF,238.6604,139.0759,1003.0234,40,0,1); //DP SAIR LV PCRJ
	Create3DTextLabel("Elevador\nAperte F",0xE3E3E3FF,2297.1169,2451.4468,10.8203,25.0,0,1); //ELEVADOR PCRJ LV
	Create3DTextLabel("Elevador\nAperte F",0xE3E3E3FF,2291.1814,2458.5923,38.6875,25.0,0,1); //ELEVADOR PCRJ LV

 	CreatePickup(1314, 1, 235.4019,165.7543,1003.0300, -1); //PCRJ LV DP
    CreatePickup(1314, 1, 2296.7395,2460.0120,10.8203, -1); //PCRJ LV DP
	CreatePickup(1239, 1, 238.6604,139.0759,1003.0234, -1); //DP PCRJ LV (SAIR)
	CreatePickup(1318, 1, 2291.1814,2458.5923,38.6875, -1); //PCRJ LV ELEVADOR
	CreatePickup(1318, 1, 2297.1169,2451.4468,10.8203, -1); //PCRJ LV ELEVADOR

	// =========================== [ DP PMRJ LS ] ============================== //
	CreateDynamicObject(3749,1541.1000000,-1628.0000000,18.1000000,0.0000000,0.0000000,90.0000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(987,1539.2000000,-1606.3000000,12.4000000,0.0000000,0.0000000,269.9950000); //object(elecfence_bar) (2)
	CreateDynamicObject(987,1539.2000000,-1601.9000000,12.4000000,0.0000000,0.0000000,269.9950000); //object(elecfence_bar) (3)
	CreateDynamicObject(987,1551.0000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (4)
	CreateDynamicObject(987,1562.9000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (5)
	CreateDynamicObject(987,1574.8000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (6)
	CreateDynamicObject(987,1586.7000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (7)
	CreateDynamicObject(987,1598.4000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (8)
	CreateDynamicObject(987,1608.6000000,-1602.0000000,12.4000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (9)
	CreateDynamicObject(987,1608.4000000,-1613.8000000,12.4000000,0.0000000,0.0000000,89.9950000); //object(elecfence_bar) (10)
	CreateDynamicObject(987,1608.4000000,-1625.6000000,12.4000000,0.0000000,0.0000000,89.9950000); //object(elecfence_bar) (11)
	CreateDynamicObject(987,1608.4000000,-1634.4000000,12.4000000,0.0000000,0.0000000,89.9950000); //object(elecfence_bar) (12)
	CreateDynamicObject(987,1608.4000000,-1638.6000000,12.4000000,0.0000000,0.0000000,89.9950000); //object(elecfence_bar) (13)
	CreateDynamicObject(987,1596.4004000,-1638.4004000,12.4000000,0.0000000,0.0000000,359.9950000); //object(elecfence_bar) (14)
	CreateDynamicObject(13011,1568.1000000,-1636.6000000,24.0000000,0.0000000,0.0000000,270.0000000); //object(cos_sbanksteps04) (2)
	CreateDynamicObject(13011,1563.7000000,-1636.6000000,19.3000000,0.0000000,0.0000000,270.0000000); //object(cos_sbanksteps04) (3)
	CreateDynamicObject(13011,1559.4000000,-1636.6000000,14.4000000,0.0000000,0.0000000,270.0000000); //object(cos_sbanksteps04) (4)
	CreateDynamicObject(13011,1557.1000000,-1636.6000000,11.8000000,0.0000000,0.0000000,270.0000000); //object(cos_sbanksteps04) (5)
	CreateDynamicObject(987,1564.7000000,-1597.2000000,27.6000000,0.0000000,0.0000000,119.4950000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1570.4000000,-1607.6000000,27.6000000,0.0000000,0.0000000,118.7430000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1576.3000000,-1617.8000000,27.6000000,0.0000000,0.0000000,119.9900000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1582.1000000,-1628.2000000,27.6000000,0.0000000,0.0000000,119.2370000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1584.7000000,-1632.8000000,27.6000000,0.0000000,0.0000000,119.4850000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1584.5000000,-1644.6000000,27.6000000,0.0000000,0.0000000,89.2320000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1584.5000000,-1656.5000000,27.6000000,0.0000000,0.0000000,90.2310000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1584.7000000,-1668.4000000,27.6000000,0.0000000,0.0000000,90.9810000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1585.0000000,-1680.2000000,27.6000000,0.0000000,0.0000000,91.4780000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1585.1000000,-1692.0000000,27.6000000,0.0000000,0.0000000,90.4780000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1585.8000000,-1701.7000000,27.5000000,0.0000000,0.0000000,93.4720000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1586.7000000,-1713.5000000,27.2000000,0.0000000,0.0000000,94.4720000); //object(elecfence_bar) (14)
	CreateDynamicObject(987,1587.8000000,-1724.9000000,27.1000000,0.0000000,0.0000000,95.4710000); //object(elecfence_bar) (14)
	CreateDynamicObject(970,1587.2000000,-1724.9000000,30.5000000,0.0000000,270.0000000,181.2500000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1558.5000000,-1587.1000000,30.9000000,0.0000000,270.0000000,208.9970000); //object(fencesmallb) (3)

	// ============================ [ VEÍCULOS PMRJ ] ======================== //
	VehPmrj[1] =CreateVehicle(596,1602.0000000,-1704.2000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[2] =CreateVehicle(596,1601.9000000,-1700.1000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[3] =CreateVehicle(596,1601.8000000,-1696.2000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[4] =CreateVehicle(596,1601.7000000,-1692.0000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[5] =CreateVehicle(596,1601.7000000,-1688.0000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[6] =CreateVehicle(596,1601.5000000,-1684.0000000,6.3000000,90.0000000,7,1,15); //Police Ranger
	VehPmrj[7] =CreateVehicle(427,1529.4000000,-1688.2000000,6.1000000,270.0000000,7,1,15); //Enforcer
	VehPmrj[8] =CreateVehicle(427,1529.3000000,-1683.8000000,6.1000000,270.0000000,7,1,15); //Enforcer
	VehPmrj[9] =CreateVehicle(596,1545.1000000,-1684.4000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD)
	VehPmrj[10] =CreateVehicle(596,1545.1000000,-1680.3000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD)
	VehPmrj[11] =CreateVehicle(596,1545.1000000,-1676.2000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD)
	VehPmrj[12] =CreateVehicle(596,1545.1000000,-1672.1000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD
	VehPmrj[13] =CreateVehicle(596,1584.7000000,-1667.4000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD)
	VehPmrj[14] =CreateVehicle(596,1584.8000000,-1672.0000000,5.7000000,90.0000000,7,1,15); //Police Car (LSPD)
	VehPmrj[15] =CreateVehicle(523,1569.2000000,-1711.5000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[16] =CreateVehicle(523,1571.4000000,-1711.5000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[17] =CreateVehicle(523,1573.2000000,-1711.5000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[18] =CreateVehicle(523,1575.3000000,-1711.4000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[19] =CreateVehicle(523,1577.2000000,-1711.4000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[20] =CreateVehicle(523,1579.3000000,-1711.3000000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[21] =CreateVehicle(523,1582.2998000,-1711.2002000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[22] =CreateVehicle(523,1584.0000000,-1711.2002000,5.6000000,0.0000000,7,1,15); //HPV1000
	VehPmrj[23] =CreateVehicle(497,1550.3000000,-1643.1000000,28.7000000,0.0000000,7,1,15); //Police Maverick
	VehPmrj[24] =CreateVehicle(497,1565.3000000,-1643.1000000,28.7000000,0.0000000,7,1,15); //Police Maverick
	
	// ===================== [ PMRJ ] ========================================== //
	Create3DTextLabel("Policia Militar do Estado do Rio de Janeiro\nAperte F",COR_BRANCO,1568.5609,-1690.1646,5.8906,25.0,0,1); //PMRJ
	CreatePickup(1314, 1, 1568.5609,-1690.1646,5.8906, -1); //PICKUP PMRJ
	
	// =================== [ HQ MOTO TAXI ] ==================================== //
	CreateDynamicObject(1841, 1516.7, -1478.1, 10.2, 0, 0, 276);
	CreateDynamicObject(1840, 1515.4, -1478.5, 10.2, 0, 2, 272);
	CreateDynamicObject(1828, 1515.8, -1475.8, 8.5, 0, 0, 276);
	CreateDynamicObject(1808, 1509.7002, -1473.9004, 8.5, 0, 0, 90);
	CreateDynamicObject(1736, 1509.9, -1476.8, 12.3, 1.999, 2.001, 99.93);
	CreateDynamicObject(14651, 1522.1, -1470.7, 10.7, 0, 0, 182);
	CreateDynamicObject(2104, 1515.9, -1478.7, 10.2, 0, 0, 185.999);
	CreateDynamicObject(2147, 1510, -1466.9004, 8.5, 0, 0, 92);
	CreateDynamicObject(2149, 1510, -1466.9, 10.5, 0, 0, 90);
	CreateDynamicObject(2192, 1516.3, -1478.1, 11.5, 354, 0, 4);
	CreateDynamicObject(2297, 1516.8, -1478.3, 8.5, 0, 0, 140);
	CreateDynamicObject(2596, 1539.6, -1481.4, 13.4, 0, 358, 226);
	CreateDynamicObject(14806, 1520.7998, -1464.2002, 9.6, 0, 0, 182);
	CreateDynamicObject(1256, 1527.2, -1450.4, 13.2, 0, 0, 270);
	CreateDynamicObject(1256, 1523.9, -1450.4, 13.2, 0, 0, 270);
	CreateDynamicObject(1256, 1541.8, -1450.4, 13.2, 0, 0, 270);
	CreateDynamicObject(1256, 1545.1, -1450.4, 13.2, 0, 0, 270);
	CreateDynamicObject(1726, 1514.7002, -1473.2998, 8.5, 0, 0, 3.999);
	CreateDynamicObject(1726, 1513.9004, -1475.7998, 8.5, 0, 0, 92);
	CreateDynamicObject(1998, 1514.0996, -1461.0996, 8.5, 0, 0, 182);
	CreateDynamicObject(1735, 1513, -1460.7002, 8.5, 0, 0, 0);
	CreateDynamicObject(2174, 1510.1, -1460.2, 8.5, 0, 0, 88);
	CreateDynamicObject(2639, 1520.5, -1460, 9.1, 0, 0, 179.995);
	CreateDynamicObject(2801, 1520.6, -1461.9, 9, 0, 0, 0);
	CreateDynamicObject(2644, 1520.5, -1461.9, 8.9, 0, 0, 0);
	CreateDynamicObject(2007, 1520.5, -1457, 8.5, 0, 0, 0);
	CreateDynamicObject(2007, 1519.6, -1457, 8.5, 0, 0, 0);
	CreateDynamicObject(2007, 1518.7, -1457, 8.5, 0, 0, 0);
	CreateDynamicObject(2007, 1517.8, -1457, 8.5, 0, 0, 0);
	CreateDynamicObject(2007, 1516.9, -1457, 8.5, 0, 0, 0);
	CreateDynamicObject(1796, 1527.5, -1460, 8.5, 0, 0, 0);
	CreateDynamicObject(1796, 1525.5, -1460, 8.5, 0, 0, 0);
	CreateDynamicObject(1796, 1523.5, -1460, 8.5, 0, 0, 0);
	CreateDynamicObject(1775, 1510.1, -1468.6, 9.6, 0, 0, 92);
	CreateDynamicObject(955, 1509.9, -1472.4, 8.9, 0, 0, 90);
	CreateDynamicObject(2420, 1509.6, -1470.5, 8.5, 0, 0, 90);
	VehMTX[76] = AddStaticVehicleEx(461,1538.0000000,-1472.1000000,9.2000000,86.0000000,128,229,15); //PCJ-600
	VehMTX[77] = AddStaticVehicleEx(461,1537.9000000,-1470.8000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	VehMTX[78] = AddStaticVehicleEx(461,1538.0000000,-1473.3000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	VehMTX[79] = AddStaticVehicleEx(461,1538.0000000,-1474.5000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	VehMTX[80] = AddStaticVehicleEx(461,1538.0000000,-1475.8000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	VehMTX[81] = AddStaticVehicleEx(461,1538.0000000,-1477.1000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	VehMTX[82] = AddStaticVehicleEx(461,1538.0000000,-1478.4000000,9.2000000,85.9950000,128,229,15); //PCJ-600
	
	// =================== [ PRESÍDIO ] ======================================== //
	CreateDynamicObject(7191,339.7999900,1793.8000000,18.6000000,0.0000000,0.0000000,122.5000000); //object(vegasnnewfence2b) (4)
	CreateDynamicObject(7191,339.7998000,1793.7998000,22.5000000,0.0000000,0.0000000,122.4980000); //object(vegasnnewfence2b) (5)
	CreateDynamicObject(7191,276.2999900,1784.6000000,2.3000000,90.0000000,0.0000000,2.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,338.8999900,1795.7000000,23.4000000,0.0000000,90.0000000,122.4920000); //object(vegasnnewfence2b) (13)
	CreateDynamicObject(7191,337.3999900,1797.0000000,22.1000000,0.0000000,0.0000000,122.4970000); //object(vegasnnewfence2b) (14)
	CreateDynamicObject(7191,337.4003900,1797.0000000,18.2000000,0.0000000,0.0000000,122.4870000); //object(vegasnnewfence2b) (15)
	CreateDynamicObject(7191,358.5000000,1827.9004000,18.6000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (16)
	CreateDynamicObject(7191,358.5000000,1827.9004000,22.5000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,356.5000000,1827.7998000,23.4000000,0.0000000,90.0000000,181.7410000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,354.5996100,1827.7998000,22.1000000,0.0000000,0.0000000,181.9860000); //object(vegasnnewfence2b) (19)
	CreateDynamicObject(7191,354.6000100,1827.8000000,18.2000000,0.0000000,0.0000000,181.7410000); //object(vegasnnewfence2b) (19)
	CreateDynamicObject(7191,357.7000100,1853.3000500,22.5000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,357.7000100,1853.3000000,18.6000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,355.7000100,1853.3000000,23.4000000,0.0000000,90.0000000,181.7410000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,353.7998000,1853.2002000,22.1000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,353.7999900,1853.2000000,18.6000000,0.0000000,0.0000000,181.7470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,371.7002000,1881.7002000,22.5000000,0.0000000,0.0000000,111.7420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,371.0000000,1883.6000000,23.4000000,0.0000000,90.0000000,111.7360000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,350.4003900,1875.4004000,2.3000000,90.0000000,0.0000000,201.7420000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,392.7998000,1911.9004000,22.5000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,390.7998000,1911.9004000,23.4000000,0.0000000,90.0000000,180.2310000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,370.2002000,1885.4004000,22.1000000,0.0000000,0.0000000,111.7420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.8999900,1911.8000000,22.1000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.7999900,1911.9000000,18.6000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,370.2000100,1885.4000000,18.2000000,0.0000000,0.0000000,111.7420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,371.7000100,1881.7000000,18.6000000,0.0000000,0.0000000,111.7420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.8999900,1911.8000000,18.2000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.6000100,1955.9000000,22.5000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.3999900,2000.0000000,22.5000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.2000100,2044.1000000,22.5000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.0996100,2060.2002000,22.5000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.6000100,1955.9000000,18.6000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.3999900,2000.0000000,18.6000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.2000100,2044.1000000,18.6000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.7000100,1955.7000000,22.1000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.5000000,1999.7000000,22.1000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.2999900,2043.6000000,22.1000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.7000100,1955.7000000,18.2000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.5000000,1999.7000000,18.2000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.2999900,2043.6000000,18.2000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,390.6000100,1956.5000000,23.4000000,0.0000000,90.0000000,180.2360000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,390.3999900,2001.0000000,23.4000000,0.0000000,90.0000000,180.2360000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,390.2000100,2045.7000000,23.4000000,0.0000000,90.0000000,180.2360000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,390.1000100,2060.2000000,23.4000000,0.0000000,90.0000000,180.2360000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(16093,386.4003900,1891.0996000,27.5000000,0.0000000,0.0000000,182.7470000); //object(a51_gatecontrol) (1)
	CreateDynamicObject(3095,388.4003900,1891.2002000,22.8000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,383.5996100,1891.2002000,22.9000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3440,380.2002000,1894.9004000,20.6000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,380.2000100,1894.9000000,16.0000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,392.1000100,1887.4000000,20.6000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,392.1000100,1887.4000000,15.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(11544,382.6000100,1888.2000000,26.6000000,0.0000000,0.0000000,291.0000000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,375.8999900,1885.6000000,23.9000000,0.0000000,0.0000000,291.0000000); //object(des_ntfrescape2) (2)
	CreateDynamicObject(11544,390.7998000,1893.4004000,26.6000000,0.0000000,0.0000000,179.9950000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,390.7998000,1900.7002000,23.9000000,0.0000000,0.0000000,179.9950000); //object(des_ntfrescape2) (2)
	CreateDynamicObject(1698,391.2999900,1893.2000000,27.5000000,0.0000000,0.0000000,0.0000000); //object(esc_step8) (1)
	CreateDynamicObject(1698,391.2999900,1890.0000000,27.5000000,0.0000000,0.0000000,0.0000000); //object(esc_step8) (2)
	CreateDynamicObject(1698,391.2999900,1887.9000000,27.5000000,0.0000000,0.0000000,0.0000000); //object(esc_step8) (3)
	CreateDynamicObject(1698,382.3999900,1888.8000000,27.5000000,0.0000000,0.0000000,294.0000000); //object(esc_step8) (4)
	CreateDynamicObject(7191,369.7998000,2082.9004000,22.5000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,392.1000100,2060.2000000,18.6000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.2002000,2060.2002000,18.2000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,325.7000100,2082.8999000,22.5000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,281.7002000,2082.9004000,22.5000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,237.6000100,2083.8000000,22.5000000,0.0000000,0.0000000,267.7500000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,369.7000100,2080.8999000,23.4000000,0.0000000,90.0000000,270.0000000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,325.6000100,2080.8999000,23.4000000,0.0000000,90.0000000,270.0000000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,281.5996100,2080.9004000,23.4000000,0.0000000,90.0000000,270.0000000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,369.7999900,2082.8999000,18.6000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,325.7000100,2082.8999000,18.6000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,281.7000100,2082.8999000,18.6000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,237.6000100,2083.8000000,18.6000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.3999900,2084.1001000,23.2000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.4003900,2084.1006000,27.1000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,270.6000100,2082.7000000,16.3000000,30.0000000,180.0000000,88.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.2998000,2082.1006000,28.0000000,0.0000000,90.0000000,267.7480000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,230.3999900,2084.1001000,19.3000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.3000000,2080.2000000,26.7000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,281.7002000,2079.0000000,22.1000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,271.2002000,2079.1006000,17.2000000,26.9990000,179.9950000,89.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,369.7999900,2079.0000000,22.1000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,369.7998000,2079.0000000,18.2000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,388.2000100,2060.2000000,22.1000000,0.0000000,0.0000000,180.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,325.6000100,2079.0000000,22.1000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,325.6000100,2079.0000000,18.2000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,281.7000100,2079.0000000,18.2000000,0.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.2998000,2080.2002000,22.8000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.3000000,2080.2000000,18.9000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,230.3000000,2080.2000000,15.0000000,0.0000000,0.0000000,267.7480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,271.2000100,2079.2000000,12.7000000,26.9990000,179.9950000,89.4950000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,271.2002000,2079.2002000,8.5000000,26.9990000,179.9950000,89.4950000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,272.2998000,2080.9004000,17.1000000,331.9960000,90.0000000,268.9950000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(16093,386.2999900,2077.3000500,27.5000000,0.0000000,0.0000000,270.7470000); //object(a51_gatecontrol) (1)
	CreateDynamicObject(11544,390.2000100,2073.6001000,26.6000000,0.0000000,0.0000000,359.9950000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,390.2000100,2066.3999000,23.9000000,0.0000000,0.0000000,359.9950000); //object(des_ntfrescape2) (2)
	CreateDynamicObject(11544,384.0000000,2080.8999000,26.6000000,0.0000000,0.0000000,270.2500000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,376.7999900,2080.8999000,23.9000000,0.0000000,0.0000000,270.0000000); //object(des_ntfrescape2) (2)
	CreateDynamicObject(3095,387.5996100,2075.6006000,22.9000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3440,384.4003900,2072.2002000,20.6000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,384.3999900,2072.2000000,15.9000000,0.0000000,0.0000000,0.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(7191,276.2000100,1787.7000000,2.3000000,90.0000000,0.0000000,3.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,276.0000000,1790.9000000,2.3000000,90.0000000,0.0000000,2.7500000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,275.8999900,1793.6000000,2.3000000,90.0000000,0.0000000,3.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,275.7999900,1796.9000000,2.3000000,90.0000000,0.0000000,1.5000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,188.3999900,1941.5000000,2.4000000,90.0000000,0.0000000,270.0000000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,207.0000000,2084.8999000,6.9000000,90.0000000,0.0000000,193.9860000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,206.1000100,2088.6001000,6.9000000,90.0000000,0.0000000,194.4850000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,205.5000000,2091.0000000,6.9000000,90.0000000,0.0000000,194.4850000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,203.5000000,2094.1001000,6.9000000,90.0000000,0.0000000,230.2350000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,200.7000000,2096.3999000,6.9000000,90.0000000,0.0000000,230.4820000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,199.5000000,2097.5000000,6.9000000,90.0000000,0.0000000,230.2290000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,196.0000000,2099.1001000,6.9000000,90.0000000,0.0000000,257.9810000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,192.3999900,2099.8999000,6.9000000,90.0000000,0.0000000,257.9810000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,190.1000100,2100.3999000,6.9000000,90.0000000,0.0000000,257.7280000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,186.3000000,2100.3000000,6.9000000,90.0000000,0.0000000,284.4740000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,182.8000000,2099.3999000,6.9000000,90.0000000,0.0000000,284.4690000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,179.8999900,2098.7000000,6.9000000,90.0000000,0.0000000,283.9690000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,176.5000000,2096.8999000,6.9000000,90.0000000,0.0000000,309.4680000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,173.7000000,2094.6001000,6.9000000,90.0000000,0.0000000,309.4630000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,171.8999900,2093.1001000,6.9000000,90.0000000,0.0000000,309.4630000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,170.0000000,2090.0000000,6.9000000,90.0000000,0.0000000,347.9640000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,169.3000000,2086.7000000,6.9000000,90.0000000,0.0000000,347.9590000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,168.8000000,2084.3999000,6.9000000,90.0000000,0.0000000,347.9640000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,168.8999900,2080.6001000,6.9000000,90.0000000,0.0000000,14.4640000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,169.8000000,2077.2000000,6.9000000,90.0000000,0.0000000,14.4640000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,170.6000100,2073.8999000,6.9000000,90.0000000,0.0000000,14.4640000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,172.5000000,2070.7000000,6.9000000,90.0000000,0.0000000,46.9610000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,175.2000000,2068.2000000,6.9000000,90.0000000,0.0000000,46.9560000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,176.8000000,2066.8000000,6.9000000,90.0000000,0.0000000,46.9560000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,180.1000100,2064.8999000,6.9000000,90.0000000,0.0000000,72.9600000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,183.3000000,2063.8999000,6.9000000,90.0000000,0.0000000,73.2020000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,186.1000100,2041.1000000,27.1000000,0.0000000,0.0000000,0.2480000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,188.0000000,2041.0000000,28.1000000,0.0000000,90.0000000,180.2480000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,190.0000000,2041.1000000,26.8000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.0000000,2041.1000000,22.9000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.0000000,2041.0996000,19.0000000,0.0000000,0.0000000,0.2420000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.0000000,2041.1000000,15.1000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,188.0000000,2063.2000000,6.9000000,90.0000000,0.0000000,89.2400000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,184.2000000,2063.7000000,6.9000000,90.0000000,0.0000000,73.2020000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,186.1000100,2041.1000000,23.2000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.1000100,2041.1000000,19.3000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.1000100,2041.1000000,15.4000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.3000000,1998.8000000,17.1000000,331.7380000,179.9950000,180.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,188.3000000,1998.9000200,17.1000000,331.9960000,90.0000000,180.2500000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,186.2000000,1999.3000000,17.3000000,332.2380000,179.9950000,180.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.2000000,1999.1000000,11.5000000,331.7430000,180.0000000,180.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.3000000,1999.1000000,7.1000000,331.7430000,180.0000000,180.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.1000100,1997.1000000,22.5000000,0.0000000,0.0000000,0.2500000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.3000000,1964.2000000,22.5000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,188.2000000,1988.0000000,23.4000000,0.0000000,90.0000000,180.2470000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,188.3000000,1963.6000000,23.3000000,0.0000000,90.0000000,180.2470000); //object(vegasnnewfence2b) (18)
	CreateDynamicObject(7191,190.2000000,1997.2000000,22.1000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.2000000,1997.2000000,18.2000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.3000000,1964.2000000,22.1000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,190.3000000,1964.2000000,18.2000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.1000100,1997.1000000,18.6000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,186.3000000,1964.2000000,18.6000000,0.0000000,0.0000000,0.2470000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(7191,207.2000000,2082.6001000,6.9000000,90.0000000,0.0000000,191.5000000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,207.7002000,2082.7002000,7.0000000,90.0000000,0.0000000,178.2420000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(16093,193.0000000,1973.2998000,27.4000000,0.0000000,0.0000000,180.2420000); //object(a51_gatecontrol) (1)
	CreateDynamicObject(3095,195.8000000,1974.9000000,23.0000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(11544,189.1000100,1969.6000000,26.5000000,0.0000000,0.0000000,0.0000000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,189.1000100,1962.4000000,23.8000000,0.0000000,0.0000000,359.7470000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,188.8999900,1975.5000000,26.5000000,0.0000000,0.0000000,179.9950000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,188.8999900,1982.7000000,23.8000000,0.0000000,0.0000000,179.9950000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(3749,308.2002000,1782.9004000,22.4000000,0.0000000,0.0000000,0.0000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(7191,278.2999900,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,282.0000000,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,285.3999900,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,289.2999900,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,293.1000100,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,297.0000000,1782.7000000,2.3000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,319.2000100,1781.9000000,2.4000000,90.0000000,0.0000000,90.0000000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,317.3999900,1784.6000000,2.4000000,89.4950000,90.0000000,14.2490000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(7191,320.3999900,1783.7000000,2.4000000,90.0000000,0.0000000,214.4970000); //object(vegasnnewfence2b) (12)
	CreateDynamicObject(14414,332.7999900,2028.4000000,18.4000000,0.0000000,0.0000000,90.0000000); //object(carter-stairs05) (1)
	CreateDynamicObject(14414,327.2000100,2028.4000000,16.6000000,0.0000000,0.0000000,90.0000000); //object(carter-stairs05) (2)
	CreateDynamicObject(14414,322.7000100,2028.4000000,15.8000000,0.0000000,0.0000000,90.0000000); //object(carter-stairs05) (3)
	CreateDynamicObject(2913,199.1000100,1999.4000000,16.9000000,90.0000000,179.9950000,7.9870000); //object(kmb_bpress) (1)
	CreateDynamicObject(2915,198.8000000,1998.3000000,16.8000000,0.0000000,0.0000000,79.9970000); //object(kmb_dumbbell2) (1)
	CreateDynamicObject(2632,200.0000000,1999.9000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(2915,198.8000000,1996.3000000,16.8000000,0.0000000,0.0000000,104.9960000); //object(kmb_dumbbell2) (2)
	CreateDynamicObject(2915,198.8000000,1994.5000000,16.8000000,0.0000000,0.0000000,86.2430000); //object(kmb_dumbbell2) (3)
	CreateDynamicObject(2913,198.8999900,2001.4000000,16.8000000,2.9940000,270.0000000,266.7320000); //object(kmb_bpress) (3)
	CreateDynamicObject(974,338.0000000,2026.4000000,18.8000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (1)
	CreateDynamicObject(974,332.3999900,2026.4000000,17.1000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (2)
	CreateDynamicObject(974,327.8999900,2026.4000000,16.3000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (3)
	CreateDynamicObject(974,323.5000000,2026.4000000,14.8000000,0.0000000,323.5000000,359.7500000); //object(tall_fence) (4)
	CreateDynamicObject(974,328.0000000,2026.4000000,15.6000000,0.0000000,323.4980000,359.7470000); //object(tall_fence) (5)
	CreateDynamicObject(974,333.5000000,2026.4000000,17.4000000,0.0000000,324.9980000,359.7470000); //object(tall_fence) (6)
	CreateDynamicObject(974,338.0000000,2030.4000000,18.8000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (7)
	CreateDynamicObject(974,332.2999900,2030.4000000,17.0000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (8)
	CreateDynamicObject(974,327.8999900,2030.4000000,16.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (9)
	CreateDynamicObject(974,323.3999900,2030.4000000,14.8000000,0.0000000,325.2500000,359.7500000); //object(tall_fence) (10)
	CreateDynamicObject(974,328.0000000,2030.4000000,15.6000000,0.0000000,323.4980000,359.7470000); //object(tall_fence) (13)
	CreateDynamicObject(974,333.3999900,2030.4000000,17.4000000,0.0000000,325.7480000,359.7470000); //object(tall_fence) (11)
	CreateDynamicObject(970,387.7000100,1886.1000000,28.1000000,0.0000000,0.0000000,2.7470000); //object(fencesmallb) (2)
	CreateDynamicObject(970,389.8999900,1886.2000000,28.1000000,0.0000000,0.0000000,1.9970000); //object(fencesmallb) (3)
	CreateDynamicObject(970,392.0000000,1888.4000000,28.1000000,0.0000000,0.0000000,89.7470000); //object(fencesmallb) (4)
	CreateDynamicObject(970,392.0000000,1892.6000000,28.1000000,0.0000000,0.0000000,89.7420000); //object(fencesmallb) (5)
	CreateDynamicObject(970,383.7000100,1886.3000000,28.1000000,0.0000000,0.0000000,352.9970000); //object(fencesmallb) (8)
	CreateDynamicObject(970,381.2999900,1891.1000000,28.1000000,0.0000000,0.0000000,272.7500000); //object(fencesmallb) (9)
	CreateDynamicObject(970,381.2000100,1892.3000000,28.1000000,0.0000000,0.0000000,272.7470000); //object(fencesmallb) (11)
	CreateDynamicObject(970,379.5000000,1888.3000000,28.1000000,0.0000000,0.0000000,201.4970000); //object(fencesmallb) (12)
	CreateDynamicObject(970,383.2000100,1894.5000000,28.1000000,0.0000000,0.0000000,182.7470000); //object(fencesmallb) (13)
	CreateDynamicObject(970,387.2999900,1894.7000000,28.1000000,0.0000000,0.0000000,182.7470000); //object(fencesmallb) (14)
	CreateDynamicObject(970,387.5000000,1894.7000000,28.1000000,0.0000000,0.0000000,182.7470000); //object(fencesmallb) (15)
	CreateDynamicObject(970,386.9003900,2072.2002000,28.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,384.8999900,2072.2000000,28.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,382.7998000,2074.2002000,28.1000000,0.0000000,0.0000000,270.2470000); //object(fencesmallb) (18)
	CreateDynamicObject(970,382.7999900,2077.7000000,28.1000000,0.0000000,0.0000000,270.2500000); //object(fencesmallb) (19)
	CreateDynamicObject(970,391.2999900,2074.3000000,28.1000000,0.0000000,0.0000000,270.2470000); //object(fencesmallb) (20)
	CreateDynamicObject(970,391.2999900,2078.3999000,28.1000000,0.0000000,0.0000000,270.2440000); //object(fencesmallb) (21)
	CreateDynamicObject(970,391.2999900,2080.2000000,28.1000000,0.0000000,0.0000000,270.2440000); //object(fencesmallb) (22)
	CreateDynamicObject(970,391.2999900,2080.1001000,28.1000000,0.0000000,0.0000000,270.2420000); //object(fencesmallb) (23)
	CreateDynamicObject(970,389.2000100,2082.2000000,28.1000000,0.0000000,0.0000000,0.7420000); //object(fencesmallb) (24)
	CreateDynamicObject(970,386.8999900,2082.2000000,28.1000000,0.0000000,0.0000000,0.7420000); //object(fencesmallb) (25)
	CreateDynamicObject(970,384.7999900,2082.2000000,28.1000000,0.0000000,0.0000000,0.7420000); //object(fencesmallb) (26)
	CreateDynamicObject(970,380.5000000,2087.1001000,17.2000000,0.0000000,0.0000000,0.7420000); //object(fencesmallb) (27)
	CreateDynamicObject(3095,195.8000000,1972.9000000,22.8000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,191.5000000,1972.9000000,22.9000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,191.5000000,1974.8000000,22.9000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(970,192.3000000,1976.9000000,28.0000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (28)
	CreateDynamicObject(970,195.8000000,1976.9000000,28.0000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (29)
	CreateDynamicObject(970,197.8999900,1974.8000000,28.0000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (30)
	CreateDynamicObject(970,197.8999900,1970.4000000,28.0000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (31)
	CreateDynamicObject(970,197.8999900,1972.7000000,28.0000000,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (32)
	CreateDynamicObject(970,195.8999900,1968.3000000,28.0000000,0.0000000,0.0000000,180.0000000); //object(fencesmallb) (33)
	CreateDynamicObject(970,192.5000000,1968.3000000,28.0000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (34)
	CreateDynamicObject(970,187.8999900,1970.4000000,28.0000000,0.0000000,0.0000000,89.9950000); //object(fencesmallb) (35)
	CreateDynamicObject(970,187.9003900,1974.7002000,28.0000000,0.0000000,0.0000000,90.7450000); //object(fencesmallb) (36)
	CreateDynamicObject(970,187.8999900,1972.4000000,28.0000000,0.0000000,0.0000000,89.9950000); //object(fencesmallb) (37)
	CreateDynamicObject(8674,316.2000100,1783.3000000,24.6000000,270.0000000,180.0000000,180.0000000); //object(csrsfence02_lvs) (1)
	CreateDynamicObject(8674,316.7000100,1783.2000000,24.6000000,270.0000000,180.0000000,194.7500000); //object(csrsfence02_lvs) (2)
	CreateDynamicObject(2395,323.0000000,1784.0999800,22.0000000,0.0000000,0.0000000,123.7500000); //object(cj_sports_wall) (4)
	CreateDynamicObject(2395,323.1000100,1783.7000000,24.8000000,273.2500000,180.0000000,303.2500000); //object(cj_sports_wall) (5)
	CreateDynamicObject(2395,323.2000100,1783.8000500,22.0000000,0.0000000,0.0000000,123.7450000); //object(cj_sports_wall) (6)
	CreateDynamicObject(2395,320.7000100,1786.5000000,22.0000000,0.0000000,0.0000000,213.7450000); //object(cj_sports_wall) (7)
	CreateDynamicObject(2395,322.8999900,1784.0000000,24.8000000,273.2460000,179.9950000,303.2450000); //object(cj_sports_wall) (8)
	CreateDynamicObject(1698,354.8999900,1806.1000000,24.4000000,0.0000000,0.0000000,33.5000000); //object(esc_step8) (5)
	CreateDynamicObject(1698,355.2999900,1805.6000000,24.4000000,0.0000000,0.0000000,32.7450000); //object(esc_step8) (6)
	CreateDynamicObject(1698,356.3999900,1806.3000000,24.4000000,0.0000000,0.0000000,32.7450000); //object(esc_step8) (7)
	CreateDynamicObject(1698,356.0000000,1806.7998000,24.4000000,0.0000000,0.0000000,33.7450000); //object(esc_step8) (8)
	CreateDynamicObject(1698,356.8999900,1809.1000000,24.4000000,0.0000000,0.0000000,91.7450000); //object(esc_step8) (10)
	CreateDynamicObject(1698,357.5000000,1809.1000000,24.4000000,0.0000000,0.0000000,91.7410000); //object(esc_step8) (11)
	CreateDynamicObject(1698,357.5000000,1807.8000000,24.4000000,0.0000000,0.0000000,91.7410000); //object(esc_step8) (12)
	CreateDynamicObject(1698,357.5000000,1806.6000000,24.4000000,0.0000000,0.0000000,91.7410000); //object(esc_step8) (13)
	CreateDynamicObject(1698,357.2999900,1805.8000000,24.4000000,0.0000000,0.0000000,121.7410000); //object(esc_step8) (14)
	CreateDynamicObject(970,353.5000000,1807.3000000,24.6000000,0.0000000,0.0000000,33.2470000); //object(fencesmallb) (42)
	CreateDynamicObject(970,355.0996100,1810.5000000,24.6000000,0.0000000,0.0000000,91.9940000); //object(fencesmallb) (43)
	CreateDynamicObject(970,355.7999900,1804.0000000,24.6000000,0.0000000,0.0000000,33.2450000); //object(fencesmallb) (44)
	CreateDynamicObject(970,357.5000000,1805.1000000,24.6000000,0.0000000,0.0000000,33.2450000); //object(fencesmallb) (45)
	CreateDynamicObject(970,359.1000100,1808.3000000,24.6000000,0.0000000,0.0000000,91.4950000); //object(fencesmallb) (46)
	CreateDynamicObject(970,359.0000000,1810.6000000,24.6000000,0.0000000,0.0000000,91.4940000); //object(fencesmallb) (47)
	CreateDynamicObject(14416,352.0000000,1803.9000000,21.3000000,0.0000000,0.0000000,302.7500000); //object(carter-stairs07) (1)
	CreateDynamicObject(14416,357.0000000,1812.5996000,21.3000000,0.0000000,0.0000000,181.9940000); //object(carter-stairs07) (2)
	CreateDynamicObject(1698,353.8999900,1807.4000000,23.8000000,0.0000000,270.0000000,303.2500000); //object(esc_step8) (15)
	CreateDynamicObject(1698,355.2999900,1809.0000000,23.8000000,0.0000000,270.0000000,1.2450000); //object(esc_step8) (16)
	CreateDynamicObject(1698,355.7002000,1867.0000000,24.4000000,0.0000000,0.0000000,91.4940000); //object(esc_step8) (8)
	CreateDynamicObject(14877,356.5000000,1846.9004000,21.9000000,0.0000000,0.0000000,92.0000000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,355.3999900,1846.9000000,21.9000000,0.0000000,0.0000000,92.0000000); //object(michelle-stairs) (2)
	CreateDynamicObject(14877,355.2999900,1853.9000000,21.9000000,0.0000000,0.0000000,272.0000000); //object(michelle-stairs) (3)
	CreateDynamicObject(14877,356.1000100,1853.9000000,21.9000000,0.0000000,0.0000000,272.0000000); //object(michelle-stairs) (4)
	CreateDynamicObject(7191,351.7999900,1871.8000000,2.3000000,90.0000000,0.0000000,200.9920000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(7191,352.6000100,1869.7000000,2.3000000,90.0000000,0.0000000,200.9890000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(1698,355.0996100,1867.0000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.7002000,1868.0000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.1000100,1868.0000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1869.2000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.7000100,1869.2000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.6000100,1870.5000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1870.5000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.6000100,1871.8000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.5000000,1873.0000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.5000000,1874.3000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.5000000,1875.5000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1871.8000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1873.1000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1874.4000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.0000000,1875.5000000,24.4000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(14877,355.7999900,1865.2000000,22.4000000,0.0000000,0.0000000,92.0000000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,355.0000000,1865.2000000,22.4000000,0.0000000,0.0000000,92.0000000); //object(michelle-stairs) (1)
	CreateDynamicObject(1698,358.8999900,1878.3000000,24.4000000,0.0000000,0.0000000,22.7390000); //object(esc_step8) (8)
	CreateDynamicObject(1698,358.6000100,1879.0000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,357.5000000,1878.5000000,24.4000000,0.0000000,0.0000000,21.2360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,356.3999900,1878.1000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.2999900,1877.6000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,357.7000100,1877.8000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,356.5000000,1877.3000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,354.1000100,1877.1000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,352.8999900,1876.6000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,351.7000100,1876.1000000,24.4000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,350.8999900,1875.8000000,24.4000000,0.0000000,0.0000000,21.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,352.1000100,1872.8000000,24.4000000,0.0000000,0.0000000,21.7310000); //object(esc_step8) (8)
	CreateDynamicObject(1698,353.2999900,1869.8000000,24.4000000,0.0000000,0.0000000,21.7310000); //object(esc_step8) (8)
	CreateDynamicObject(1698,353.0000000,1874.3000000,24.4000000,0.0000000,0.0000000,290.9860000); //object(esc_step8) (8)
	CreateDynamicObject(1698,353.2000100,1872.7000000,24.4000000,0.0000000,0.0000000,20.9840000); //object(esc_step8) (8)
	CreateDynamicObject(14877,361.2999900,1880.3000000,22.4000000,0.0000000,0.0000000,202.2500000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,361.7000100,1879.4000000,22.4000000,0.0000000,0.0000000,202.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(970,352.6000100,1870.1000000,25.0000000,0.0000000,0.0000000,111.9940000); //object(fencesmallb) (43)
	CreateDynamicObject(970,351.1000100,1873.9000000,25.0000000,0.0000000,0.0000000,111.9890000); //object(fencesmallb) (43)
	CreateDynamicObject(970,350.6000100,1875.2000000,25.0000000,0.0000000,0.0000000,111.9890000); //object(fencesmallb) (43)
	CreateDynamicObject(970,351.7000100,1878.0000000,25.0000000,0.0000000,0.0000000,21.9890000); //object(fencesmallb) (43)
	CreateDynamicObject(970,355.5000000,1879.5000000,25.0000000,0.0000000,0.0000000,21.7390000); //object(fencesmallb) (43)
	CreateDynamicObject(970,357.8999900,1880.5000000,25.0000000,0.0000000,0.0000000,22.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,353.3999900,1867.6000000,23.5000000,0.0000000,90.0000000,90.4890000); //object(fencesmallb) (43)
	CreateDynamicObject(970,353.3999900,1866.8000000,23.5000000,0.0000000,90.0000000,92.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,353.3999900,1866.3000000,23.5000000,0.0000000,90.0000000,92.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,359.5000000,1876.8000000,25.0000000,0.0000000,0.0000000,22.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,359.0000000,1876.6000000,25.0000000,0.0000000,0.0000000,22.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,357.1000100,1873.8000000,25.0000000,0.0000000,0.0000000,92.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,357.2000100,1870.8000000,25.0000000,0.0000000,0.0000000,92.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(970,357.2999900,1868.3000000,25.0000000,0.0000000,0.0000000,92.2360000); //object(fencesmallb) (43)
	CreateDynamicObject(1698,358.6000100,1879.0000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,357.5000000,1878.5000000,24.2000000,0.0000000,0.0000000,21.2310000); //object(esc_step8) (8)
	CreateDynamicObject(1698,356.3999900,1878.1000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.2999900,1877.6000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,354.1000100,1877.1000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,352.8999900,1876.6000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,351.7000100,1876.1000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,350.8999900,1875.8000000,24.2000000,0.0000000,0.0000000,21.7310000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.1000100,1867.0000000,24.2000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.1000100,1868.0000000,24.2000000,0.0000000,0.0000000,91.4890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,355.1000100,1866.6000000,24.3000000,0.0000000,0.0000000,91.9890000); //object(esc_step8) (8)
	CreateDynamicObject(1698,359.7999900,1879.4000000,24.3000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,359.7999900,1879.4000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,360.1000100,1879.5000000,24.3000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(1698,360.1000100,1879.5000000,24.2000000,0.0000000,0.0000000,22.7360000); //object(esc_step8) (8)
	CreateDynamicObject(9131,391.8999900,1898.4000000,24.6000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (1)
	CreateDynamicObject(9131,389.7000100,1898.4000000,24.6000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (2)
	CreateDynamicObject(9131,378.2998000,1885.2998000,24.6000000,0.0000000,0.0000000,17.9960000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,377.6000100,1887.5000000,24.6000000,0.0000000,0.0000000,17.9960000); //object(shbbyhswall13_lvs) (4)
	CreateDynamicObject(9131,389.0000000,2068.6001000,24.6000000,0.0000000,0.0000000,1.4960000); //object(shbbyhswall13_lvs) (5)
	CreateDynamicObject(9131,391.2000100,2068.6001000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (6)
	CreateDynamicObject(9131,379.0000000,2079.8000000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (7)
	CreateDynamicObject(9131,379.0000000,2081.8999000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (8)
	CreateDynamicObject(9131,187.8000000,1980.4000000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (9)
	CreateDynamicObject(9131,189.8999900,1980.4000000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (10)
	CreateDynamicObject(9131,188.1000100,1964.6000000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (11)
	CreateDynamicObject(9131,190.0000000,1964.6000000,24.6000000,0.0000000,0.0000000,1.4940000); //object(shbbyhswall13_lvs) (12)
	CreateDynamicObject(3440,199.2000000,1978.5000000,20.6000000,0.0000000,0.0000000,186.0000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,199.2000000,1978.5000000,16.0000000,0.0000000,0.0000000,185.9990000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,199.2000000,1969.5000000,20.6000000,0.0000000,0.0000000,185.9990000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,199.2000000,1969.5000000,16.0000000,0.0000000,0.0000000,185.9990000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(7191,208.8000000,2084.8999000,6.9000000,90.0000000,0.0000000,268.2420000); //object(vegasnnewfence2b) (8)
	CreateDynamicObject(14877,390.2999900,1930.5000000,21.9000000,0.0000000,0.0000000,90.2500000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,391.2000100,1930.5000000,21.9000000,0.0000000,0.0000000,90.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,391.1000100,1938.0000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,390.2999900,1938.0000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,390.1000100,1975.5000000,21.9000000,0.0000000,0.0000000,90.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,391.0000000,1975.5000000,21.9000000,0.0000000,0.0000000,90.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,389.7999900,2019.5000000,21.9000000,0.0000000,0.0000000,90.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,390.7999900,2019.5000000,21.9000000,0.0000000,0.0000000,90.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,390.7000100,2026.1000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,389.8999900,2026.1000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,391.1000100,1982.5000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,390.1000100,1982.5000000,21.9000000,0.0000000,0.0000000,270.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,350.2999900,2080.5000000,21.9000000,0.0000000,0.0000000,180.2470000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,350.2999900,2081.3999000,21.9000000,0.0000000,0.0000000,180.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,342.7999900,2081.3999000,21.9000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,342.7999900,2080.5000000,21.9000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,306.2999900,2080.3999000,21.9000000,0.0000000,0.0000000,180.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,306.2999900,2081.3999000,21.9000000,0.0000000,0.0000000,180.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,298.7999900,2081.3000000,21.9000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,298.7998000,2080.4004000,21.9000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,254.7000000,2081.6001000,26.0000000,0.0000000,0.0000000,177.9920000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,254.7000000,2080.8000000,26.0000000,0.0000000,0.0000000,179.2400000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,261.5000000,2081.4004000,22.2000000,0.0000000,0.0000000,177.9900000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,261.5000000,2080.6001000,22.2000000,0.0000000,0.0000000,177.9900000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,188.6000100,2015.2000000,26.0000000,0.0000000,0.0000000,89.9900000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,187.6000100,2015.2000000,26.0000000,0.0000000,0.0000000,89.9890000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,187.6000100,2009.0000000,22.5000000,0.0000000,0.0000000,89.9890000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,188.6000100,2009.0000000,22.5000000,0.0000000,0.0000000,89.9890000); //object(michelle-stairs) (1)
	CreateDynamicObject(11495,197.1000100,2068.1001000,28.7000000,0.0000000,0.0000000,134.4990000); //object(des_ranchjetty) (1)
	CreateDynamicObject(11495,202.8999900,2073.8000000,28.7000000,0.0000000,0.0000000,134.4950000); //object(des_ranchjetty) (3)
	CreateDynamicObject(1466,210.8000000,2082.3000000,27.8000000,0.0000000,0.0000000,87.2500000); //object(dyn_scaffold_5) (1)
	CreateDynamicObject(1466,210.8000000,2083.3999000,27.8000000,0.0000000,0.0000000,87.2480000); //object(dyn_scaffold_5) (2)
	CreateDynamicObject(970,210.1000100,2082.7000000,27.7000000,0.0000000,270.0000000,88.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,210.1000100,2083.5000000,27.7000000,0.0000000,270.0000000,87.4950000); //object(fencesmallb) (16)
	CreateDynamicObject(970,210.1000100,2084.3000000,27.7000000,0.0000000,270.0000000,87.4900000); //object(fencesmallb) (16)
	CreateDynamicObject(14877,216.3000000,2082.3000000,26.7000000,0.0000000,0.0000000,177.4920000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,216.3000000,2083.1001000,26.7000000,0.0000000,0.0000000,177.4900000); //object(michelle-stairs) (1)
	CreateDynamicObject(970,213.3999900,2080.8999000,29.2000000,0.0000000,0.0000000,176.9950000); //object(fencesmallb) (16)
	CreateDynamicObject(970,213.7000000,2084.7000000,29.2000000,0.0000000,0.0000000,176.9900000); //object(fencesmallb) (16)
	CreateDynamicObject(970,212.1000100,2084.8000000,29.2000000,0.0000000,0.0000000,176.9900000); //object(fencesmallb) (16)
	CreateDynamicObject(970,209.8999900,2079.5000000,29.4000000,0.0000000,0.0000000,224.4900000); //object(fencesmallb) (16)
	CreateDynamicObject(970,207.0000000,2076.7000000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,204.2000000,2073.8999000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,201.3999900,2071.2000000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,198.6000100,2068.3999000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,195.8000000,2065.6001000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,193.0000000,2062.8999000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(970,191.3999900,2061.3000000,29.4000000,0.0000000,0.0000000,224.4890000); //object(fencesmallb) (16)
	CreateDynamicObject(1466,188.3999900,2060.3999000,27.8000000,0.0000000,0.0000000,181.4980000); //object(dyn_scaffold_5) (3)
	CreateDynamicObject(1466,187.5000000,2060.3999000,27.8000000,0.0000000,0.0000000,181.4940000); //object(dyn_scaffold_5) (4)
	CreateDynamicObject(14877,187.6000100,2055.1001000,26.7000000,0.0000000,0.0000000,90.2400000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,188.3999900,2055.1001000,26.7000000,0.0000000,0.0000000,90.2360000); //object(michelle-stairs) (1)
	CreateDynamicObject(970,188.2000000,2061.0000000,27.7000000,0.0000000,270.0000000,0.4950000); //object(fencesmallb) (16)
	CreateDynamicObject(970,187.3999900,2061.0000000,27.7000000,0.0000000,270.0000000,0.4940000); //object(fencesmallb) (16)
	CreateDynamicObject(970,186.6000100,2061.0000000,27.7000000,0.0000000,270.0000000,0.4940000); //object(fencesmallb) (16)
	CreateDynamicObject(970,186.0000000,2058.8999000,29.2000000,0.0000000,0.0000000,90.7400000); //object(fencesmallb) (16)
	CreateDynamicObject(970,186.0000000,2058.2002000,29.2000000,0.0000000,0.0000000,90.7310000); //object(fencesmallb) (16)
	CreateDynamicObject(970,189.8999900,2057.8000000,29.2000000,0.0000000,0.0000000,90.7360000); //object(fencesmallb) (16)
	CreateDynamicObject(7191,186.2000000,1999.3000000,15.8000000,332.2380000,179.9950000,180.5000000); //object(vegasnnewfence2b) (17)
	CreateDynamicObject(14843,272.5996100,1945.5000000,17.9000000,0.0000000,0.0000000,180.0000000); //object(int_policea01) (2)
	CreateDynamicObject(3095,286.6000100,1951.0000000,18.8000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5000000,1955.7998000,18.8000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.6000100,1960.6000000,18.8000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.6000100,1972.7000000,18.5000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3268,256.7000100,1955.8000000,16.6000000,0.0000000,0.0000000,359.9950000); //object(mil_hangar1_) (1)
	CreateDynamicObject(3268,256.7002000,1989.5000000,16.6000000,0.0000000,0.0000000,359.9950000); //object(mil_hangar1_) (2)
	CreateDynamicObject(3268,256.7002000,2023.7002000,16.6000000,0.0000000,0.0000000,359.9950000); //object(mil_hangar1_) (3)
	CreateDynamicObject(3095,286.5000000,1964.8000000,18.5000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5000000,1945.4004000,18.5000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.6000100,2008.7000000,18.5000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5996100,2017.7002000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.6000100,2034.1999500,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5996100,2025.5996000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5996100,1979.0996000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5996100,2000.0000000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5000000,1985.0000000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,286.5000000,1993.9004000,18.6000000,0.0000000,270.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(1499,266.7002000,1968.2002000,16.6000000,0.0000000,0.0000000,90.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(9131,271.0000000,1945.5000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.2999900,1945.5000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,269.6000100,1945.5000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,269.2998000,1945.5000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,269.2999900,1945.5000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,269.6000100,1945.5000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.2999900,1945.5000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,271.0000000,1945.5000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(3095,281.7999900,1950.3000000,16.6000000,0.0000000,270.0000000,180.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,277.8999900,1945.8000000,16.6000000,0.0000000,270.0000000,89.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(14843,272.5996100,1966.0000000,17.9000000,0.0000000,0.0000000,179.9950000); //object(int_policea01) (2)
	CreateDynamicObject(9131,269.2998000,1965.9004000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.0000000,1965.9004000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.7002000,1965.9004000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,271.0000000,1965.9004000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(3095,277.8999900,1965.6000000,16.6000000,0.0000000,270.0000000,269.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,281.7999900,1955.8000000,16.6000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,281.7998000,1961.0996000,16.6000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,277.7998000,1949.7998000,21.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,277.7998000,1961.5996000,21.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,277.7998000,1955.4004000,17.1000000,0.0000000,90.0000000,90.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,271.2002000,1955.2998000,17.1000000,0.0000000,90.0000000,90.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,271.2000100,1949.8000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,277.7999900,1955.8000000,21.0000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,271.2002000,1961.5996000,21.2000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,271.2000100,1955.7000000,21.3000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(9131,268.7000100,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,268.0000000,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,267.2999900,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,267.1000100,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,271.7000100,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,272.3999900,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,273.1000100,1945.5000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,271.0000000,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,269.2999900,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.0000000,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,270.7000100,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,271.7000100,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,272.3999900,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,273.1000100,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,268.6000100,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,267.8999900,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,267.2000100,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,267.0000000,1965.9000000,20.3000000,0.0000000,180.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(1499,266.7000100,1941.8000000,16.6000000,0.0000000,0.0000000,90.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(3055,282.7000100,1972.3000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (1)
	CreateDynamicObject(3055,274.8999900,1972.3000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (2)
	CreateDynamicObject(3055,267.1000100,1972.3000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (3)
	CreateDynamicObject(3055,259.2998000,1972.2998000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (4)
	CreateDynamicObject(3055,251.5000000,1972.3000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (5)
	CreateDynamicObject(3055,250.6000100,1972.3000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (6)
	CreateDynamicObject(3095,246.7998000,1981.5996000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.7998000,1990.9004000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,1999.9000200,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.7002000,1987.2002000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,2008.9000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.7998000,2017.9004000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,2026.9000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,2034.2000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3055,282.7000100,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (7)
	CreateDynamicObject(3055,274.8999900,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (8)
	CreateDynamicObject(3055,267.1000100,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (9)
	CreateDynamicObject(3055,259.2999900,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (10)
	CreateDynamicObject(3055,251.5000000,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (11)
	CreateDynamicObject(3055,250.7000000,2006.4000000,23.1000000,90.0000000,90.0000000,90.0000000); //object(kmb_shutter) (12)
	CreateDynamicObject(3095,246.7998000,1963.5996000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,1954.6000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8000000,1945.6000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.8999900,1945.4000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(14843,260.7999900,1965.9000000,18.0000000,0.0000000,0.0000000,359.9950000); //object(int_policea01) (2)
	CreateDynamicObject(14843,260.7999900,1945.4000000,18.0000000,0.0000000,0.0000000,359.9840000); //object(int_policea01) (2)
	CreateDynamicObject(9131,264.1000100,1945.4000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,263.3999900,1945.4000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.7000100,1945.4000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.3999900,1945.4000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(3095,255.5000000,1945.7002000,16.6000000,0.0000000,270.0000000,89.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(9131,264.1000100,1965.9000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,263.3999900,1965.9000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.7000100,1965.9000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.3999900,1965.9000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(3095,255.5000000,1965.6000000,16.6000000,0.0000000,270.0000000,269.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,251.6000100,1961.6000000,16.6000000,0.0000000,270.0000000,359.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,251.5996100,1949.7002000,16.6000000,0.0000000,270.0000000,359.9840000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,251.5000000,1955.6000000,16.6000000,0.0000000,270.0000000,359.9890000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,262.2002000,1955.2998000,17.1000000,0.0000000,90.0000000,90.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,255.5000000,1961.5996000,21.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,262.2000100,1961.6000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,255.5000000,1949.7000000,21.1000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,262.2000100,1949.7000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,255.5000000,1955.6000000,21.0000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,262.2000100,1955.6000000,21.3000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,255.5000000,1955.4004000,17.1000000,0.0000000,90.0000000,90.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(9131,262.3999900,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.7000100,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,263.3999900,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,264.1000100,1965.9000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,264.1000100,1945.4000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,263.3999900,1945.4000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.3999900,1945.4000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,262.7000100,1945.4000000,20.0000000,0.0000000,0.0000000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,261.7000100,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,261.0000000,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,260.2999900,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,264.7999900,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,265.5000000,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,266.2000100,1945.4000000,20.4000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,261.7000100,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,261.0000000,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,260.2999900,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,264.7999900,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,265.5000000,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(9131,266.2000100,1965.9000000,20.3000000,0.0000000,179.9950000,0.0000000); //object(shbbyhswall13_lvs) (3)
	CreateDynamicObject(1778,279.4003900,1955.5000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_mop_pail) (1)
	CreateDynamicObject(1800,281.0000000,1944.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,281.0000000,1944.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (2)
	CreateDynamicObject(2455,263.8999900,1993.1000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (6)
	CreateDynamicObject(2455,263.8999900,1992.2000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (8)
	CreateDynamicObject(2455,263.8999900,1991.3000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (9)
	CreateDynamicObject(2455,263.8999900,1988.6000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (11)
	CreateDynamicObject(2455,263.8999900,1987.7000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (10)
	CreateDynamicObject(2455,263.8999900,1986.8000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (12)
	CreateDynamicObject(2455,263.8999900,1985.9000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (14)
	CreateDynamicObject(2455,263.8999900,1990.4000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (30)
	CreateDynamicObject(2455,263.8999900,1989.5000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8) (33)
	CreateDynamicObject(2457,263.8999900,1985.0000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8c) (1)
	CreateDynamicObject(2457,263.8999900,1983.1000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8c) (2)
	CreateDynamicObject(2457,263.8999900,1995.0000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8c) (3)
	CreateDynamicObject(2457,263.8999900,1996.9000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8c) (4)
	CreateDynamicObject(2454,264.0000000,1998.0000000,16.7000000,0.0000000,0.0000000,184.2460000); //object(cj_ff_conter_8b) (1)
	CreateDynamicObject(2454,263.8999900,1981.2000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(cj_ff_conter_8b) (2)
	CreateDynamicObject(2455,264.7000100,1981.1000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(cj_ff_conter_8) (35)
	CreateDynamicObject(2455,264.7000100,1998.0000000,16.7000000,0.0000000,0.0000000,179.9950000); //object(cj_ff_conter_8) (37)
	CreateDynamicObject(1502,266.7000100,1998.0000000,15.3000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint04) (1)
	CreateDynamicObject(1502,266.7000100,1981.1000000,15.3000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint04) (2)
	CreateDynamicObject(2738,281.2998000,1954.4004000,17.2000000,0.0000000,0.0000000,270.0000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2739,279.7998000,1954.9004000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_b_sink1) (1)
	CreateDynamicObject(2812,258.1000100,1982.4000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(gb_platedirty01) (1)
	CreateDynamicObject(12842,255.3000000,2000.8000000,17.2000000,0.0000000,0.0000000,90.0000000); //object(cos_pizseats) (1)
	CreateDynamicObject(12842,255.3000000,1992.7000000,17.2000000,0.0000000,0.0000000,90.0000000); //object(cos_pizseats) (2)
	CreateDynamicObject(12842,255.3999900,1984.2000000,17.2000000,0.0000000,0.0000000,90.0000000); //object(cos_pizseats) (4)
	CreateDynamicObject(2812,254.5000000,1982.4000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(gb_platedirty01) (2)
	CreateDynamicObject(2812,256.1000100,1990.9000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(gb_platedirty01) (3)
	CreateDynamicObject(2812,252.6000100,1990.9000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(gb_platedirty01) (4)
	CreateDynamicObject(2812,258.0000000,1999.0000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(gb_platedirty01) (5)
	CreateDynamicObject(2812,256.2000100,1999.0000000,17.5000000,0.0000000,0.0000000,259.9970000); //object(gb_platedirty01) (6)
	CreateDynamicObject(2812,254.3999900,2002.4000000,17.5000000,0.0000000,0.0000000,99.9920000); //object(gb_platedirty01) (7)
	CreateDynamicObject(2822,263.8999900,1985.8000000,17.7000000,0.0000000,0.0000000,270.0000000); //object(gb_kitchplatecln01) (1)
	CreateDynamicObject(2822,263.8999900,1986.2000000,17.6000000,0.0000000,0.0000000,270.0000000); //object(gb_kitchplatecln01) (2)
	CreateDynamicObject(2822,263.8999900,1986.2000000,17.8000000,0.0000000,0.0000000,270.0000000); //object(gb_kitchplatecln01) (3)
	CreateDynamicObject(2830,256.2999900,1982.3000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(gb_platedirty04) (1)
	CreateDynamicObject(2830,252.7000000,1982.7000000,17.5000000,0.0000000,0.0000000,85.9950000); //object(gb_platedirty04) (2)
	CreateDynamicObject(2830,254.5000000,1985.7000000,17.5000000,0.0000000,0.0000000,85.9900000); //object(gb_platedirty04) (3)
	CreateDynamicObject(2830,252.6000100,1998.9000000,17.5000000,0.0000000,0.0000000,85.9900000); //object(gb_platedirty04) (4)
	CreateDynamicObject(2830,256.2999900,2002.5000000,17.5000000,0.0000000,0.0000000,85.9900000); //object(gb_platedirty04) (5)
	CreateDynamicObject(2850,258.1000100,1985.8000000,17.5000000,0.0000000,0.0000000,299.9980000); //object(gb_kitchdirt04) (1)
	CreateDynamicObject(2850,254.3999900,1991.0000000,17.5000000,0.0000000,0.0000000,299.9930000); //object(gb_kitchdirt04) (2)
	CreateDynamicObject(2850,258.0000000,2002.4000000,17.5000000,0.0000000,0.0000000,299.9930000); //object(gb_kitchdirt04) (3)
	CreateDynamicObject(2851,256.2999900,1994.2000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(gb_kitchdirt05) (1)
	CreateDynamicObject(2851,252.7000000,1994.4000000,17.5000000,0.0000000,0.0000000,199.9950000); //object(gb_kitchdirt05) (2)
	CreateDynamicObject(2863,263.8999900,1986.7000000,17.7000000,0.0000000,0.0000000,0.0000000); //object(gb_kitchplatecln03) (1)
	CreateDynamicObject(2862,263.8999900,1987.5000000,17.7000000,0.0000000,0.0000000,289.9950000); //object(gb_kitchplatecln02) (1)
	CreateDynamicObject(2803,264.6000100,1981.8000000,17.1000000,0.0000000,0.0000000,0.0000000); //object(cj_meat_bag_1) (1)
	CreateDynamicObject(2804,264.0000000,1982.8000000,17.7000000,0.0000000,0.0000000,0.0000000); //object(cj_meat_1) (1)
	CreateDynamicObject(2805,264.5000000,1982.4000000,17.2000000,19.3850000,30.6570000,294.6150000); //object(cj_meat_bag_2) (1)
	CreateDynamicObject(2806,264.0000000,1984.5000000,17.6000000,0.0000000,0.0000000,15.9960000); //object(cj_meat_2) (1)
	CreateDynamicObject(1499,284.1000100,1970.7000000,16.6000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(1499,249.2000000,1974.6000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(17513,229.5996100,2001.2002000,10.1000000,0.0000000,0.0000000,180.7470000); //object(lae2_ground04) (2)
	CreateDynamicObject(1800,278.2998000,1944.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,278.2998000,1944.7998000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (5)
	CreateDynamicObject(991,280.5996100,1953.4004000,17.7000000,0.0000000,90.0000000,0.0000000); //object(bar_barriergate1) (1)
	CreateDynamicObject(991,277.8999900,1954.5000000,17.7000000,0.0000000,90.0000000,270.0000000); //object(bar_barriergate1) (2)
	CreateDynamicObject(1491,277.9003900,1953.5000000,16.6000000,0.0000000,0.0000000,359.7470000); //object(gen_doorint01) (2)
	CreateDynamicObject(992,279.6000100,1953.1000000,20.6000000,0.0000000,0.0000000,0.0000000); //object(bar_barrier10b) (1)
	CreateDynamicObject(1800,275.7000100,1944.8000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,275.7000100,1944.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,275.4003900,1951.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,275.4003900,1951.7998000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,272.7998000,1951.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,272.7999900,1951.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,270.2998000,1951.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,270.2998000,1951.7998000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,267.7002000,1951.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,267.7000100,1951.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(991,277.8999900,1956.9000000,17.7000000,0.0000000,90.0000000,270.0000000); //object(bar_barriergate1) (2)
	CreateDynamicObject(1491,277.8999900,1958.0000000,16.6000000,0.0000000,0.0000000,359.2470000); //object(gen_doorint01) (2)
	CreateDynamicObject(991,280.6000100,1958.0000000,17.7000000,0.0000000,90.0000000,0.0000000); //object(bar_barriergate1) (1)
	CreateDynamicObject(992,279.6000100,1957.8000000,20.6000000,0.0000000,0.0000000,0.0000000); //object(bar_barrier10b) (1)
	CreateDynamicObject(2738,281.2999900,1957.0000000,17.2000000,0.0000000,0.0000000,270.0000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2739,280.7999900,1956.5000000,16.6000000,0.0000000,0.0000000,180.0000000); //object(cj_b_sink1) (1)
	CreateDynamicObject(1778,281.5000000,1956.4000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_mop_pail) (1)
	CreateDynamicObject(1800,275.3999900,1954.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,275.3999900,1954.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,272.7999900,1954.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,272.7999900,1954.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,270.2999900,1954.8000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,270.2999900,1954.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,267.7000100,1954.8000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,267.7000100,1954.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (4)
	CreateDynamicObject(1800,280.3999900,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,277.8999900,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,275.1000100,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,275.1000100,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,277.8999900,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,280.4003900,1962.0996000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,280.3999900,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(2738,266.1000100,1954.4000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(991,262.7999900,1954.4000000,18.0000000,0.0000000,90.0000000,270.0000000); //object(bar_barriergate1) (2)
	CreateDynamicObject(2739,264.2999900,1954.8000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(cj_b_sink1) (1)
	CreateDynamicObject(1778,264.0000000,1955.4000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(cj_mop_pail) (1)
	CreateDynamicObject(1491,262.7998000,1953.2998000,16.6000000,0.0000000,0.0000000,359.7420000); //object(gen_doorint01) (2)
	CreateDynamicObject(991,265.5000000,1953.3000000,17.9000000,0.0000000,90.0000000,0.0000000); //object(bar_barriergate1) (1)
	CreateDynamicObject(992,264.5000000,1953.0000000,20.6000000,0.0000000,0.0000000,0.0000000); //object(bar_barrier10b) (1)
	CreateDynamicObject(1800,252.8000000,1944.6000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.6000100,1944.6000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.2999900,1944.6000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.8000000,1944.6000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.6000100,1944.6000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.2999900,1944.6000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,261.0000000,1951.7998000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.2999900,1951.8000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.3999900,1951.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.7000000,1951.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.7000000,1951.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.4003900,1951.9004000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.2999900,1951.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,261.0000000,1951.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(991,262.7999900,1956.8000000,18.0000000,0.0000000,90.0000000,270.0000000); //object(bar_barriergate1) (2)
	CreateDynamicObject(1491,262.7999900,1957.9000000,16.6000000,0.0000000,0.0000000,359.7420000); //object(gen_doorint01) (2)
	CreateDynamicObject(991,265.5000000,1957.9000000,17.9000000,0.0000000,90.0000000,0.0000000); //object(bar_barriergate1) (1)
	CreateDynamicObject(992,264.5000000,1957.6000000,20.6000000,0.0000000,0.0000000,0.0000000); //object(bar_barrier10b) (1)
	CreateDynamicObject(2738,266.1000100,1956.8000000,17.3000000,0.0000000,0.0000000,270.0000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2739,265.2999900,1956.4000000,16.7000000,0.0000000,0.0000000,179.9950000); //object(cj_b_sink1) (1)
	CreateDynamicObject(1778,263.5000000,1956.3000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(cj_mop_pail) (1)
	CreateDynamicObject(1800,261.2000100,1954.8000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.6000100,1954.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.5000000,1954.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.8000000,1954.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,261.2000100,1954.8000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.6000100,1954.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.5000000,1954.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.8000000,1954.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.8000000,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.3999900,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.0000000,1962.1000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,252.8000000,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,255.3999900,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(1800,258.0000000,1962.1000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(low_bed_1) (1)
	CreateDynamicObject(10252,267.2000100,2051.3999000,18.3000000,0.0000000,0.0000000,270.0000000); //object(china_town_gateb) (2)
	CreateDynamicObject(3050,266.5000000,2043.3000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (1)
	CreateDynamicObject(3050,266.5000000,2038.6000000,16.4000000,0.0000000,180.0000000,90.0000000); //object(des_quarrygate2) (2)
	CreateDynamicObject(3050,266.5000000,2043.0996000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (3)
	CreateDynamicObject(3050,266.5000000,2047.7998000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (4)
	CreateDynamicObject(3050,266.5000000,2059.7000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (7)
	CreateDynamicObject(3050,266.5000000,2064.2000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (8)
	CreateDynamicObject(3050,266.5000000,2068.7000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (9)
	CreateDynamicObject(3050,266.5000000,2073.2000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (10)
	CreateDynamicObject(3050,266.5000000,2077.7000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (11)
	CreateDynamicObject(3050,266.5000000,2079.0000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (12)
	CreateDynamicObject(3050,266.5000000,2055.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (13)
	CreateDynamicObject(3050,266.5000000,2059.5000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (14)
	CreateDynamicObject(3050,266.5000000,2064.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (15)
	CreateDynamicObject(3050,266.5000000,2068.5000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (16)
	CreateDynamicObject(3050,266.5000000,2073.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (17)
	CreateDynamicObject(3050,266.5000000,2074.3000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (18)
	portaoPresidio2 = CreateObject(988,266.3999900,2052.8999000,17.6000000,0.0000000,0.0000000,90.0000000); //object(ws_apgate) (1)
	CreateDynamicObject(10252,267.2000100,2051.3999000,19.9000000,0.0000000,0.0000000,270.0000000); //object(china_town_gateb) (3)
	CreateDynamicObject(2631,200.0000000,1994.2000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(2631,200.0000000,1996.1000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(2631,203.8999900,1994.2000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(2631,203.8999900,1996.1000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(1943,198.6000100,2003.1000000,16.8000000,90.0000000,0.0000000,0.0000000); //object(kg20) (3)
	CreateDynamicObject(3117,250.0000000,1940.9000000,17.4000000,0.0000000,270.0000000,270.0000000); //object(a51_ventcoverb) (1)
	CreateDynamicObject(3117,266.7000100,2002.7000000,17.4000000,0.0000000,270.0000000,0.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3050,286.5000000,2038.7000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (28)
	CreateDynamicObject(3050,286.5000000,2043.2000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (29)
	CreateDynamicObject(10252,287.2000100,2051.3999000,18.3000000,0.0000000,0.0000000,270.0000000); //object(china_town_gateb) (4)
	CreateDynamicObject(10252,287.2000100,2051.3999000,19.9000000,0.0000000,0.0000000,270.0000000); //object(china_town_gateb) (5)
	CreateDynamicObject(3050,286.5000000,2047.8000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (30)
	CreateDynamicObject(3050,286.5000000,2043.4000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (31)
	portaoPresidio1 = CreateObject(988,286.3999900,2052.7000000,17.6000000,0.0000000,0.0000000,90.0000000); //object(ws_apgate) (2)
	CreateDynamicObject(3050,286.5000000,2059.6001000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (34)
	CreateDynamicObject(3050,286.5000000,2064.1001000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (35)
	CreateDynamicObject(3050,286.5000000,2068.6001000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (36)
	CreateDynamicObject(3050,286.5000000,2073.1001000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (37)
	CreateDynamicObject(3050,286.5000000,2077.6001000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (38)
	CreateDynamicObject(3050,286.5000000,2079.0000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (39)
	CreateDynamicObject(3050,286.5000000,2055.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (40)
	CreateDynamicObject(3050,286.5000000,2059.5000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (41)
	CreateDynamicObject(3050,286.5000000,2064.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (42)
	CreateDynamicObject(3050,286.5000000,2068.5000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (43)
	CreateDynamicObject(3050,286.5000000,2073.0000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (44)
	CreateDynamicObject(3050,286.5000000,2074.3000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (45)
	CreateDynamicObject(3117,283.5000000,2004.5000000,17.4000000,0.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (4)
	CreateDynamicObject(3117,264.8999900,1977.4000000,17.4000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,261.3999900,1977.4000000,17.4000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,257.8999900,1977.4000000,17.4000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,264.8999900,1977.4000000,19.5000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,261.4003900,1977.4004000,19.5000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,257.8999900,1977.4000000,19.5000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,257.8999900,1977.4000000,21.6000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,261.3999900,1977.4000000,21.6000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,264.8999900,1977.4000000,21.6000000,90.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(1499,266.7000100,1975.6000000,16.6000000,0.0000000,0.0000000,90.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(2527,269.2999900,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (2)
	CreateDynamicObject(2527,271.0000000,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (3)
	CreateDynamicObject(2527,272.7000100,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (4)
	CreateDynamicObject(2527,277.8999900,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (5)
	CreateDynamicObject(2527,279.6000100,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (6)
	CreateDynamicObject(2527,283.0996100,2002.9004000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (7)
	CreateDynamicObject(2518,267.2999900,2000.4000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (1)
	CreateDynamicObject(2518,267.2999900,1999.0000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (2)
	CreateDynamicObject(2518,267.2999900,1997.5000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (3)
	CreateDynamicObject(2518,267.2999900,1996.0000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (4)
	CreateDynamicObject(2518,267.2999900,1994.4000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (5)
	CreateDynamicObject(2518,267.2999900,1992.9000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (6)
	CreateDynamicObject(2518,267.2999900,1991.3000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (7)
	CreateDynamicObject(2518,267.2999900,1989.7000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (8)
	CreateDynamicObject(2518,267.2999900,1988.0000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (9)
	CreateDynamicObject(2518,267.2999900,1986.5000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (10)
	CreateDynamicObject(2518,267.2999900,1984.9000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (11)
	CreateDynamicObject(2518,267.2999900,1983.3000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (12)
	CreateDynamicObject(2518,267.2999900,1981.4000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_b_sink2) (13)
	CreateDynamicObject(2527,274.3999900,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (14)
	CreateDynamicObject(2527,276.2000100,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (15)
	CreateDynamicObject(2527,281.3999900,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (16)
	CreateDynamicObject(2527,284.7999900,2002.9000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(cj_shower4) (17)
	CreateDynamicObject(2602,285.6000100,1994.6000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (2)
	CreateDynamicObject(2602,285.6000100,1997.7000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (4)
	CreateDynamicObject(2602,285.6000100,2000.9000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (6)
	CreateDynamicObject(2602,285.6000100,1991.4000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (7)
	CreateDynamicObject(2602,285.6000100,1988.4000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (9)
	CreateDynamicObject(2602,285.6000100,1985.5000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (11)
	CreateDynamicObject(2602,285.6000100,1982.3000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (13)
	CreateDynamicObject(2602,285.6000100,1979.4000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (15)
	CreateDynamicObject(2602,285.6000100,1976.1000000,17.9000000,0.0000000,0.0000000,270.0000000); //object(police_cell_toilet) (17)
	CreateDynamicObject(2713,267.0000000,1981.5000000,16.8000000,0.0000000,0.0000000,90.0000000); //object(cj_bucket) (1)
	CreateDynamicObject(2713,268.5000000,2004.2998000,16.8000000,0.0000000,0.0000000,179.9950000); //object(cj_bucket) (2)
	CreateDynamicObject(2741,286.0000000,1999.0000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (1)
	CreateDynamicObject(2741,286.0000000,1996.0000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (2)
	CreateDynamicObject(2741,286.0000000,1992.9000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (3)
	CreateDynamicObject(2741,286.0000000,1989.7000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (4)
	CreateDynamicObject(2741,286.0000000,1986.8000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (5)
	CreateDynamicObject(2741,286.0000000,1983.8000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (6)
	CreateDynamicObject(2741,286.0000000,1980.7000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (7)
	CreateDynamicObject(2741,286.0000000,1977.6000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_soap_disp) (8)
	CreateDynamicObject(2819,276.7000100,1956.6000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(gb_bedclothes01) (1)
	CreateDynamicObject(2828,281.2000100,1947.2000000,17.4000000,0.0000000,0.0000000,50.0000000); //object(gb_ornament02) (1)
	CreateDynamicObject(2855,275.7999900,1953.5000000,18.4000000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (1)
	CreateDynamicObject(2816,253.0000000,1946.8000000,17.4000000,0.0000000,0.0000000,120.0000000); //object(gb_bedmags01) (1)
	CreateDynamicObject(2824,255.5000000,1964.2000000,18.4000000,0.0000000,0.0000000,0.0000000); //object(gb_novels02) (1)
	CreateDynamicObject(2827,258.2000100,1964.0000000,17.3000000,0.0000000,0.0000000,0.0000000); //object(gb_novels05) (1)
	CreateDynamicObject(3095,246.8999900,1966.2000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,246.7000000,1979.1000000,18.5000000,0.0000000,270.0000000,179.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(1499,284.1000100,2038.7000000,16.6000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint05) (2)
	CreateDynamicObject(3117,249.9003900,2008.7998000,17.4000000,0.0000000,270.0000000,90.0000000); //object(a51_ventcoverb) (4)
	CreateDynamicObject(3050,266.6000100,1940.8000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (4)
	CreateDynamicObject(3050,266.6000100,1936.3000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (4)
	CreateDynamicObject(3050,266.6000100,1931.8000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (4)
	CreateDynamicObject(3050,266.6000100,1927.4000000,20.8000000,0.0000000,0.0000000,90.0000000); //object(des_quarrygate2) (4)
	CreateDynamicObject(3050,266.6000100,1936.2000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (3)
	CreateDynamicObject(3050,266.6000100,1931.7000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (3)
	CreateDynamicObject(3050,266.6000100,1927.2000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (3)
	CreateDynamicObject(3050,266.6000100,1922.7000000,16.4000000,0.0000000,179.9950000,90.0000000); //object(des_quarrygate2) (3)
	CreateDynamicObject(3117,266.7000100,2037.0000000,17.4000000,0.0000000,270.0000000,0.0000000); //object(a51_ventcoverb) (4)
	CreateDynamicObject(7294,266.5000000,2018.1000000,12.7000000,0.0000000,0.0000000,90.0000000); //object(vgsn_polnb01) (1)
	CreateDynamicObject(2922,302.0000000,1780.8000000,18.4000000,0.0000000,0.0000000,180.0000000); //object(kmb_keypad) (1)
	CreateDynamicObject(2922,286.5000000,2055.3999000,18.4000000,0.0000000,0.0000000,269.9950000); //object(kmb_keypad) (2)
	CreateDynamicObject(2922,284.2999900,2038.8000000,18.4000000,0.0000000,0.0000000,359.9890000); //object(kmb_keypad) (3)
	CreateDynamicObject(2922,266.7999900,2011.7000000,18.4000000,0.0000000,0.0000000,269.9840000); //object(kmb_keypad) (4)
	CreateDynamicObject(2004,266.6000100,2037.4000000,18.7000000,0.0000000,0.0000000,270.0000000); //object(cr_safe_door) (1)
	CreateDynamicObject(1502,266.7002000,2009.7998000,16.6000000,0.0000000,0.0000000,90.0000000); //object(gen_doorint04) (5)
	CreateDynamicObject(2921,267.2000100,2008.7000000,22.1000000,1.4740000,349.2460000,274.0300000); //object(kmb_cam) (1)
	CreateDynamicObject(2921,286.3999900,2039.0000000,21.4000000,1.4860000,352.4950000,321.9430000); //object(kmb_cam) (2)
	CreateDynamicObject(2921,286.6000100,2078.5000000,21.4000000,1.4860000,6.4960000,129.5760000); //object(kmb_cam) (3)
	CreateDynamicObject(2921,317.8999900,1780.5000000,24.7000000,1.4510000,346.4860000,52.0900000); //object(kmb_cam) (4)
	CreateDynamicObject(2921,247.2000000,2038.4000000,22.2000000,1.4910000,1.7360000,254.9420000); //object(kmb_cam) (5)
	CreateDynamicObject(2921,247.1000100,1969.6000000,22.6000000,1.4020000,340.2290000,339.9870000); //object(kmb_cam) (6)
	CreateDynamicObject(2921,285.7999900,1974.6000000,22.1000000,1.4520000,347.2270000,50.0580000); //object(kmb_cam) (7)
	CreateDynamicObject(2921,266.8999900,1966.1000000,21.4000000,1.4530000,347.7230000,228.7910000); //object(kmb_cam) (8)
	CreateDynamicObject(2921,282.2000100,1945.5000000,21.2000000,1.4730000,352.9740000,46.9060000); //object(kmb_cam) (9)
	CreateDynamicObject(2921,266.5000000,1945.2000000,21.6000000,1.4270000,344.2220000,45.3780000); //object(kmb_cam) (10)
	CreateDynamicObject(2921,251.3999900,1966.0000000,21.0000000,1.4780000,0.4730000,223.7090000); //object(kmb_cam) (11)
	CreateDynamicObject(2921,266.3999900,1977.4000000,21.9000000,1.4400000,346.9680000,47.5540000); //object(kmb_cam) (12)
	CreateDynamicObject(2921,247.2000000,2003.8000000,22.1000000,1.4390000,346.9650000,151.5540000); //object(kmb_cam) (13)
	CreateDynamicObject(2921,266.6000100,2004.0000000,22.1000000,1.4340000,346.9590000,161.8010000); //object(kmb_cam) (14)
	CreateDynamicObject(14395,271.6000100,2075.7000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(dr_gsnew11) (1)
	CreateDynamicObject(14395,271.8999900,2069.8000000,17.9000000,0.0000000,0.0000000,90.0000000); //object(dr_gsnew11) (2)
	CreateDynamicObject(3095,271.6000100,2074.3999000,17.6000000,0.0000000,270.0000000,180.0000000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,268.7000100,2074.3999000,17.6000000,0.0000000,270.0000000,359.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3117,272.7999900,2066.8999000,16.8000000,53.0000000,90.0000000,270.2500000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3095,268.7999900,2074.5000000,19.6000000,0.0000000,270.0000000,359.9890000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3117,272.7999900,2070.0000000,16.8000000,52.9980000,90.0000000,270.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,270.2999900,2066.8000000,17.7000000,90.0000000,90.0000000,270.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3095,268.7000100,2071.2000000,17.6000000,0.0000000,270.0000000,359.9890000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,268.7999900,2071.2000000,19.6000000,0.0000000,270.0000000,359.9890000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3117,275.6000100,2077.3000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,277.7000100,2077.3000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3095,276.2000100,2076.0000000,19.6000000,0.0000000,270.0000000,89.9950000); //object(a51_jetdoor) (4)
	CreateDynamicObject(3117,279.7999900,2077.3000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,280.7999900,2077.3000000,22.9000000,90.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,280.7999900,2077.3000000,20.8000000,90.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,280.7999900,2077.3000000,18.7000000,90.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,280.7999900,2077.3000000,16.6000000,90.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,279.7999900,2080.8000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,277.7000100,2080.8000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,275.6000100,2080.8000000,24.0000000,0.0000000,0.0000000,90.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,279.1000100,2082.7000000,23.1000000,90.0000000,180.0000000,0.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(3117,276.2999900,2082.7000000,23.1000000,90.0000000,179.9950000,0.0000000); //object(a51_ventcoverb) (2)
	CreateDynamicObject(970,280.7999900,2077.6001000,24.6000000,0.0000000,0.0000000,270.2470000); //object(fencesmallb) (18)
	CreateDynamicObject(970,278.7999900,2075.6001000,24.6000000,0.0000000,0.0000000,180.2470000); //object(fencesmallb) (18)
	CreateDynamicObject(970,276.2999900,2075.6001000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,272.5000000,2079.0000000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,268.3999900,2079.0000000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,271.7999900,2073.3000000,22.6000000,0.0000000,0.0000000,270.2470000); //object(fencesmallb) (18)
	CreateDynamicObject(970,271.7999900,2072.0000000,22.6000000,0.0000000,0.0000000,270.2470000); //object(fencesmallb) (18)
	CreateDynamicObject(14877,272.7998000,2080.5000000,22.0000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,272.7999900,2081.3000000,22.0000000,0.0000000,0.0000000,0.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,282.7999900,2081.3000000,22.0000000,0.0000000,0.0000000,180.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(14877,282.7999900,2080.5000000,22.0000000,0.0000000,0.0000000,180.2420000); //object(michelle-stairs) (1)
	CreateDynamicObject(970,273.7999900,2075.6001000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,278.7000100,2082.8999000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,274.5000000,2082.8999000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,270.2999900,2082.8999000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,282.8999900,2082.8999000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,282.8999900,2079.0000000,24.6000000,0.0000000,0.0000000,180.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,268.5000000,2076.8999000,24.6000000,0.0000000,0.0000000,270.2420000); //object(fencesmallb) (18)
	CreateDynamicObject(970,268.5000000,2072.8000000,24.6000000,0.0000000,0.0000000,270.2360000); //object(fencesmallb) (18)
	CreateDynamicObject(970,268.5000000,2068.8000000,24.6000000,0.0000000,0.0000000,270.2360000); //object(fencesmallb) (18)
	CreateObject(10834,138.5996100,1964.5996000,11.7000000,0.0000000,0.0000000,0.0000000); //object(navybase_03_sfse) (1)
	CreateObject(10834,140.2002000,2014.9004000,11.7000000,0.0000000,0.0000000,0.0000000); //object(navybase_03_sfse) (2)
	CreateObject(10834,140.2998000,2011.0996000,11.6000000,0.0000000,0.0000000,0.0000000); //object(navybase_03_sfse) (4)
	CreateDynamicObject(10830,222.2000000,2015.1000000,24.9000000,0.0000000,0.0000000,45.0000000); //object(drydock2_sfse) (1)
	CreateDynamicObject(2631,200.0000000,1998.0000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(2631,203.8999900,1998.0000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat1) (8)
	CreateDynamicObject(2632,200.0000000,2001.8000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(2632,200.0000000,2003.7000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(2632,203.8999900,1999.9000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(2632,203.8999900,2001.8000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(2632,203.8999900,2003.7000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(gym_mat02) (2)
	CreateDynamicObject(1943,198.6000100,2003.7000000,16.8000000,90.0000000,0.0000000,0.0000000); //object(kg20) (3)
	CreateDynamicObject(1943,198.6000100,2004.3000000,16.8000000,90.0000000,0.0000000,0.0000000); //object(kg20) (3)
	CreateDynamicObject(2606,266.3999900,2034.6000000,19.0000000,17.0000000,0.0000000,270.0000000); //object(cj_police_counter2) (1)
	CreateDynamicObject(2609,266.2000100,2031.7000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (1)
	CreateDynamicObject(2737,266.5000000,2014.3000000,18.1000000,0.0000000,0.0000000,270.0000000); //object(police_nb_car) (1)
	CreateDynamicObject(2616,247.3999900,2018.3000000,18.0000000,0.0000000,0.0000000,90.0000000); //object(police_nb04) (1)
	CreateDynamicObject(2611,266.5000000,2016.4000000,18.0000000,0.0000000,0.0000000,270.0000000); //object(police_nb1) (1)
	CreateDynamicObject(2356,265.0996100,2034.5996000,16.7000000,0.0000000,0.0000000,259.9970000); //object(police_off_chair) (1)
	CreateDynamicObject(2186,266.1000100,2030.9000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(photocopier_1) (1)
	CreateDynamicObject(3279,355.2000100,2028.8000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(a51_spottower) (1)
	CreateDynamicObject(3388,265.7000100,2037.7000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(a51_srack4_) (1)
	CreateDynamicObject(3388,264.7000100,2037.7000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(a51_srack4_) (2)
	CreateDynamicObject(3388,263.7000100,2037.7000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(a51_srack4_) (3)
	CreateDynamicObject(2604,266.1000100,2033.8000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_police_counter) (1)
	CreateDynamicObject(16378,249.5000000,2011.1000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(des_byofficeint) (1)
	CreateDynamicObject(1892,279.0000000,2031.0000000,16.7000000,0.0000000,0.0000000,180.0000000); //object(security_gatsh) (1)
	CreateDynamicObject(2190,260.2000100,2022.1000000,17.5000000,0.0000000,0.0000000,337.0000000); //object(pc_1) (1)
	CreateDynamicObject(2172,266.1000100,2027.5000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(med_office2_desk_1) (1)
	CreateDynamicObject(2609,266.2000100,2029.3000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (2)
	CreateDynamicObject(2609,266.2000100,2028.8000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (3)
	CreateDynamicObject(2609,266.2000100,2028.3000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (4)
	CreateDynamicObject(2609,266.2000100,2028.3000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (5)
	CreateDynamicObject(2609,266.2000100,2028.8000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (6)
	CreateDynamicObject(2609,266.2000100,2029.3000000,18.9000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (7)
	CreateDynamicObject(2172,266.1000100,2025.4000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(med_office2_desk_1) (2)
	CreateDynamicObject(2172,266.1000100,2023.3000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(med_office2_desk_1) (3)
	CreateDynamicObject(2356,265.1000100,2032.7000000,16.7000000,0.0000000,0.0000000,271.9970000); //object(police_off_chair) (2)
	CreateDynamicObject(2356,265.2000100,2026.9000000,16.7000000,0.0000000,0.0000000,271.9940000); //object(police_off_chair) (3)
	CreateDynamicObject(2356,265.2000100,2024.9000000,16.7000000,0.0000000,0.0000000,261.9940000); //object(police_off_chair) (4)
	CreateDynamicObject(2356,265.2000100,2022.9000000,16.7000000,0.0000000,0.0000000,264.9910000); //object(police_off_chair) (5)
	CreateDynamicObject(2181,266.1000100,2020.7000000,16.7000000,0.0000000,0.0000000,270.0000000); //object(med_office5_desk_2) (1)
	CreateDynamicObject(2183,259.2999900,2030.0000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (1)
	CreateDynamicObject(2609,266.2000100,2021.5000000,17.5000000,0.0000000,0.0000000,270.0000000); //object(cj_p_fileing1) (8)
	CreateDynamicObject(2356,265.2000100,2020.2000000,16.7000000,0.0000000,0.0000000,286.9900000); //object(police_off_chair) (6)
	CreateDynamicObject(2604,250.2000000,2038.0000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_police_counter) (3)
	CreateDynamicObject(2604,253.8999900,2038.0000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_police_counter) (4)
	CreateDynamicObject(2604,257.6000100,2038.0000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_police_counter) (5)
	CreateDynamicObject(2604,261.2999900,2038.0000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_police_counter) (6)
	CreateDynamicObject(2609,247.6000100,2038.2000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_p_fileing1) (9)
	CreateDynamicObject(2609,248.0000000,2038.2000000,17.5000000,0.0000000,0.0000000,0.0000000); //object(cj_p_fileing1) (10)
	CreateDynamicObject(2606,266.3999900,2027.0000000,19.0000000,16.9960000,0.0000000,270.0000000); //object(cj_police_counter2) (2)
	CreateDynamicObject(2606,266.3999900,2024.9000000,19.0000000,16.9960000,0.0000000,270.0000000); //object(cj_police_counter2) (3)
	CreateDynamicObject(2606,266.3999900,2022.8000000,19.0000000,16.9960000,0.0000000,270.0000000); //object(cj_police_counter2) (4)
	CreateDynamicObject(2183,259.2999900,2025.9000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (2)
	CreateDynamicObject(2183,259.2999900,2021.8000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (3)
	CreateDynamicObject(2183,252.7000000,2021.8000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (4)
	CreateDynamicObject(2183,252.7000000,2025.9000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (5)
	CreateDynamicObject(2183,252.7000000,2030.0000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(med_office3_desk_09) (6)
	CreateDynamicObject(2606,266.3999900,2032.5000000,19.0000000,16.9960000,0.0000000,270.0000000); //object(cj_police_counter2) (5)
	CreateDynamicObject(2190,261.8999900,2022.1000000,17.5000000,0.0000000,0.0000000,336.9950000); //object(pc_1) (2)
	CreateDynamicObject(2190,255.2000000,2022.1000000,17.5000000,0.0000000,0.0000000,336.9950000); //object(pc_1) (3)
	CreateDynamicObject(2190,253.6000100,2022.1000000,17.5000000,0.0000000,0.0000000,336.9950000); //object(pc_1) (4)
	CreateDynamicObject(2190,253.2000000,2022.8000000,17.5000000,0.0000000,0.0000000,158.2450000); //object(pc_1) (5)
	CreateDynamicObject(2190,254.8000000,2022.8000000,17.5000000,0.0000000,0.0000000,156.2420000); //object(pc_1) (6)
	CreateDynamicObject(2190,259.7000100,2022.8000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (7)
	CreateDynamicObject(2190,261.2999900,2022.8000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (8)
	CreateDynamicObject(2190,261.3999900,2026.9000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (9)
	CreateDynamicObject(2190,259.7000100,2026.9000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (10)
	CreateDynamicObject(2190,254.8000000,2026.9000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (11)
	CreateDynamicObject(2190,253.2000000,2026.9000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (12)
	CreateDynamicObject(2190,253.2000000,2031.0000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (13)
	CreateDynamicObject(2190,254.7000000,2031.0000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (14)
	CreateDynamicObject(2190,259.7999900,2031.0000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (15)
	CreateDynamicObject(2190,261.2999900,2031.0000000,17.5000000,0.0000000,0.0000000,156.2370000); //object(pc_1) (16)
	CreateDynamicObject(2190,261.7999900,2030.3000000,17.5000000,0.0000000,0.0000000,336.2370000); //object(pc_1) (17)
	CreateDynamicObject(2190,260.2999900,2030.3000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (18)
	CreateDynamicObject(2190,255.2000000,2030.3000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (19)
	CreateDynamicObject(2190,253.6000100,2030.3000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (20)
	CreateDynamicObject(2190,253.7000000,2026.2000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (21)
	CreateDynamicObject(2190,255.2000000,2026.2000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (22)
	CreateDynamicObject(2190,260.2000100,2026.2000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (23)
	CreateDynamicObject(2190,261.7999900,2026.2000000,17.5000000,0.0000000,0.0000000,336.2310000); //object(pc_1) (24)
	CreateDynamicObject(2181,247.8000000,2019.8000000,16.7000000,0.0000000,0.0000000,90.0000000); //object(med_office5_desk_2) (2)
	CreateDynamicObject(2609,247.8000000,2021.6000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (11)
	CreateDynamicObject(2172,247.8999900,2022.4000000,16.7000000,0.0000000,0.0000000,90.0000000); //object(med_office2_desk_1) (4)
	CreateDynamicObject(2172,247.8999900,2024.5000000,16.7000000,0.0000000,0.0000000,90.0000000); //object(med_office2_desk_1) (5)
	CreateDynamicObject(2172,247.8999900,2026.6000000,16.7000000,0.0000000,0.0000000,90.0000000); //object(med_office2_desk_1) (6)
	CreateDynamicObject(2609,247.8000000,2028.4000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (12)
	CreateDynamicObject(2609,247.8000000,2028.8000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (13)
	CreateDynamicObject(2609,247.8000000,2029.2000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (14)
	CreateDynamicObject(2609,247.8000000,2029.2000000,18.9000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (15)
	CreateDynamicObject(2609,247.8000000,2028.8000000,18.9000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (16)
	CreateDynamicObject(2609,247.8000000,2028.4000000,18.9000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (17)
	CreateDynamicObject(2186,247.8999900,2030.0000000,16.7000000,0.0000000,0.0000000,90.0000000); //object(photocopier_1) (2)
	CreateDynamicObject(2609,247.8000000,2031.7000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_p_fileing1) (18)
	CreateDynamicObject(2604,247.8999900,2033.8000000,17.5000000,0.0000000,0.0000000,90.0000000); //object(cj_police_counter) (7)
	CreateDynamicObject(2606,247.3999900,2034.8000000,19.0000000,16.9960000,0.0000000,90.0000000); //object(cj_police_counter2) (6)
	CreateDynamicObject(2606,247.3999900,2032.6000000,19.0000000,16.9960000,0.0000000,90.0000000); //object(cj_police_counter2) (7)
	CreateDynamicObject(2606,247.3999900,2027.1000000,19.0000000,16.9960000,0.0000000,90.0000000); //object(cj_police_counter2) (8)
	CreateDynamicObject(2606,247.3999900,2025.0000000,19.0000000,16.9960000,0.0000000,90.0000000); //object(cj_police_counter2) (9)
	CreateDynamicObject(2606,247.3999900,2022.9000000,19.0000000,16.9960000,0.0000000,90.0000000); //object(cj_police_counter2) (10)
	CreateDynamicObject(2356,248.8000000,2020.3000000,16.7000000,0.0000000,0.0000000,96.9850000); //object(police_off_chair) (7)
	CreateDynamicObject(2356,248.8000000,2023.0000000,16.7000000,0.0000000,0.0000000,88.9820000); //object(police_off_chair) (8)
	CreateDynamicObject(2356,248.8000000,2025.2000000,16.7000000,0.0000000,0.0000000,103.7280000); //object(police_off_chair) (9)
	CreateDynamicObject(2356,248.8000000,2027.2000000,16.7000000,0.0000000,0.0000000,103.7270000); //object(police_off_chair) (10)
	CreateDynamicObject(2356,248.8000000,2033.1000000,16.7000000,0.0000000,0.0000000,89.9770000); //object(police_off_chair) (11)
	CreateDynamicObject(2356,248.8000000,2035.0000000,16.7000000,0.0000000,0.0000000,97.2230000); //object(police_off_chair) (12)
	CreateDynamicObject(2356,262.2999900,2037.1000000,16.7000000,0.0000000,0.0000000,9.9970000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,260.6000100,2037.1000000,16.7000000,0.0000000,0.0000000,5.7420000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,258.6000100,2037.2000000,16.7000000,0.0000000,0.0000000,5.4900000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,256.8999900,2037.3000000,16.7000000,0.0000000,0.0000000,13.9880000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,255.0000000,2037.4000000,16.7000000,0.0000000,0.0000000,2.7360000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,253.2000000,2037.2000000,16.7000000,0.0000000,0.0000000,10.2360000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,251.3000000,2037.4000000,16.7000000,0.0000000,0.0000000,12.2340000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,249.7000000,2037.3000000,16.7000000,0.0000000,0.0000000,3.9830000); //object(police_off_chair) (1)
	CreateDynamicObject(1792,262.2999900,2038.7000000,18.6000000,13.0000000,0.0000000,0.0000000); //object(swank_tv_1) (1)
	CreateDynamicObject(1792,260.5000000,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (2)
	CreateDynamicObject(1792,258.6000100,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (3)
	CreateDynamicObject(1792,256.7000100,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (4)
	CreateDynamicObject(1792,254.8999900,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (5)
	CreateDynamicObject(1792,253.1000100,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (6)
	CreateDynamicObject(1792,251.2000000,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (7)
	CreateDynamicObject(1792,249.3000000,2038.7000000,18.6000000,12.9970000,0.0000000,0.0000000); //object(swank_tv_1) (8)
	CreateDynamicObject(991,282.7000100,2031.0000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (3)
	CreateDynamicObject(991,274.2999900,2031.0000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (4)
	CreateDynamicObject(991,282.7000100,2031.0000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (5)
	CreateDynamicObject(991,274.2999900,2031.0000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (6)
	CreateDynamicObject(991,282.7000100,2031.0000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (7)
	CreateDynamicObject(991,274.2999900,2031.0000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (8)
	CreateDynamicObject(991,278.5000000,2031.0000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (9)
	CreateDynamicObject(991,278.5000000,2031.0000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (10)
	CreateDynamicObject(991,270.1000100,2031.0000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (11)
	CreateDynamicObject(991,270.1000100,2031.0000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (12)
	CreateDynamicObject(991,270.1000100,2031.0000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (13)
	CreateDynamicObject(991,279.6000100,2027.7000000,17.9000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (26)
	CreateDynamicObject(991,276.2999900,2027.8000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (27)
	CreateDynamicObject(991,270.1000100,2024.4000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (29)
	CreateDynamicObject(991,279.6000100,2019.3000000,17.9000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (30)
	CreateDynamicObject(1892,279.6000100,2024.0000000,16.7000000,0.0000000,0.0000000,269.9950000); //object(security_gatsh) (1)
	CreateDynamicObject(991,279.6000100,2027.7000000,20.3000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (31)
	CreateDynamicObject(991,279.6000100,2027.7000000,22.7000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (32)
	CreateDynamicObject(991,276.2999900,2027.8000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (33)
	CreateDynamicObject(991,276.2999900,2027.8000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (34)
	CreateDynamicObject(991,270.1000100,2024.4000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (35)
	CreateDynamicObject(991,270.1000100,2024.4000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (36)
	CreateDynamicObject(991,276.2999900,2019.3000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (37)
	CreateDynamicObject(991,270.1000100,2019.3000000,17.9000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (38)
	CreateDynamicObject(991,270.1000100,2019.3000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (39)
	CreateDynamicObject(991,270.1000100,2019.3000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (40)
	CreateDynamicObject(991,276.2999900,2019.3000000,20.3000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (41)
	CreateDynamicObject(991,276.2999900,2019.3000000,22.7000000,0.0000000,0.0000000,0.0000000); //object(bar_barriergate1) (42)
	CreateDynamicObject(991,279.5996100,2019.2998000,20.3000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (43)
	CreateDynamicObject(991,279.6000100,2019.3000000,22.7000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (44)
	CreateDynamicObject(991,279.6000100,2010.9000000,17.9000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (45)
	CreateDynamicObject(1892,279.6000100,2015.6000000,16.7000000,0.0000000,0.0000000,269.9890000); //object(security_gatsh) (1)
	CreateDynamicObject(991,279.5996100,2010.9004000,20.3000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (46)
	CreateDynamicObject(991,279.6000100,2010.9000000,21.8000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (47)
	CreateDynamicObject(3279,186.3999900,2082.7000000,21.5000000,0.0000000,0.0000000,140.0000000); //object(a51_spottower) (1)
	CreateDynamicObject(8058,12.0000000,1973.0000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(vgswrehse06) (1)
	CreateDynamicObject(8058,17.3000000,2023.7000000,21.4000000,0.0000000,0.0000000,0.0000000); //object(vgswrehse06) (2)
	CreateDynamicObject(8058,77.2000000,2023.6000000,21.4000000,0.0000000,0.0000000,0.0000000); //object(vgswrehse06) (3)
	CreateDynamicObject(8058,72.0000000,1973.0000000,21.5000000,0.0000000,0.0000000,0.0000000); //object(vgswrehse06) (4)
	CreateDynamicObject(991,279.6000100,2015.1000000,20.3000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (46)
	CreateDynamicObject(991,279.6000100,2015.1000000,21.8000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (46)
	CreateDynamicObject(991,279.6000100,2023.5000000,20.3000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (43)
	CreateDynamicObject(991,279.6000100,2023.5000000,22.7000000,0.0000000,0.0000000,90.0000000); //object(bar_barriergate1) (43)
  	return 1;
}
public OnGameModeExit()
{
    foreach(Player, i) ResetStats(i);
    new p = GetMaxPlayers();
    for (new i=0; i < p; i++) {
            SetPVarInt(i, "laser", 0);
            RemovePlayerAttachedObject(i, 0);
    }
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{i}==true)
			{
			 	SalvarDados(i);
	    	}
    	}
	}
 	DestroyObject(VehicleObject[0]);
 	DestroyObject(VehicleObject[1]);
  	DestroyObject(VehicleObject[2]);
  	DestroyObject(VehicleObject[3]);
    DestroyObject(VehicleObject[4]);
    DestroyObject(VehicleObject[5]);
   	DestroyObject(VehicleObject[6]);
   	DestroyObject(VehicleObject[7]);
   	DestroyObject(VehicleObject[8]);
   	DestroyObject(VehicleObject[9]);
   	mysql_close(conectDB);
   	DOF2_Exit();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    TogglePlayerSpectating(playerid, true);
	new opening = random(3);
	switch(opening)
	{
		case 0:
		{
			InterpolateCameraPos(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
		}
		case 1:
		{
			InterpolateCameraPos(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
		}
		case 2:
		{
			InterpolateCameraPos(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 2158.2129,-1139.6005,66.4812, 2231.6226,-943.3710,111.9578, 25000, CAMERA_MOVE);
		}
	}
	ShowPlayerDialog(playerid, DIALOG_INICIO, DIALOG_STYLE_LIST, "{FFFFFF}Seja bem vindo a {1E48BD}GTA Facções", "{1E48BD}¤ {FFFFFF}Registrar\n{1E48BD}¤ {FFFFFF}Logar\n{1E48BD}¤ {FFFFFF}Esqueci minha senha {FF0000}(Desativado Temp.)\n{1E48BD}¤ {FFFFFF}Sair", "Selecionar", "");
    return 1;
}
public OnPlayerSpawn(playerid)
{
	// ======================== [ PUTEIRO ] ==================================== //
    Attach3DTextLabelToActor(Strip[1], "{33AA33}[NPC] {ffffff}Nayara", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	Attach3DTextLabelToActor(Strip[2], "{33AA33}[NPC] {ffffff}Sandrinha", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	Attach3DTextLabelToActor(Strip[3], "{33AA33}[NPC] {ffffff}Samantha", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	Attach3DTextLabelToActor(Strip[4], "{33AA33}[NPC] {ffffff}Carolzinha", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	Attach3DTextLabelToActor(Puta[1], "{FFFF00}[NPC] {ffffff}Suzi\nAperte 'F' amor", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	Attach3DTextLabelToActor(Segurance[6], "{FFFF00}[NPC] {ffffff}Segurança", 0xFFFFFFFF, 0.0, 0.0, 0.3, 10.0, 0);
	// ========================== [ VARS ] ===================================== //
  	EmTrabalho[playerid] = 0;
    SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid, 0);
    Logado{playerid} = true;
	Player[playerid][Lutador] = 0;
	SetPlayerInterior(playerid, 0);
	GivePlayerWeapon(playerid, 24, 300);
	StopAudioStreamForPlayer(playerid);
	// ========================== [ CONFIGS ] ================================== //
	if(IsPlayerNPC(playerid)) //Verifica se o jogador é um NPC.
  	{
  		LabelBot[playerid] = Create3DTextLabel("{FFFF00}[NPC] {FFFFFF}Morador", 0x28BA9AFF, 0, 0, 0, 15, -1, 0);
		Attach3DTextLabelToPlayer(LabelBot[playerid], playerid, 0, 0, 0.3);
    	return 1;
  	}
	if(Player[playerid][Vip] >= 1)
	{
	    SetPlayerArmour(playerid, 100);
	}
	if(Player[playerid][Cargo] == 2)
	{
		GivePlayerWeapon(playerid, 46,1);
	}
	if(Player[playerid][Cargo] == 1)
	{
		SetPlayerAttachedObject( playerid, 0, 2966, 1, -0.361839, 0.150973, 0.188975, 349.151000, 0.398432, 270.657958, 1.000000, 1.000000, 1.000000 );
	}

	// ====================== [  TEXTDRAW'S   ] ==================== //
 	TextDrawHideForPlayer(playerid, Inicio);
    TextDrawHideForPlayer(playerid, Inicio2);
   	SetPlayerWantedLevel(playerid, Player[playerid][Procurado]);
 	TextDrawHideForPlayer(playerid, Entrada[1]);
    TextDrawHideForPlayer(playerid, Entrada[2]);
    TextDrawHideForPlayer(playerid, Entrada[3]);
    TextDrawHideForPlayer(playerid, Textdraw[0]);
    TextDrawHideForPlayer(playerid, Textdraw[1]);
    TextDrawHideForPlayer(playerid, Textdraw[2]);
    TextDrawHideForPlayer(playerid, Textdraw[3]);
	TextDrawShowForPlayer(playerid, TDEditor_TD[0]);
	TextDrawShowForPlayer(playerid, TDEditor_TD[1]);
	TextDrawShowForPlayer(playerid, TDEditor_TD[2]);
	TextDrawShowForPlayer(playerid, TDEditor_TD[3]);
   	TextDrawShowForPlayer(playerid, Hora1);
	TextDrawShowForPlayer(playerid, Tecla[0]);
	TextDrawShowForPlayer(playerid, Tecla[1]);
    // ==================== [ BANIDO ] ================================== //
	if(TimerBan[playerid] >= 1)
    {
        ForceClassSelection(playerid);
        return 1;
    }
    // ======================= [ ANIMAÇÕES ] =========================== //
   	if(!gPlayerAnimLibsPreloaded[playerid])
	{
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
    	PreloadAnimLib(playerid,"SCRATCHING");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
    if(Presidio[playerid]==1)
    {
		if(Player[playerid][Faccoes] == 1 || Player[playerid][Faccoes] == 2 || Player[playerid][Faccoes] == 3)
		{
		    SetPlayerPos(playerid,259.8535,1953.8031,17.7391);
		}
		if(Player[playerid][Faccoes] == 4 || Player[playerid][Faccoes] == 5 || Player[playerid][Faccoes] == 6)
		{
		    SetPlayerPos(playerid,260.0695,1956.6522,17.7391);
		}
		if(Player[playerid][Faccoes] == 7 || Player[playerid][Faccoes] == 8 || Player[playerid][Faccoes] == 9)
		{
		    SetPlayerPos(playerid,273.7827,1951.8247,17.7391);
		}
		if(Player[playerid][Faccoes]==11 || Player[playerid][Faccoes]==12 || Player[playerid][Faccoes] == 10)
		{
		    SetPlayerPos(playerid,274.3142,1958.9049,17.7391);
		}
		Player[playerid][Lutador] = 0;
		SCM(playerid, COR_NEGATIVO, "[PRESO]: Você está preso. Digite /presos para saber o tempo restante.");
		Player[playerid][InHospital] = false;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		reduzirTempo(playerid);
		SetPlayerSkin(playerid, 268);
		return 1;
    }
    if(PresoADM[playerid] == 1)
    {
  		SetPlayerPos(playerid, 197.3364,174.0059,1003.0234+1);
		SetPlayerInterior(playerid, 3);
		Player[playerid][Lutador]=0;
		SCM(playerid, COR_NEGATIVO, "[PRESO]: Você está preso. Digite /presos para saber o tempo restante.");
		Player[playerid][InHospital] = false;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		SetPlayerSkin(playerid, 268);
		reduzirTempo(playerid);
		return 1;
	}

    // ===================== [ SETA A POSIÇÃO AO SAIR DO /OLHAR ] ======== //
	if(Player[playerid][ReloadPlayer] == true)
	{
		Player[playerid][ReloadPlayer] = false;
		SetTimerEx("LoadVariables",300,false, "i",playerid);
	}
	// ============================== [ NO HOSPITAL ] ========================== //
	if(Player[playerid][InHospital] == true)
	{
	    new cama = random(10);
		if (cama == 0) { SetPlayerPos(playerid, 2270.1169,1643.8069,1084.9661); }
		if (cama == 1) { SetPlayerPos(playerid, 2270.1670,1642.3359,1084.9661); }
		if (cama == 2) { SetPlayerPos(playerid, 2270.1804,1640.8042,1084.9661); }
		if (cama == 3) { SetPlayerPos(playerid, 2270.1677,1639.4297,1084.9661); }
		if (cama == 4) { SetPlayerPos(playerid, 2270.1816,1637.8341,1084.9661); }
		if (cama == 5) { SetPlayerPos(playerid, 2270.1621,1636.4159,1084.9661); }
		if (cama == 6) { SetPlayerPos(playerid, 2270.1938,1634.8475,1084.9661); }
		if (cama == 7) { SetPlayerPos(playerid, 2270.1482,1633.3206,1084.9661); }
		if (cama == 8) { SetPlayerPos(playerid, 2270.1750,1631.7628,1084.9661); }
		if (cama == 9) { SetPlayerPos(playerid, 2270.2544,1630.3259,1084.9661); }

		SetPlayerInterior(playerid, 1);
		SetPlayerFacingAngle(playerid, 357.8977);
		TogglePlayerControllable(playerid, 0);
		ResetPlayerWeapons(playerid);
    	ApplyAnimation(playerid,"CRACK","crckdeth2",4.0, 1, 0, 0, 0, 0);
    	ApplyAnimation(playerid,"CRACK","crckdeth2",4.0, 1, 0, 0, 0, 0);
    	SetPlayerCameraPos(playerid, 2266.93, 1646.14, 1086.10);
		SetPlayerCameraLookAt(playerid, 2270.14, 1641.48, 1084.11);

		new seg;
		seg = TEMPO_HOSPITAL;
		SegundosContagem[playerid] = seg;

		new string[50];
		format(string,sizeof(string),"~w~Aguarde: ~r~%s",Convert(seg));
		GameTextForPlayer(playerid, string, 2500, 3);
		SegundosContagem[playerid] --;
		SetTimerEx("Contando",1000,0,"d",playerid);
		return 1;
	}
    // =============================== [ SPAWN ] =============================== //
	if(Player[playerid][Faccoes] == 1)
	{
		SetPlayerColor(playerid,COR_CV);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		SetPlayerTeam(playerid,1);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		GameTextForPlayer(playerid,"~w~favela: ~r~Morro do Engenho", 1000,1);
		SetPlayerPos(playerid, 2258.0015,-1010.0928,56.9054);
	}
	else if(Player[playerid][Faccoes] == 2)
	{
		SetPlayerColor(playerid, COR_CV);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,1);
		GameTextForPlayer(playerid,"~w~favela: ~r~Martins",1000,1);
		SetPlayerPos(playerid, 2672.9426,-835.7740,65.8884);
	}
	else if(Player[playerid][Faccoes] == 3)
	{
		SetPlayerColor(playerid,COR_CV);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,1);
		GameTextForPlayer(playerid,"~w~favela: ~r~Antares",1000,1);
		SetPlayerPos(playerid, 2882.0276,2264.5313,10.8130);
	}
	else if(Player[playerid][Faccoes] == 4)
	{
		SetPlayerColor(playerid,COR_ADA);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,2);
		GameTextForPlayer(playerid,"~w~favela: ~b~Morro da Primavera", 1000,1);
		SetPlayerPos(playerid, 1134.9313,-1994.5004,69.0078);
	}
	else if(Player[playerid][Faccoes] == 5)
	{
		SetPlayerColor(playerid,COR_ADA);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,2);
		GameTextForPlayer(playerid,"~w~favela: ~b~Morro do Juramento", 1000,1);
		SetPlayerPos(playerid, -2517.7192,-609.3160,132.5625);
	}
	else if(Player[playerid][Faccoes] == 6)
	{
		SetPlayerColor(playerid,COR_ADA);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,2);
		GameTextForPlayer(playerid,"~w~favela: ~b~Morro do Urubu", 1000,1);
		SetPlayerPos(playerid, 948.9243,-706.5596,122.2109);
	}
	else if(Player[playerid][Faccoes] == 7)
	{
		SetPlayerColor(playerid,COR_TCP);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,3);
		GameTextForPlayer(playerid,"~w~favela: ~y~Vila Alianca", 1000,1);
		SetPlayerPos(playerid, 963.0206,2005.2461,10.8687);
        SetPlayerFacingAngle(playerid, 355.1090);
	}
	else if(Player[playerid][Faccoes] == 8)
	{
		SetPlayerColor(playerid,COR_TCP);
		SetPlayerInterior(playerid,0);
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		Player[playerid][Lutador]=0;
		SetPlayerTeam(playerid,3);
		GameTextForPlayer(playerid,"~w~favela: ~y~Muquico", 1000,1);
		SetPlayerPos(playerid, 225.8708,-118.9308,1.5781);
		SetPlayerFacingAngle(playerid, 355.1090);
	}
 	else if(Player[playerid][Faccoes] == 9)
	{
		SetPlayerColor(playerid,COR_TCP);
		SetPlayerInterior(playerid,0);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		SetPlayerTeam(playerid,3);
		GameTextForPlayer(playerid,"~w~favela: ~y~Sapo de Camara", 1000,1);
		SetPlayerPos(playerid, 1918.3002,-2083.6995,13.5745);
	}
 	else if(Player[playerid][Faccoes] == 10)
	{
		SetPlayerColor(playerid,COR_MLC);
		SetPlayerInterior(playerid,0);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		SetPlayerTeam(playerid,4);
		GameTextForPlayer(playerid,"~w~favela: ~y~Bateau Mouche", 1000,1);
		SetPlayerPos(playerid, 768.6486,-523.8422,16.3359);
	}
 	else if(Player[playerid][Faccoes] == 11)
	{
		SetPlayerColor(playerid,COR_MLC);
		SetPlayerInterior(playerid,0);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		SetPlayerTeam(playerid,4);
		GameTextForPlayer(playerid,"~w~favela: ~y~Cesarao", 1000,1);
		SetPlayerPos(playerid, 2588.0762,2090.6802,10.8209);
	}
 	else if(Player[playerid][Faccoes] == 12)
	{
		SetPlayerColor(playerid,COR_MLC);
		SetPlayerInterior(playerid,0);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		Player[playerid][Resgatado]=0;
		SetPlayerTeam(playerid,4);
		GameTextForPlayer(playerid,"~w~favela: ~y~Tres Pontes", 1000,1);
		SetPlayerPos(playerid, 2169.9163,2789.8914,10.8203);
	}
	else if(Player[playerid][Faccoes] == 13 && Player[playerid][PMRJ]==0)
	{
		SetPlayerColor(playerid,-1);
		SetPlayerInterior(playerid,0);
		SetPlayerTeam(playerid, 8);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		GameTextForPlayer(playerid,"~w~outras ~r~organizacoes", 1000,1);
		SetPlayerPos(playerid, 835.6751,-2065.9849,12.8672);
	}
	// ========================== [ TEXTDRAWS ] ================================ //
	SetPlayerWantedLevel(playerid, Player[playerid][Procurado]);
 	TextDrawHideForPlayer(playerid, Entrada[1]);
    TextDrawHideForPlayer(playerid, Entrada[2]);
   	new ORM:ormid = Player[playerid][ORM_ID] = orm_create("Nick", conectDB);
	orm_addvar_int(ormid, Player[playerid][Skin], "skin");
	SetPlayerSkin(playerid,Player[playerid][Skin]);
 	if(Player[playerid][PMRJ]>=1)
	{
		EmTrabalho[playerid] = 1;
		SetPlayerTeam(playerid, 8);
		SetPlayerColor(playerid, COR_PMRJ);
		SetPlayerSkin(playerid, 284);
		SetPlayerTeam(playerid,11);
		Player[playerid][Lutador]=0;
		TogglePlayerSpectating(playerid, false);
		SetPlayerPos(playerid,1939.0819,672.3300,10.8203);
		GameTextForPlayer(playerid,"~w~organizacao: ~b~pmrj", 1000,1);
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	//CHAT FACÇÕES
	if(Logado{playerid} == false)
	{
	    SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	    return 0;
	}
	new string[999];
 	Player[playerid][Flood]++;
    SetTimerEx("AntFlood", 10000, 0, "i", playerid);
   	if(Player[playerid][Flood]>=3)
	{
		SCM(playerid,COR_ERRO,"[ANT-FLOOD]: Flood detectado.");
		return 0;
	}
	if(text[0] == '!')
	if(Player[playerid][Faccoes] == 1 || Player[playerid][Faccoes] == 2 || Player[playerid][Faccoes] == 3)
	{
		format(string, sizeof(string), "[CHAT CMD] %s (%i): {FFFFFF}%s", Nome(playerid), playerid , text[1]);
		ABroadTeam(COR_CV, string, 1);
		printf(string);
		return 0;
	}
	if(text[0] == '!')
	if(Player[playerid][Faccoes] == 4 || Player[playerid][Faccoes] == 5 || Player[playerid][Faccoes] == 6)
	{
		format(string, sizeof(string), "[CHAT LLL] %s (%i): {FFFFFF}%s", Nome(playerid), playerid , text[1]);
		ABroadTeam2(COR_ADA,string,1);
		printf(string);
		return 0;
	}
	if(text[0] == '!')
	if(Player[playerid][Faccoes] == 7 || Player[playerid][Faccoes] == 8 || Player[playerid][Faccoes] == 9)
	{
		format(string, sizeof(string), "[CHAT 3CP] %s (%i): {FFFFFF}%s", Nome(playerid), playerid , text[1]);
		ABroadTeam3(COR_TCP,string,1);
		printf(string);
		return 0;
	}
	if(text[0] == '!')
	if(Player[playerid][Faccoes] == 10 || Player[playerid][Faccoes] == 11 || Player[playerid][Faccoes] == 12)
	{
		format(string, sizeof(string), "[CHAT MLC] %s (%i): {FFFFFF}%s", Nome(playerid), playerid , text[1]);
		ABroadTeam4(COR_MLC,string,1);
		printf(string);
		return 0;
	}
	SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 100.0, 10000);
	return true;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
        OnWeaponDropPickup(playerid, pickupid);
        return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    OnWeaponDrop(playerid);
	antifakekill[playerid] ++;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
	if(Player[killerid][Lutador]==1 || Player[killerid][Lutador]==2)
	{
		if(UFC[1]==true)
		{
		    Player[killerid][CartelV]++;
		    Player[playerid][CartelD]++;
			GivePlayerMoney(killerid,50000);
			TaUFC[playerid]=0;
		}
		if(CinturaoEVENTO[1]==false)return SCM(playerid,COR_ERRO, "");
		Player[killerid][Cinturao]++;
		Player[playerid][CinturaoPERD]++;
		SendFormattedMessageToAll(COR_AMARELO, "-UFC-: O Lutador %s ganhou o cinturão do Lutador %s.", Nome(killerid), Nome(playerid));
	}
	for(new i=0; i < MAX_GZS; i++)
	{
	        if(Gz[playerid]==1)
	        {
				if(GetPVarInt(playerid,"GZAtacada") != -1)
				{
					SCM(playerid, COR_ERRO, "[FALHA]: Você morreu e não conseguiu dominar a favela.");
					KillTimer(ContagemDominio[GetPVarInt(playerid,"GZAtacada")]);
					ContagemDominio[GetPVarInt(playerid,"GZAtacada")] = 0;
					GangZoneStopFlashForAll(GangZonas[GetPVarInt(playerid,"GZAtacada")]);
					SetPVarInt(playerid,"GZAtacada",-1);
					SetPVarInt(playerid,"Tempo",0);
					SendFormattedMessageToAll(0xFFFFD2AA,"-GFInfo-: O player %s matou %s e defendeu sua favela.",Nome(killerid),Nome(playerid));
				}
			}
	}
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
 		if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && Player[x][gSpectateID] == playerid)
		 {
              AdvanceSpectate(x);
		}
  	}
	if(Player[killerid][PCRJ]>=1 || Player[killerid][PMRJ]>=1)
	{
		if(GetPlayerWantedLevel(playerid) >= 1)
		{
			Presidio[playerid] = 1;
			Player[killerid][suabatidos]++;
			Player[playerid][Passagens]++;
			new string[999];
   			format(string, sizeof(string), "{0000ff}HQ: Todas as unidades: Polícial {ffffff}%s{0000ff} completou uma sessão.", Nome(killerid));
			SendMessageToCops(-1, string);
			format(string, sizeof(string), "{0000ff}HQ: {ffffff}%s{0000ff} foi processado, preso no Presídio.", Nome(playerid));
			SendMessageToCops(-1, string);

			format(string, sizeof(string), "<< O procurado da justiça %s foi preso pelo Polícial %s >>", Nome(playerid), Nome(killerid));
			SendClientMessageToAll(COR_NEGATIVO,string);
			GameTextForPlayer(playerid, "~r~Preso!", 2500, 3);
			GameTextForPlayer(killerid, "~r~Suespeito Abatido", 2500, 3);

			if(GetPlayerWantedLevel(playerid) == 1){Player[playerid][TempoPreso] = 300;}
			if(GetPlayerWantedLevel(playerid) == 2){Player[playerid][TempoPreso] = 360;}
			if(GetPlayerWantedLevel(playerid) == 3){Player[playerid][TempoPreso] = 420;}
			if(GetPlayerWantedLevel(playerid) == 4){Player[playerid][TempoPreso] = 480;}
			if(GetPlayerWantedLevel(playerid) == 5){Player[playerid][TempoPreso] = 540;}
			if(GetPlayerWantedLevel(playerid) >= 6){Player[playerid][TempoPreso] = 900;}
		}
	}
	new sefodeu[256];
    format(sefodeu, sizeof(sefodeu), "~r~SE FUDEU");
    GameTextForPlayer(playerid, sefodeu, 2000, 0);
    SendDeathMessage(killerid, playerid, reason);
	Player[playerid][InHospital] = true;
	Player[playerid][CityAdmin] = false;
	Player[killerid][Matou]++;
	Player[playerid][Morreu]++;
	Player[playerid][Lutador]=0;
	EmTrabalho[playerid]=0;
	NaBoateVip[playerid] = 0;
	GivePlayerMoney(killerid, 2500);
 	if(BombArmed[playerid] == true)
	{
	    if(Player[killerid][PMRJ]>=1 || Player[killerid][PCRJ]>=1)
	    {
			new cargotext[600];
			if(Player[killerid][PMRJ] == 5) { cargotext = "Coronel da PMRJ"; }
			if(Player[killerid][PMRJ] == 4) { cargotext = "Capitão"; }
			if(Player[killerid][PMRJ] == 3) { cargotext = "Sargento"; }
			if(Player[killerid][PMRJ] == 2) { cargotext = "Soldado"; }
			if(Player[killerid][PMRJ] == 1) { cargotext = "Recruta"; }
			
			
			if(Player[killerid][PCRJ] == 5) { cargotext = "General"; }
			if(Player[killerid][PCRJ] == 4) { cargotext = "Coronel"; }
			if(Player[killerid][PCRJ] == 3) { cargotext = "Sargento"; }
			if(Player[killerid][PCRJ] == 2) { cargotext = "Cabo"; }
			if(Player[killerid][PCRJ] == 1) { cargotext = "Recruta"; }
		   	KillTimer(bombtimer[playerid]);
			SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s %s matou o bandido que plantou a bomba no banco e a bomba foi desarmada.",cargotext,Nome(killerid));
			DestroyObject(BombObject[playerid]);
			BombArmed[playerid] = false;
		}
	}
	// ==================== [ PARAR ANIMAÇÃO ] ===================== //
	if(gPlayerUsingLoopingAnim[playerid])
	{
        gPlayerUsingLoopingAnim[playerid] = 0;
        TextDrawHideForPlayer(playerid, TextAnim);
	}
	SalvarDados(playerid);
	SalvarDados(killerid);
	return 1;
}
public OnPlayerUpdate(playerid)
{
    if (GetPVarInt(playerid, "laser")) {
            RemovePlayerAttachedObject(playerid, 0);
            if ((IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid))) return 1;
            switch (GetPlayerWeapon(playerid)) {
                    case 23: {
                            if (MiraLaser(playerid)) {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP standing aiming
                                            0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP crouched aiming
                                            0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
                                    }
                            } else {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP standing not aiming
                                            0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP crouched not aiming
                                            0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
                    }       }       }
                    case 27: {
                            if (MiraLaser(playerid)) {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS standing aiming
                                            0.588246, -0.022766, 0.138052, -11.531745, 347.712585, 352.784271);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS crouched aiming
                                            0.588246, -0.022766, 0.138052, 1.468254, 350.712585, 352.784271);
                                    }
                            } else {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS standing not aiming
                                            0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS crouched not aiming
                                            0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
                    }       }       }
                    case 30: {
                            if (MiraLaser(playerid)) {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing aiming
                                            0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched aiming
                                            0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
                                    }
                            } else {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing not aiming
                                            0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched not aiming
                                            0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                    }       }       }
                    case 31: {
                            if (MiraLaser(playerid)) {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing aiming
                                            0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched aiming
                                            0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
                                    }
                            } else {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing not aiming
                                            0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched not aiming
                                            0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
                    }       }       }
		case 34: {
			if (MiraLaser(playerid)) {
				/*if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
					SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper standing aiming
					0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
				} else {
					SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper crouched aiming
					0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
				}*/
				return 1;
			} else {
				if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
					SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper standing not aiming
					0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
				} else {
					SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper crouched not aiming
					0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
		}	}	}
                    case 29: {
                            if (MiraLaser(playerid)) {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing aiming
                                            0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched aiming
                                            0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
                                    }
                            } else {
                                    if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing not aiming
                                            0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
                                    } else {
                                            SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched not aiming
                                            0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
    }       }       }       }       }
	return 1;
}
public OnPlayerPause(playerid)
{
        IsAFK{ playerid } = true;
        return 1;
}
public OnPlayerResume(playerid, time)
{
        IsAFK{playerid} = false;
        return 1;
}
public OnPlayerConnect(playerid)
{
	// =========================== [ CHECAR BANIMENTOS ] ======================= //
	new ip[24],Query[128];
	GetPlayerIp(playerid, ip, sizeof ip);
	mysql_format(conectDB, Query, sizeof(Query), "SELECT * FROM `banlist` WHERE(`Name`='%s' OR `IP`='%s')", Nome(playerid), ip);
	mysql_tquery(conectDB, Query, "OnPlayerBanned", "d", playerid);
	// ==================== [ MUSICA QUANDO CONECTA ] ========================== //
    PlayAudioStreamForPlayer(playerid, "http://d.mimp3.me/d/763483783_796104851/major-lazer-ft-mo-ft-dj-snake-lean-on.mp3");
	//Hospital CMD
	RemoveBuildingForPlayer(playerid, 621, 1634.1797, 1858.3359, 9.5547, 0.25);
	// ============================== [ ANT DDOS BOT ] ========================= //
	if(IsPlayerNPC(playerid)) return false;
    static playerip[24];
    GetPlayerIp(playerid, playerip, 24);
    if(gettime() - varGet(playerip) < 2)
	{
        strcat(playerip, "di_S");
        if(gettime() - varGet(playerip) < 3)
		{
            return false;
        }
        printf("%d Entrou em menos de 2 segundos", playerid);
        GetPlayerIp(playerid, playerip, 20);
        varSet(playerip, gettime());
        strcat(playerip, "x");
        static timers ;
        timers = varGet(playerip);
        varSet(playerip, 1+ timers);
        if(timers > 2)
		{
            playerip[strlen(playerip) - 2] = 0;
            printf("BOT: ID -> %d IP -> %s", playerid, playerip);
            BanEx(playerid, "Bot Connect");
        }
        return varSet(playerip, gettime());
    }
	// ============================= [ ANT AIMBOT ] ============================ //
    ResetStats(playerid);
	// =================================== [ VILA ALIANÇA ] ==================== //
	RemoveBuildingForPlayer(playerid, 7628, 997.1641, 2143.2734, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 7672, 969.6250, 2082.1406, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 7673, 966.3594, 2140.9688, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7936, 932.4141, 2004.2813, 12.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3536, 982.3594, 2030.0078, 12.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3536, 982.5547, 1930.5156, 12.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3539, 982.3906, 1976.5625, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3539, 982.3906, 1877.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3539, 932.3906, 2029.6328, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3539, 932.3906, 1929.8906, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3537, 982.3594, 2003.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3537, 982.3594, 1903.6953, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3537, 882.3594, 1983.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3537, 882.3594, 2049.7188, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 1003.4844, 2178.4922, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 7932, 932.4141, 2004.2813, 12.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3444, 982.3594, 2003.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3464, 982.3594, 2030.0078, 12.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3466, 932.3906, 2029.6328, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 2029.2656, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3444, 882.3594, 2049.7188, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1002.1484, 2063.4688, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 7627, 969.6250, 2082.1406, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 7926, 969.6250, 2082.1406, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 2096.0781, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3474, 978.2891, 2094.9922, 16.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 7493, 966.3594, 2140.9688, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 2162.4922, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 7915, 1005.1641, 2178.3984, 31.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 1003.4844, 2178.4922, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 903.0000, 2183.2109, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 912.7578, 2182.9219, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 970.2422, 2189.0469, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 997.4297, 2186.9141, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 966.1484, 1841.4766, 9.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 970.2422, 1848.8516, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3466, 982.3906, 1877.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 940.3828, 1857.6406, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3444, 982.3594, 1903.6953, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 911.7891, 1896.4844, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 990.5313, 1841.6484, 9.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 1837.9766, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 997.4531, 1847.1875, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 1895.8047, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1002.0000, 1863.4141, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3466, 932.3906, 1929.8906, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3464, 982.5547, 1930.5156, 12.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 970.2422, 1948.9219, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 997.3984, 1947.1953, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1001.9141, 1963.7734, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3466, 982.3906, 1976.5625, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3444, 882.3594, 1983.1250, 12.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 1002.9688, 1982.0234, 13.7656, 0.25);
	// ========================= [ BATEAU MOUCHE ] ============================= //
	RemoveBuildingForPlayer(playerid, 13244, 642.2031, -508.0781, 19.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 13246, 696.9063, -626.9844, 19.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 3326, 769.2031, -501.3984, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3329, 740.1563, -500.9688, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 3327, 769.2188, -558.8672, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3326, 744.2188, -558.8672, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 13484, 738.3984, -553.9844, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3328, 798.2422, -500.9688, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 3328, 750.8672, -594.1797, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 621.7031, -670.2578, 13.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 654.8125, -649.9453, 15.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 701.0781, -707.0859, 15.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 743.1328, -666.1875, 14.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 713.2188, -641.4922, 14.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 626.6797, -629.7578, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 643.1484, -614.5625, 15.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 12963, 696.9063, -626.9844, 19.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 695.3750, -620.0781, 24.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 697.0703, -611.7813, 23.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 701.3438, -637.1094, 24.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 707.9922, -611.1797, 15.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 752.4766, -633.8203, 13.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3315, 750.8672, -594.1797, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 735.5313, -599.0156, 15.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 625.0156, -579.7188, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 734.8906, -572.2109, 16.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 611.0000, -562.9531, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 628.1953, -557.3438, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3317, 744.2188, -558.8672, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 734.0000, -543.8984, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 629.5781, -547.2188, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 604.0156, -542.3438, 15.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 592.0391, -526.7813, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 12862, 642.2031, -508.0781, 19.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 590.9063, -508.7734, 13.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 730.5859, -538.9531, 19.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 733.6328, -513.1797, 15.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1446, 741.6328, -513.0703, 16.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 748.1797, -519.1641, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 754.6875, -542.7344, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 610.1016, -494.4219, 19.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 591.9297, -488.1328, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 692.6953, -498.2344, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 697.8125, -498.3594, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3314, 740.1563, -500.9688, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 734.8281, -486.9141, 16.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 656.8594, -474.2656, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 652.5391, -469.0156, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 621.8125, -465.2656, 14.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 13028, 720.0156, -462.5234, 16.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 618.7031, -435.0234, 17.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 694, 731.6016, -433.0859, 13.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 658.0078, -429.7266, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 706.1016, -427.0313, 15.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 775.3672, -646.9063, 14.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 766.4688, -599.4453, 15.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 784.6719, -592.0547, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 709, 846.1328, -628.0078, 16.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 838.0156, -606.3359, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 874.8125, -586.7969, 16.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 779.9531, -574.3203, 16.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 848.6719, -574.9922, 20.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 866.8516, -573.1875, 16.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 848.8203, -574.6328, 15.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3316, 769.2188, -558.8672, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 758.0000, -560.0156, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1446, 756.6953, -551.7891, 17.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1446, 756.6953, -556.4453, 17.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 779.0234, -554.8828, 15.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 778.9141, -548.6172, 14.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 778.7969, -542.2109, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 773.7969, -517.9688, 15.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 801.5547, -511.0703, 15.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 798.7656, -517.9531, 15.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 838.2969, -515.3750, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 814.5234, -517.5313, 15.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3317, 769.2031, -501.3984, 18.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3353, 798.2422, -500.9688, 16.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 774.0469, -486.0703, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 813.6328, -488.0703, 16.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 705, 763.1172, -449.6953, 15.2031, 0.25);
	// ============================= [ TRÊS PONTES ] =========================== //
	RemoveBuildingForPlayer(playerid, 7144, 2266.3203, 2741.1328, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7145, 2317.2500, 2741.1328, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7155, 2147.5234, 2747.8672, 14.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 7156, 2222.7891, 2798.4766, 12.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 7158, 2203.9297, 2715.2422, 12.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 7160, 2178.0078, 2799.0703, 10.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 7185, 2296.4609, 2810.4766, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 7186, 2296.4609, 2810.4766, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 7191, 2237.4922, 2801.0938, 11.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 7195, 2237.4922, 2801.0938, 11.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 7199, 2110.7500, 2650.5234, 11.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 7331, 2166.6484, 2809.2422, 18.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 7200, 2110.7500, 2650.5234, 11.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 7277, 2110.7500, 2650.5234, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2122.1953, 2684.5938, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2132.7266, 2684.5938, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2127.4609, 2684.5938, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2135.5859, 2665.9609, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2135.5859, 2671.2266, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2135.5859, 2676.4922, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2135.5859, 2681.7656, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2122.9453, 2835.8984, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2131.7344, 2793.5781, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2141.6719, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2141.6719, 2742.5234, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 7391, 2143.3828, 2761.9688, 14.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 6910, 2147.5234, 2747.8672, 14.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2147.5313, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2147.5313, 2742.5234, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2153.3125, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2153.3125, 2742.5234, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2173.6016, 2768.8438, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1532, 2168.9766, 2796.5938, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 7387, 2178.0078, 2799.0703, 10.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 6923, 2203.9297, 2715.2422, 12.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2209.0313, 2777.6328, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2210.9531, 2820.5938, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 2210.9531, 2815.3281, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 6925, 2222.7891, 2798.4766, 12.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1358, 2233.7969, 2814.1484, 11.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 7019, 2266.3203, 2741.1328, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7188, 2291.1328, 2759.1797, 10.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 7021, 2317.2500, 2741.1328, 13.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7189, 2316.4688, 2759.1797, 10.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2336.7891, 2717.7500, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1860.4844, 2614.4063, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1934.7266, 2633.3750, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1917.3594, 2633.3750, 8.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1953.2109, 2633.3750, 9.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1975.9063, 2633.3750, 8.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 2032.7109, 2633.6250, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 2017.1250, 2638.7969, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1897.1250, 2646.1484, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 1895.8594, 2672.5234, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1918.7109, 2656.0547, 11.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1936.3281, 2679.4297, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1955.3125, 2706.3281, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1946.8203, 2655.6094, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1912.9688, 2732.0156, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1933.7266, 2730.1094, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1917.2813, 2747.5391, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 1902.0391, 2752.2266, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1983.2266, 2680.9453, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2016.7266, 2655.6094, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2023.5859, 2706.4375, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2003.3359, 2727.6094, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2032.3828, 2679.8828, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 2033.7969, 2649.8359, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2054.3125, 2655.6719, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2068.5000, 2680.6250, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2048.0391, 2705.1875, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2068.2422, 2726.3516, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1887.7188, 2770.8516, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1904.6953, 2786.6719, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1974.6875, 2755.0469, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 1954.0078, 2755.8125, 9.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2044.6641, 2755.8438, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2003.5000, 2757.8203, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 1927.7578, 2779.9375, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2110.9766, 2777.6328, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2063.0156, 2784.2266, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2047.9922, 2783.4453, 9.1328, 0.25);
	// ========================= [ ANTARES ] =================================== //
	RemoveBuildingForPlayer(playerid, 6958, 2864.0000, 2293.3281, 18.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 7166, 2822.7656, 2203.6172, 14.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3478, 2791.1172, 2225.7031, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3478, 2791.1172, 2264.7188, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3478, 2820.2656, 2271.8438, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 7286, 2822.2969, 2137.6016, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2919.1016, 2310.6016, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2919.1016, 2345.6719, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2919.1016, 2380.7422, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2919.1016, 2415.8125, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2919.1016, 2450.8906, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1268, 2901.6250, 2478.5000, 17.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 7304, 2918.7891, 2361.5313, 31.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 7308, 2897.7500, 2463.1875, 28.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 7346, 2956.4063, 2111.3906, -31.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 7347, 2956.4063, 2111.3906, -31.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2810.0938, 2126.2422, 10.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2834.6016, 2126.9609, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2807.8984, 2147.0547, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 7287, 2822.2969, 2137.6016, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2831.8125, 2154.2188, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2822.8281, 2167.9063, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2830.1797, 2171.0703, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2832.9844, 2189.1875, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 7033, 2822.7656, 2203.6172, 14.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2834.5625, 2203.3438, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2799.2656, 2204.9609, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2832.9844, 2217.2813, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3454, 2791.1172, 2225.7031, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2830.1797, 2238.0000, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 616, 2798.0625, 2244.9063, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3454, 2791.1172, 2264.7188, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2807.8984, 2260.7578, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3454, 2820.2656, 2271.8438, 14.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2831.8125, 2252.8281, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2799.5547, 2280.6797, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2835.6250, 2280.3516, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 2807.6016, 2281.3828, 9.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1350, 2852.9688, 2282.7500, 9.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2870.2813, 2289.2969, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2837.1953, 2305.0547, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2814.3047, 2305.0547, 6.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2882.9844, 2305.0547, 3.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2860.0859, 2305.0547, 9.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2919.1016, 2310.6016, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2895.6641, 2322.2734, 3.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2797.5313, 2322.2734, 9.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2821.2891, 2323.3203, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2846.9766, 2323.3203, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2872.7031, 2323.3203, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2821.1797, 2335.4219, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2847.5313, 2335.4219, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2872.4219, 2335.4219, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2919.1016, 2345.6719, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2895.6641, 2346.0625, 3.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2794.9766, 2346.0625, 9.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2846.9766, 2352.8125, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2821.2891, 2352.8125, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2872.7031, 2352.8125, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2847.5313, 2369.0313, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2821.1797, 2369.0313, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2791.0156, 2369.8516, 9.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2895.6641, 2369.8516, 3.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2872.4219, 2369.0313, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2784.2109, 2393.6406, 9.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2846.9766, 2383.1328, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2821.2891, 2383.1328, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2872.7031, 2383.1328, 24.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2895.6641, 2393.6406, 3.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2919.1016, 2380.7422, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2919.1016, 2415.8125, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2919.1016, 2450.8906, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 2901.6250, 2478.5000, 17.9688, 0.25);
	// =========================== [ MORRO DO JURAMENTO ] ====================== //
	RemoveBuildingForPlayer(playerid, 713, 1304.7734, -1753.5859, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1304.7734, -1729.9375, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1130.5781, -2139.5469, 69.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1133.3828, -2104.4609, 69.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1072.8125, -2111.4063, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1082.8672, -2136.9375, 56.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1109.9063, -2132.6094, 65.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 707, 1114.5000, -2163.7500, 63.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1105.0938, -2111.6875, 65.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1151.3672, -2159.0547, 64.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 707, 1087.3516, -2171.5000, 53.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1233.3672, -2095.7891, 58.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1073.0391, -2147.4688, 51.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1123.3125, -2139.8359, 68.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1162.8672, -2143.6016, 67.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1171.2734, -2148.9219, 65.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1175.2031, -2142.6016, 69.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1115.8359, -2135.3516, 67.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1148.9844, -2134.5234, 67.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1140.6484, -2136.0156, 68.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1189.6953, -2136.8672, 66.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1104.3672, -2129.1953, 66.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1074.0781, -2130.6875, 55.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1204.1875, -2128.3125, 60.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1220.2891, -2128.4219, 60.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1212.1797, -2126.8047, 60.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1287.5547, -2128.3906, 41.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1064.8828, -2096.2422, 40.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1073.4219, -2089.1641, 55.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 672, 1079.9219, -2088.8672, 61.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1103.1016, -2093.6641, 61.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1097.0391, -2079.4453, 61.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1136.3828, -2111.2656, 68.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1148.0781, -2088.7266, 67.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1127.2422, -2080.7813, 66.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1144.0781, -2076.3750, 68.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1157.6641, -2119.0313, 69.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1157.9297, -2124.7266, 69.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1159.9766, -2075.1563, 67.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1155.3672, -2072.5547, 67.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1174.1484, -2117.5313, 65.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1175.6094, -2079.4688, 67.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1083.8750, -2052.5547, 52.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1089.2813, -2069.8672, 56.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1089.5547, -2061.3203, 55.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1080.8047, -2030.8047, 51.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1082.4688, -2025.2188, 50.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1187.0234, -2114.7422, 63.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1227.3359, -2119.7422, 59.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1202.3672, -2112.2891, 61.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1213.2969, -2110.0234, 60.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1219.1875, -2108.0547, 60.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1237.5234, -2118.8828, 56.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1247.4922, -2107.4766, 55.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1248.2031, -2089.9531, 56.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1258.1719, -2081.9297, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1258.2031, -2095.2813, 56.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1267.4922, -2110.7656, 54.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1268.3984, -2092.8047, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1278.0234, -2098.9531, 53.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1281.0547, -2114.3672, 52.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1287.2266, -2119.4922, 51.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1298.5469, -2125.4141, 43.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1309.2734, -2124.9141, 42.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1308.8438, -2103.0781, 46.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1324.3672, -2093.3516, 46.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1189.7734, -2078.3672, 70.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1197.8516, -2074.6172, 67.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1207.6094, -2079.0781, 66.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.7109, -2059.3203, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.4297, -2045.2422, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1290.8750, -2042.6094, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.9141, -2025.9297, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1284.9844, -2020.2500, 57.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 672, 1086.0625, -2016.8516, 50.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1139.1797, -1997.7656, 67.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1146.1328, -1998.4688, 67.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1102.9141, -1990.6719, 61.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1110.1719, -1990.4453, 65.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1148.7031, -1992.9844, 67.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1165.1328, -1994.1172, 66.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1165.6016, -1988.1719, 64.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1106.6094, -1985.6484, 64.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1115.2344, -1981.1719, 62.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1108.3359, -1980.6953, 62.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.9141, -2012.8516, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1208.6484, -2000.0703, 67.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1190.1953, -1995.4531, 66.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1205.2734, -1987.8203, 63.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1190.8125, -1987.7344, 64.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1270.8984, -2000.6563, 57.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1279.4141, -1998.4766, 56.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1260.0781, -1995.7813, 55.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1280.4453, -1992.7422, 54.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1291.0469, -2007.0703, 54.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1286.0000, -2000.3984, 55.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1291.0938, -1997.9922, 53.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1242.3672, -1948.3750, 48.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1245.0078, -1941.1719, 34.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1236.3438, -1938.5391, 38.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1223.0313, -1940.6250, 35.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1241.8516, -1933.8828, 30.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1240.7734, -1929.2656, 25.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1233.1719, -1930.3594, 29.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1231.8672, -1920.0000, 30.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1231.8359, -1909.8203, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1241.4141, -1911.8125, 29.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1223.4766, -1913.7734, 34.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1240.6406, -1905.6094, 29.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1248.3359, -1947.2500, 43.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1250.3828, -1946.6406, 38.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1249.7969, -1896.7734, 31.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1260.0781, -1898.4531, 26.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1256.8594, -1888.9688, 23.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1265.1406, -1890.6641, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1333.0938, -2109.1094, 46.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1339.2969, -2103.0938, 47.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1331.1406, -2088.5625, 49.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1339.0156, -2078.8281, 53.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1349.2266, -2094.0078, 48.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1361.3672, -2075.2813, 49.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1374.4844, -2077.1016, 46.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1384.2578, -2082.0469, 45.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1392.9531, -2075.9453, 47.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1407.8438, -2020.5234, 50.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1419.2656, -2004.5469, 48.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1399.6563, -1985.8750, 50.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1409.0781, -1986.4297, 44.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1411.7109, -1991.5703, 45.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1389.2656, -1982.5547, 45.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1464.8516, -1992.5469, 30.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1471.4375, -2033.7813, 30.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1455.6875, -1981.6328, 31.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1464.9922, -1979.3984, 29.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1478.8516, -1966.4531, 31.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1372.3516, -1953.5156, 28.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1360.4219, -1952.0313, 27.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1368.7969, -1949.2188, 25.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1353.1172, -1951.2813, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1379.8281, -1953.8281, 30.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1394.4141, -1954.8125, 32.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1388.1953, -1950.7266, 26.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1380.8281, -1946.1250, 23.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1386.9766, -1939.8281, 18.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1400.4219, -1952.8672, 31.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1405.3203, -1958.5469, 35.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1404.1250, -1938.8203, 19.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1397.8594, -1939.3047, 18.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1413.1797, -1938.1953, 19.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1416.0078, -1943.0625, 25.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1427.4609, -1938.4531, 25.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1430.4141, -1954.4453, 26.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1438.4844, -1928.9688, 25.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1451.3438, -1929.0391, 24.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 705, -2491.5859, -670.7188, 138.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 705, -2506.6328, -582.1719, 131.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 705, -2416.3516, -639.3516, 131.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2526.3516, -571.5781, 127.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1596, -2517.5938, -671.0078, 149.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 1694, -2518.4297, -632.1953, 155.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2521.0469, -589.3828, 129.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2516.8203, -578.7734, 129.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2510.4531, -739.5625, 129.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2494.4844, -742.8672, 131.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2472.1406, -571.6953, 128.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2458.9922, -670.9453, 132.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2460.9766, -638.7109, 130.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2481.6719, -516.6953, 109.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2473.3984, -507.6797, 105.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2455.3281, -504.5859, 105.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2444.1406, -694.1406, 130.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2440.4531, -651.0234, 130.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2371.1406, -708.2109, 121.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2436.4531, -625.9922, 130.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2379.0234, -619.6641, 127.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2374.6484, -628.3281, 127.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2365.0234, -601.3125, 127.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2413.1484, -557.9453, 126.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2383.0234, -550.9063, 126.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2383.0234, -547.3672, 125.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2452.5078, -508.5313, 107.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2430.9141, -507.0781, 110.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2324.8125, -683.7578, 102.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2322.8203, -682.7734, 100.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2293.1406, -726.2656, 76.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2285.1641, -687.7734, 80.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2273.4219, -819.8672, 54.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2211.0391, -851.3672, 53.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 654, -2541.0547, -592.4453, 130.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1595, -2538.9297, -648.6406, 152.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1595, -2538.9297, -660.9063, 152.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -652.6484, 147.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -661.9766, 147.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -671.3047, 147.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -680.6250, 147.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -634.0000, 147.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1695, -2529.6641, -643.3281, 147.5234, 0.25);
	// =========================== [ PRIMAVERA ] =============================== //
	RemoveBuildingForPlayer(playerid, 713, 1304.7734, -1753.5859, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1304.7734, -1729.9375, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1130.5781, -2139.5469, 69.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1133.3828, -2104.4609, 69.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1072.8125, -2111.4063, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1082.8672, -2136.9375, 56.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1109.9063, -2132.6094, 65.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 707, 1114.5000, -2163.7500, 63.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1105.0938, -2111.6875, 65.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1151.3672, -2159.0547, 64.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 707, 1087.3516, -2171.5000, 53.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1233.3672, -2095.7891, 58.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1073.0391, -2147.4688, 51.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1123.3125, -2139.8359, 68.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1162.8672, -2143.6016, 67.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1171.2734, -2148.9219, 65.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1175.2031, -2142.6016, 69.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1115.8359, -2135.3516, 67.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1148.9844, -2134.5234, 67.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1140.6484, -2136.0156, 68.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1189.6953, -2136.8672, 66.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1104.3672, -2129.1953, 66.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1074.0781, -2130.6875, 55.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1204.1875, -2128.3125, 60.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1220.2891, -2128.4219, 60.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1212.1797, -2126.8047, 60.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1287.5547, -2128.3906, 41.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1064.8828, -2096.2422, 40.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1073.4219, -2089.1641, 55.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 672, 1079.9219, -2088.8672, 61.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1103.1016, -2093.6641, 61.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1097.0391, -2079.4453, 61.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1136.3828, -2111.2656, 68.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1148.0781, -2088.7266, 67.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1127.2422, -2080.7813, 66.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1144.0781, -2076.3750, 68.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1157.6641, -2119.0313, 69.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1157.9297, -2124.7266, 69.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1159.9766, -2075.1563, 67.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1155.3672, -2072.5547, 67.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1174.1484, -2117.5313, 65.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1175.6094, -2079.4688, 67.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1083.8750, -2052.5547, 52.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1089.2813, -2069.8672, 56.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1089.5547, -2061.3203, 55.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1080.8047, -2030.8047, 51.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1082.4688, -2025.2188, 50.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1187.0234, -2114.7422, 63.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1227.3359, -2119.7422, 59.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1202.3672, -2112.2891, 61.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1213.2969, -2110.0234, 60.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1219.1875, -2108.0547, 60.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1237.5234, -2118.8828, 56.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1247.4922, -2107.4766, 55.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1248.2031, -2089.9531, 56.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1258.1719, -2081.9297, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1258.2031, -2095.2813, 56.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1267.4922, -2110.7656, 54.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1268.3984, -2092.8047, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1278.0234, -2098.9531, 53.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1281.0547, -2114.3672, 52.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1287.2266, -2119.4922, 51.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1298.5469, -2125.4141, 43.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1309.2734, -2124.9141, 42.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1308.8438, -2103.0781, 46.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1324.3672, -2093.3516, 46.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1189.7734, -2078.3672, 70.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1197.8516, -2074.6172, 67.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1207.6094, -2079.0781, 66.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.7109, -2059.3203, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.4297, -2045.2422, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1290.8750, -2042.6094, 55.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.9141, -2025.9297, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1284.9844, -2020.2500, 57.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 672, 1086.0625, -2016.8516, 50.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1139.1797, -1997.7656, 67.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1146.1328, -1998.4688, 67.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1102.9141, -1990.6719, 61.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1110.1719, -1990.4453, 65.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1148.7031, -1992.9844, 67.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1165.1328, -1994.1172, 66.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1165.6016, -1988.1719, 64.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1106.6094, -1985.6484, 64.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1115.2344, -1981.1719, 62.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1108.3359, -1980.6953, 62.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1208.9141, -2012.8516, 75.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1208.6484, -2000.0703, 67.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1190.1953, -1995.4531, 66.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1205.2734, -1987.8203, 63.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1190.8125, -1987.7344, 64.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1270.8984, -2000.6563, 57.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1279.4141, -1998.4766, 56.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1260.0781, -1995.7813, 55.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1280.4453, -1992.7422, 54.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1291.0469, -2007.0703, 54.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1286.0000, -2000.3984, 55.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1291.0938, -1997.9922, 53.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1242.3672, -1948.3750, 48.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1245.0078, -1941.1719, 34.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1236.3438, -1938.5391, 38.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1223.0313, -1940.6250, 35.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1241.8516, -1933.8828, 30.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1240.7734, -1929.2656, 25.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1233.1719, -1930.3594, 29.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1231.8672, -1920.0000, 30.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1231.8359, -1909.8203, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1241.4141, -1911.8125, 29.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1223.4766, -1913.7734, 34.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1240.6406, -1905.6094, 29.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1248.3359, -1947.2500, 43.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1250.3828, -1946.6406, 38.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1249.7969, -1896.7734, 31.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1260.0781, -1898.4531, 26.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1256.8594, -1888.9688, 23.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1265.1406, -1890.6641, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1333.0938, -2109.1094, 46.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1339.2969, -2103.0938, 47.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1331.1406, -2088.5625, 49.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1339.0156, -2078.8281, 53.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1349.2266, -2094.0078, 48.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1361.3672, -2075.2813, 49.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1374.4844, -2077.1016, 46.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1384.2578, -2082.0469, 45.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1392.9531, -2075.9453, 47.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1407.8438, -2020.5234, 50.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1419.2656, -2004.5469, 48.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1399.6563, -1985.8750, 50.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1409.0781, -1986.4297, 44.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1411.7109, -1991.5703, 45.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1389.2656, -1982.5547, 45.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1464.8516, -1992.5469, 30.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1471.4375, -2033.7813, 30.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1455.6875, -1981.6328, 31.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1464.9922, -1979.3984, 29.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1478.8516, -1966.4531, 31.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1372.3516, -1953.5156, 28.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1360.4219, -1952.0313, 27.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1368.7969, -1949.2188, 25.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1353.1172, -1951.2813, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1379.8281, -1953.8281, 30.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1394.4141, -1954.8125, 32.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1388.1953, -1950.7266, 26.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1380.8281, -1946.1250, 23.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1386.9766, -1939.8281, 18.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1400.4219, -1952.8672, 31.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 661, 1405.3203, -1958.5469, 35.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1404.1250, -1938.8203, 19.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1397.8594, -1939.3047, 18.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 618, 1413.1797, -1938.1953, 19.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1416.0078, -1943.0625, 25.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1427.4609, -1938.4531, 25.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1430.4141, -1954.4453, 26.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1438.4844, -1928.9688, 25.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1451.3438, -1929.0391, 24.5703, 0.25);
	// ============================== [ COMPLEXO DA MARÉ ] ===================== //
	RemoveBuildingForPlayer(playerid, 620, 1960.7656, 643.8906, 9.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1975.4453, 644.5469, 9.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 1856.1563, 662.0781, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1967.7344, 653.0703, 19.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2023.5625, 658.6875, 11.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1856.6484, 682.5156, 7.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2070.2188, 689.4688, 8.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1856.6484, 745.2031, 7.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 1858.6563, 762.7422, 9.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2026.6719, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2025.9531, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2028.2500, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2013.9844, 742.2813, 7.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2029.2109, 764.0313, 9.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2029.6016, 793.0313, 11.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2047.7422, 764.0313, 9.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2073.9141, 769.5469, 8.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2245.8203, 643.6406, 7.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2077.1406, 657.9766, 9.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2097.6406, 662.5078, 9.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2093.9453, 658.6875, 11.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2171.4922, 648.8203, 11.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2210.0781, 648.7422, 10.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2174.7656, 699.4844, 7.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2190.4688, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2189.7500, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2192.0469, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2244.3047, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2243.5859, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2245.8828, 672.8906, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2233.1875, 696.8438, 10.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2265.1172, 702.6953, 9.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2098.8594, 742.2813, 7.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2106.8203, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2106.1016, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2108.3984, 713.1016, 11.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 8991, 2118.1719, 771.1719, 10.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2169.3906, 724.1016, 9.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2175.4063, 728.1641, 11.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 634, 2255.0313, 724.1016, 9.7344, 0.25);
	// ============================ [ MUQUIÇO ] ================================ //
	RemoveBuildingForPlayer(playerid, 13189, 92.1250, -164.9141, 1.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 13191, 65.2578, -303.9844, 14.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 13192, 164.7109, -234.1875, 0.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 13193, 173.5156, -323.8203, 0.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 13194, 140.5938, -305.3906, 5.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 13203, 308.0938, -168.7266, 4.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 672, 65.7891, -168.7266, 0.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 12942, 92.1250, -164.9141, 1.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 12943, 92.1250, -164.9141, 1.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1684, 81.1250, -152.7344, 3.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 204.9375, -157.5703, 0.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 706, 111.0234, -134.5625, -0.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 196.3438, -131.0313, 1.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 154.7188, -129.1719, 1.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 164.7266, -130.1953, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 176.9766, -131.1406, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 149.3594, -120.8359, 1.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 146.0625, -112.0391, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 218.9063, -167.9922, 0.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 245.6250, -144.7578, 0.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 764, 247.7813, -138.8438, -0.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 209.5469, -131.1797, 1.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 220.6250, -134.5859, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 220.6953, -124.3203, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 209.7656, -123.0547, 1.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 248.9922, -117.5234, 1.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 246.9219, -110.9844, 0.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 769, 268.2422, -111.0156, 1.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 265.1797, -132.7266, -0.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 300.2656, -113.6250, 1.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 13190, 308.0938, -168.7266, 4.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 764, 186.4141, -107.2578, 0.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 180.7734, -108.8047, 0.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 220.9375, -107.3672, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 146.4375, -102.9766, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 221.0000, -97.1016, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 147.8438, -95.6875, 1.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 155.6797, -85.4375, 1.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 165.1719, -82.9766, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 175.6250, -82.8125, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 188.7266, -83.0313, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 201.8125, -83.2422, 0.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 129.7188, -68.8906, 5.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 768, 129.9141, -64.8984, 0.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 779, 246.6953, -98.6563, 0.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 779, 267.4922, -102.1328, 1.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 274.0313, -56.2266, 0.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 296.0078, -100.2344, 1.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 779, 305.0859, -43.1484, 0.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 321.0703, -109.4922, 0.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 250.7891, -6.4141, 0.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 246.2969, -7.3750, 0.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 768, 132.3438, -5.2344, 0.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 270.2734, -39.2500, 0.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 769, 279.8359, -39.5391, -0.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 768, 278.0625, -18.9688, 0.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 10.3359, -330.1016, 5.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 10.0078, -298.9375, 4.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 12859, 173.5156, -323.8203, 0.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 12805, 65.2578, -303.9844, 14.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 13198, 140.5938, -305.3906, 5.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 773, 220.9531, -312.4375, 0.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 196.7734, -267.6016, 0.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 12956, 96.3281, -261.1953, 3.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 247.2891, -287.9219, 0.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 244.4375, -261.8281, 0.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 12860, 164.7109, -234.1875, 0.4766, 0.25);
	// ====================== [ SAPO DE CAMARA ] =============================== //
	RemoveBuildingForPlayer(playerid, 708, 1837.6406, -1968.3438, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 4969, 1932.4297, -2123.4063, 15.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 4973, 1872.9766, -2075.2344, 16.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 4976, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4979, 1942.6797, -1986.7500, 14.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3667, 1904.8047, -1991.7422, 15.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3667, 1907.6328, -2025.9375, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 3667, 1858.6328, -2025.9375, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3667, 1861.4453, -1991.7500, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3667, 1826.6016, -1989.6094, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3668, 1912.2500, -1907.4375, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3668, 1927.3984, -1911.4375, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3668, 1943.0078, -1910.1016, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3669, 1762.4453, -2096.7109, 15.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1682.1406, -2102.3516, 11.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8047, -2123.7969, 11.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1733.2422, -2125.8438, 21.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1742.4219, -2101.1484, 21.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1751.1484, -2126.3984, 11.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3634, 1762.4453, -2096.7109, 15.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1812.1719, -2140.4531, 11.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1796.7031, -2080.9688, 21.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1810.0000, -2079.4063, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1808.8828, -2016.6094, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1811.2500, -2012.6172, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1792.7500, -1974.5547, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1794.5938, -1980.7500, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1808.8828, -1985.3359, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1812.3438, -1968.8047, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3588, 1826.6016, -1989.6094, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1810.6797, -1944.6406, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1817.1797, -1944.6406, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1835.0078, -2015.3594, 12.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1837.3125, -2080.7734, 22.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1836.7500, -2066.1484, 23.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1843.5938, -2143.2188, 11.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1839.9531, -2041.0000, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1841.9297, -2007.4766, 16.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1849.5313, -2041.2891, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3588, 1858.6328, -2025.9375, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3588, 1861.4453, -1991.7500, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1868.4531, -2063.4453, 11.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4886, 1872.9766, -2075.2344, 16.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1870.1875, -2041.0391, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3588, 1904.8047, -1991.7422, 15.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1907.0469, -2091.1172, 11.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 5017, 1932.4297, -2123.4063, 15.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1935.1328, -2074.8672, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1912.6641, -2063.2109, 10.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 671, 1921.4922, -2040.5234, 12.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 3588, 1907.6328, -2025.9375, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 4857, 1942.6797, -1986.7500, 14.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1887.4453, -1926.8203, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1880.4766, -1919.4609, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1914.8828, -1980.3438, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1922.1172, -1981.2109, 9.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 1941.9844, -1970.7031, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1913.6563, -1926.7656, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1919.3203, -1919.1719, 14.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1836.7188, -1898.8984, 13.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 3587, 1912.2500, -1907.4375, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3587, 1927.3984, -1911.4375, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3587, 1943.0078, -1910.1016, 16.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1948.8984, -1892.7344, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 4848, 1931.0000, -1871.3906, 15.8438, 0.25);
	// ============================= [ CESARÃO ] =============================== //
	RemoveBuildingForPlayer(playerid, 6863, 2462.6875, 2287.5938, 54.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 6927, 2462.6875, 2287.5938, 54.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 6955, 2587.9766, 2273.2266, 11.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 7388, 2616.6172, 2245.2656, 10.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 7026, 2658.0625, 2233.5391, 9.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 7029, 2628.9141, 2053.2188, 9.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 7030, 2613.6406, 2154.0781, 10.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 7133, 2565.2734, 2161.0938, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 7167, 2557.3828, 2083.2266, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 7221, 2442.8203, 2141.9609, 45.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 7222, 2462.7109, 2287.5938, 52.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 7235, 2504.6719, 2292.7109, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 7285, 2616.6172, 2245.2656, 10.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2650.0000, 2250.7734, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2594.5078, 2198.3125, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2626.1016, 2192.6719, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2562.0000, 2210.1875, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2617.4609, 2147.9688, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3523, 2620.7656, 2057.1484, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 7382, 2538.3984, 2149.7188, 15.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2596.2734, 2027.1172, 10.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 2597.5781, 2031.6563, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 7027, 2557.3828, 2083.2266, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2600.3750, 2027.2031, 10.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2607.7422, 2056.8281, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2613.2813, 2047.9297, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2613.2656, 2047.7969, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2613.2813, 2057.2344, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2613.2813, 2066.5625, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2613.2656, 2066.4219, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2613.2656, 2057.1016, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2624.0313, 2043.4609, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2624.0156, 2043.3281, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2624.0156, 2061.9531, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2624.0313, 2062.0938, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2624.0156, 2052.6484, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2624.0313, 2052.7813, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2620.7656, 2057.1484, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2620.7656, 2057.1484, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2624.0156, 2071.0859, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2624.0313, 2071.2188, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 7273, 2538.3984, 2149.7188, 15.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 6875, 2565.2734, 2161.0938, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2550.2344, 2187.7656, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2563.4063, 2197.5156, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2562.0000, 2210.1875, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2562.0000, 2210.1875, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2592.4844, 2136.5234, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2617.4609, 2147.9688, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2617.4609, 2147.9688, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2592.2891, 2169.8594, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2625.3828, 2179.9297, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2585.3438, 2187.9609, 12.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2635.4297, 2185.1797, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2635.5625, 2185.1641, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2626.1016, 2192.6719, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2626.1016, 2192.6719, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2639.8984, 2195.9297, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2640.0313, 2195.9141, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3522, 2575.9141, 2213.4297, 9.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2575.7734, 2213.4453, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2594.5078, 2198.3125, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2594.5078, 2198.3125, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2625.3828, 2204.4766, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 7093, 2515.8906, 2247.5547, 20.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 7234, 2504.6719, 2292.7109, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3460, 2605.2734, 2228.8594, 13.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 7212, 2557.2188, 2266.7422, 11.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3511, 2594.5781, 2306.6563, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3511, 2617.6172, 2308.1484, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3511, 2594.0078, 2316.9609, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2655.9375, 2215.3203, 10.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 2655.7578, 2224.7656, 10.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 2654.7031, 2220.6875, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2660.0391, 2215.0938, 10.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 2658.3906, 2210.6719, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1300, 2658.7578, 2224.8750, 10.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 2661.7344, 2224.6719, 10.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2664.4766, 2219.1797, 10.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3469, 2650.0000, 2250.7734, 12.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 3473, 2650.0000, 2250.7734, 13.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2661.3750, 2251.2500, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 3511, 2598.6641, 2327.7422, 9.8203, 0.25);
    // ========================= [ OBJETOS REMOVIDOS PRESÍDIO ] ===================== //
    RemoveBuildingForPlayer(playerid, 3267, 188.2422, 2081.6484, 22.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3277, 188.2422, 2081.6484, 22.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 3267, 354.4297, 2028.4922, 22.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3277, 354.4141, 2028.5000, 22.3750, 0.25);
	// ====================== [ OBJETOS REMOVIDOS DP ] ========================= //
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	// ==================== [ OBJETOS REMOVIDOS BOATE ] ======================== //
 	RemoveBuildingForPlayer(playerid, 1823, 482.0625, -25.0938, 1002.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 482.3906, -24.8672, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 1754, 482.0469, -23.2891, 1002.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 482.8906, -24.5547, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 2290, 483.5156, -26.3516, 1002.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 1754, 484.1250, -24.6172, 1002.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 479.5078, -20.3828, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1754, 485.4531, -24.7031, 1002.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1823, 486.3906, -25.2891, 1002.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 486.6797, -24.6406, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 486.8125, -24.7500, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 2290, 487.8203, -26.3516, 1002.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 487.2031, -24.5859, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 487.1797, -25.1094, 1002.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 1754, 488.4219, -25.1719, 1002.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 1754, 488.0313, -23.3906, 1002.0938, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 490.6328, -24.3906, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1547, 501.1641, -23.7813, 1000.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 501.0469, -22.2813, 1000.7422, 0.25);
    RemoveBuildingForPlayer(playerid, 1547, 501.1094, -22.8125, 1000.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1548, 501.1094, -21.2266, 1000.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 478.2188, -19.4141, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 477.2109, -16.1016, 1003.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 477.3203, -13.9375, 1003.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1547, 500.9766, -19.2344, 1000.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 1548, 501.1250, -18.1172, 1000.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 503.3906, -17.6172, 1001.3438, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 503.3516, -17.8047, 1001.3438, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.6406, 1001.3438, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.4453, 1001.3438, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 478.1953, -7.1719, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 478.6016, -7.6953, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1436, 479.5938, -8.9922, 1001.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 479.2891, -5.4063, 1001.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 479.8203, -5.8125, 1001.1797, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 480.8594, -5.0156, 1002.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 1436, 479.5938, -4.2969, 1002.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 501.4141, -7.5547, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2779, 501.4688, -10.3672, 999.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 2778, 502.4063, -7.5313, 999.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 2681, 503.6484, -7.5156, 999.6797, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 495.0078, -5.4453, 1002.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 1544, 495.2031, -5.3828, 1002.2656, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 497.1563, -7.1094, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 505.6797, -7.0156, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2653, 506.1406, -4.3672, 1004.2109, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 502.1641, -1.8906, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 499.8438, -1.6172, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 2670, 505.8125, -1.5625, 999.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 1776, 500.5625, -1.3672, 1000.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1775, 501.8281, -1.4297, 1000.7344, 0.25);
    // ================== [ OBJETOS RETIRADOS BAILE 2 ] ======================== //
    RemoveBuildingForPlayer(playerid, 762, 1015.9531, -2078.9766, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1023.5938, -2050.6875, 16.0859, 0.25);
 	RemoveBuildingForPlayer(playerid, 762, 1011.8594, -2043.5000, 16.0859, 0.25);
 	RemoveBuildingForPlayer(playerid, 3754, 1053.9844, -1978.9766, 16.8516, 0.25);
    // ========================== [ TEXTDRAW ] ================================= //
   	TextDrawShowForPlayer(playerid, Entrada[1]);
	TextDrawShowForPlayer(playerid, Entrada[2]);
	TextDrawShowForPlayer(playerid, Entrada[3]);
   	TextDrawShowForPlayer(playerid, Textdraw[0]);
    TextDrawShowForPlayer(playerid, Textdraw[1]);
    TextDrawShowForPlayer(playerid, Textdraw[2]);
    TextDrawShowForPlayer(playerid, Textdraw[3]);
	TextDrawShowForPlayer(playerid, Inicio);
	TextDrawShowForPlayer(playerid, Inicio2);
	TextDrawHideForPlayer(playerid, Tecla[0]);
	TextDrawHideForPlayer(playerid, Tecla[1]);
	TextDrawHideForPlayer(playerid, TDEditor_TD[0]);
	TextDrawHideForPlayer(playerid, TDEditor_TD[1]);
	TextDrawHideForPlayer(playerid, TDEditor_TD[2]);
	TextDrawHideForPlayer(playerid, TDEditor_TD[3]);
	
	// ========================== [ MOSTRA AS GZ'S ] =========================== //
	for(new i = 0; i < MAX_GZS; i ++)
	{
		GangZoneShowForPlayer(playerid, GangZonas[i], GangZone[i][GZColor]);
	}
	// ================================ [ LIMPA O CHAT ] ======================= //
    for(new i = 0; i < 10; i++)
	{
	    SCM(playerid, -1,"");
	}
	// ================ [MENSAGEM DE LOGIN] ==================================== //
	SCM(playerid, COR_BRANCO,"{1E48BD}»{ffffff} Seja bem vindo ao servidor {1E48BD}GTA Faccoes RJ - Oficial");
	SCM(playerid, COR_BRANCO,"{1E48BD}»{ffffff} Nosso servidor é do modo facções, aqui fazemos a sua diversão.");
	SCM(playerid, COR_BRANCO,"{1E48BD}»{ffffff} Participe de guerras entre organizações criminosas do Rio de Janeiro.");
	SCM(playerid, COR_BRANCO,"{1E48BD}»{ffffff} Qualquer dúvida digite {1E48BD}'/duvida' {FFFFFF}e um helper/admin irá atende-lo.");
	SCM(playerid, COR_BRANCO,"{1E48BD}»{ffffff} Não fazemos apologia ao crime, Paz nas comunidades do Rio de Janeiro.");
	CreateMapIcons(playerid);
	SetPlayerColor(playerid, COR_BRANCO);

	if(playerid > HighestID)
	{
		HighestID = playerid;
	}

 	// =================== [ LASER NA ARMA ] =================================== //
  	SetPVarInt(playerid, "laser", 0);
    SetPVarInt(playerid, "color", 18643);
 	// ================== [  ZERA AS VARIAVEIS ] =============================== //
 	SetPlayerSkin(playerid, 0);
 	Player[playerid][Admin] = 0;
 	Player[playerid][Dinheiro] = 0;
  	Player[playerid][TempoLogado] = 0;
  	Player[playerid][Score] = 0;
 	Player[playerid][Cash] = 0;
	Player[playerid][Vip] = 0;
	Player[playerid][pHelper] = 0;
	Player[playerid][Reporter] = 0;
 	Player[playerid][PMRJ] = 0;
 	Player[playerid][PCRJ] = 0;
  	Player[playerid][DJ] = 0;
  	Player[playerid][MotoTaxi] = 0;
 	Player[playerid][Cargo] = 0;
 	Player[playerid][Lider] = 0;
 	Player[playerid][Dono] = 0;
   	Player[playerid][Matou] = 0;
   	Player[playerid][Morreu] = 0;
	Player[playerid][FilaHLP] = 0;
	Player[playerid][FilaRGF] = 0;
	Player[playerid][FilaMTX] = 0;
 	Player[playerid][suabatidos] = 0;
 	Player[playerid][sutotal] = 0;
 	Player[playerid][Passagens] = 0;
	Player[playerid][TempoPreso] = 0; 
	Player[playerid][Faccoes] = 0;
	Player[playerid][Iniciante] = 0;
	Player[playerid][Camera] =0 ;
	Player[playerid][atendimentoshelper] = 0;
	Player[playerid][pMaxTentativas] = MAX_TENTATIVAS;
   	Player[playerid][gSpectateID] = INVALID_PLAYER_ID;
	Player[playerid][LastReport] = INVALID_PLAYER_ID;
	EmTrabalho[playerid] = 0;
 	NaBoateVip[playerid] = 0;
	Atendimentos[playerid] = 0;
 	TaUFC[playerid]=0;
 	VeiculoVeh[playerid] = 0;
	EmTrabalho[playerid] = 0;
	gPlayerUsingLoopingAnim[playerid] = 0;
	gPlayerAnimLibsPreloaded[playerid] = 0;
   	UsouLocalizar[playerid] = 0;
	IDHELPER[playerid] = 0;
	DelayHelper[playerid] = 0;
	DelayRelato[playerid] = 0;
	PresoADM[playerid] = 0;
	// ========= [ Bolleans ] ================= //
 	Logado{playerid} = false;
	Player[playerid][LerPM] = false;
	Player[playerid][BlockIR] = false;
	Player[playerid][BlockTR] = false;
	Player[playerid][BlockPM] = false;
	Player[playerid][BlockOlhar] = false;
	Player[playerid][InHospital] = false;
	Player[playerid][DelayGov] = false;
	Player[playerid][CityAdmin] = false;
	ParticipandoEvento[playerid] = false;
    return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if(Player[damagedid][Reporter] > 0)
	{
		if(EmTrabalho[damagedid] == 1)
		{
			GameTextForPlayer(playerid, "~r~NÃO AGRIDA UM REPORTER EM TRABALHO!", 2500, 3);
		}
	}
	if(Player[damagedid][pHelper] > 0)
	{
		if(EmTrabalho[damagedid] == 1)
		{
			GameTextForPlayer(playerid, "~r~NÃO AGRIDA UM HELPER!", 2500, 3);
		}
	}
	if(Player[damagedid][MotoTaxi] > 0)
	{
		if(EmTrabalho[damagedid] == 1)
		{
			GameTextForPlayer(playerid, "~r~NÃO AGRIDA UM MOTO TAXISTA EM TRABALHO!", 2500, 3);
		}
	}
	if(Player[playerid][Faccoes] == Player[damagedid][Faccoes])
	{
	    if(EmTrabalho[playerid] == 0)
		{
			GameTextForPlayer(playerid, "~r~ Nao agrida alguem da sua organizacao.", 3000, 5);
		}
	}
 	PlayerPlaySound(playerid,17802,0.0,0.0,0.0);
    return true;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid,bodypart)
{
    if(issuerid != INVALID_PLAYER_ID)
    {
    	if(!CoolDown{ playerid } && ToggleCoolDown[issuerid]) CoolDown{ issuerid } = true, SetTimerEx("ResetCoolDown", 2500, false, "i", issuerid);
    }
	if(Player[playerid][Reporter] > 0)
	{
		if(EmTrabalho[playerid] == 1)
		{
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);
		}
	}
	if(Player[playerid][pHelper] > 0)
	{
		if(EmTrabalho[playerid] == 1)
		{
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);
		}
	}
    return true;
}
public OnPlayerDisconnect(playerid, reason)
{
	// ================ [ ANT DDOS BOT ] ===================== //
    if(reason == 2)
	{
        static playerip[20];
        GetPlayerIp(playerid, playerip, 20);
        strcat(playerip, "di_S");
        varSet(playerip, gettime());
        return false;
    }
	// =================== [ DESTROI CARRO DE SOM ]  =========================== //
    if(CarroDeSom[playerid]==1)
    {
	    DestroyObject(ob2[playerid]);
	    DestroyObject(ob3[playerid]);
	    DestroyObject(ob5[playerid]);
	    DestroyObject(ob6[playerid]);
	    DestroyObject(ob7[playerid]);
	    DestroyObject(ob10[playerid]);
	    DestroyObject(ob11[playerid]);
	    DestroyObject(ob12[playerid]);
	    DestroyObject(ob13[playerid]);
	    DestroyObject(ob14[playerid]);
	    DestroyObject(ob15[playerid]);
	    DestroyObject(ob16[playerid]);
	    DestroyObject(ob17[playerid]);
	    DestroyObject(ob18[playerid]);
	    DestroyObject(ob19[playerid]);
	    DestroyObject(ob20[playerid]);
    	CarroDeSom[playerid]=0;
    }
    // ==================== [ PUTEIRO  ========================================= //
	if(NoQuarto2[playerid]>=1)
	{
	    NoQuarto=0;
	}
	// ========================= [ LASER ] ===================================== //
    ResetStats(playerid);
    SetPVarInt(playerid, "laser", 0);
    RemovePlayerAttachedObject(playerid, 0);
	// =========================== [ AO SAIR DO SERVIDOR ] ===================== //
 	new string[999];
	switch(reason)
	{
		case 0:
		{
			format(string, sizeof(string), "{FFD700}~ {ffffff}%s Saiu do servidor (Crash/Conexão).", Nome(playerid));
		}
		case 1:
		{
			format(string, sizeof(string), "{FFD700}~ {ffffff}%s Saiu do servidor (Conta Própria).", Nome(playerid));
		}
		case 2:
		{
			format(string, sizeof(string), "{FFD700}~ {ffffff}%s Saiu do servidor (Kikado/Banido).", Nome(playerid));
		}
	}
	MensagemLocal(playerid, 0xFFFFD2AA, string, 20);
	// =========================== [ SAIR DO BANCO ] =========================== //
	if(BombArmed[playerid] == true)
	{
	   	KillTimer(bombtimer[playerid]);
		SCM(playerid, COR_ERRO, "[FALHA]: Você saiu do banco sua bomba foi desativada.");
		DestroyObject(BombObject[playerid]);
		BombArmed[playerid] = false;
	}
	// ========================== [ SALVAR CONTA ] ============================= //
	if(Logado{playerid} == true)
	{
		SalvarDados(playerid);
	}

	// ================ [ ZERA AS VARIÁVEIS ] =========================================== //
	Player[playerid][LerPM] = false;
	Player[playerid][InHospital] = false;
	Player[playerid][DelayGov] = false;
	Player[playerid][Lutador]=0;
	Player[playerid][BlockIR] = false;
	Player[playerid][BlockTR] = false;
	Player[playerid][FilaHLP] = 0;
	Player[playerid][FilaRGF] = 0;
	Player[playerid][FilaMTX] = 0;
	IDHELPER[playerid] = 0;
	ParticipandoEvento[playerid] = false;
	EmTrabalho[playerid]=0;
	UsouLocalizar[playerid] = 0;
	HidePlayerArrow(playerid);
	gPlayerUsingLoopingAnim[playerid] = 0;
	gPlayerAnimLibsPreloaded[playerid] = 0;
   	// ====================== [ Destroi Objetos das Orgs ] =====================//
   	DestroyVehicle(VeiculoVeh[playerid]);
   	VeiculoVeh[playerid] = 0;
	if(Player[playerid][BarreiraFrente] > 0) DestroyObject(Player[playerid][BarreiraFrente]);
   	if(Player[playerid][Cone] > 0) DestroyObject(Player[playerid][Cone]);
	if(Player[playerid][pBarreira] > 0) DestroyObject(Player[playerid][pBarreira]);
	if(Player[playerid][Grade] > 0) DestroyObject(Player[playerid][Grade]);
	return 1;
}
public OnPlayerRequestSpawn(playerid)
{
    return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	// ============================ [ TOCAR MUSICA BOATE  ] ==================== //
	if(newkeys == 16)
	{
	    if(PlayerToPoint(1.0,playerid, 475.6608,-14.9578,1003.7020))
	    {
		    if(Player[playerid][DJ] >=1)
		    {
		        ShowPlayerDialog(playerid, DIALOG_TOCAR,DIALOG_STYLE_INPUT,"{0000FF}Toque sua música.","{FFFFFF}Link Abaixo:","Tocar","Cancelar");
		    }
			else return SCM(playerid, COR_ERRO,"[FALHA]: você não é um DJ.");
		}
	}
	// ============================ [ CARRO DE SOM ] =========================== //
	if(newkeys == KEY_NO)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
  				if(CarroDeSom[playerid] >= 1)
				{
					SetVehicleEngineState(GetPlayerVehicleID(playerid), 1);
	   				for(new i=0;i < MAX_GZS;i++)
			  		if(GetDistanceBetweenPlayers(playerid, i) <= 70) StopAudioStreamForPlayer(i);
					SCM(playerid, COR_PRINCIPAL, "[INFO]: Você ligou o motor do veículo e a música parou.");
				}
	 		}
	 	}
	}
	//===================================[FUZIS CMD]============================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 2188.2839,-837.8320,128.3554)/*ENGENHO */)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 2690.6121,-830.8826,64.5395)/*MARTINS*/ )
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL2, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 2911.5725,2142.5842,11.3554)/*ANTARES*/)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL3, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	//===================================[FUZIS LLL]============================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 1112.1224,-2104.2859,69.3554)/*MORRO DA PRIMAVERA */)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL4, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, -2500.7124,-702.9796,139.3554)/*MORRO DO JURAMENTO*/ )
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL5, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 939.8489,-711.0987,122.2109)/*MORRO DO URUBU*/)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL6, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	//===================================[FUZIS 3CP]============================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 123.0179,-283.6630,1.5781)/*MUQUIÇO */)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL7, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 1907.1077,-1981.2148,14.7859)/*SAPO DE CAMARÁ*/ )
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL8, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 847.0629,1941.5298,10.9554)/*VILA ALIANÇA*/)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL9, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	//===================================[FUZIS MLC]============================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 2657.0427,2274.1494,10.8203)/*Cesarão*/)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL10, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 2181.2515,2850.7627,10.8203)/*Tres Pontes*/ )
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL11, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0,playerid, 611.1261,-606.5334,17.2266)/*Bateau Mouche*/)
		{
			ShowPlayerDialog(playerid, DIALOG_MENUARSENAL12, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Favela", "Informações Arsenal\nGuardar Armas\nEquipar", "Ok", "Cancelar");
		}
	}
	// ============= [ COMPRAR ARMA ] ============================= //
    if(newkeys == KEY_YES)
    {
    	if(EmTrabalho[playerid]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está em trabalho.");
	    if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da Arena UFC.");
		if(Player[playerid][TempoPreso]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está preso.");
		if(Presidio[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está preso.");
		if(ParticipandoEvento[playerid] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está em um evento.");
		if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
  		ShowPlayerDialog(playerid, DIALOG_COMPRARARMAS, DIALOG_STYLE_TABLIST_HEADERS, "Escolha a arma desejada:", "Arma\tPreço\tMunição\nM4\tR$:20.000\t250\nAK-47\tR$:25.000\t300\nMP5\tR$:12.000\t400\nShotgun\tR$:15.000\t100", "Comprar", "Cancelar");
    }
    // =========================== [ VILA MIMOSA ] ============================= //
	if(newkeys == 16) // Serviço Puta
	{
		if(PlayerToPoint(1.0, playerid, 345.5129,302.1619,999.9382))
		{
            ShowPlayerDialog(playerid, DIALOG_PUTA, DIALOG_STYLE_LIST, "{FFFF00}¤ {FFFFFF}Suzi", "{ffffff}Boquete\nSexo", "Escolher", "Fechar");
		}
	}
	if(newkeys == 16) // Entrar Quarto
	{
		if(PlayerToPoint(1.0, playerid, 1204.8053,12.4724,1000.9219))
		{
		    if(NoQuarto==1)return SCM(playerid,COR_ERRO,"[FALHA]: A suzi está atendendo um cliente!");
  			new puta[500];
			format(puta, sizeof(puta), "{FFFFFF}Puta: {FF00FF}Suzi\n{ffffff}Tempo: 3 Minutos\n{ffffff}Nome: %s\n{FFFFFF}Preço: {00A600}R$15000\n{FFFFFF}Deseja comer a puta ?",Nome(playerid),GetPlayerScore(playerid));
			ShowPlayerDialog(playerid, DIALOG_PUTEIRO, DIALOG_STYLE_MSGBOX, "{ffffff}Vila Mimosa", puta, "Sim", "Nao");
		}
	}
	if(newkeys == 16) // Sair Quarto
	{
		if(PlayerToPoint(1.0, playerid, 344.0723,305.0365,999.1484))
		{
			SetPlayerPos(playerid, 1204.8053,12.4724,1000.9219);
			SetPlayerInterior(playerid, 2);
			NoQuarto=0;
			NoQuarto2[playerid]=0;
			ApplyActorAnimation(Puta[1], "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
		}
	}
	if(newkeys == 16) // Puteiro Entrar
	{
		if(PlayerToPoint(1.0, playerid, 2495.5181,-1691.0253,14.7656))
		{
		    PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/81837784/boate.mp3");
			SetPlayerPos(playerid, 1204.809936,-11.586799,1000.921875);
			SetPlayerInterior(playerid, 2);
			NoPuteiro[playerid]=1;
			ResetPlayerWeapons(playerid);
			GameTextForPlayer(playerid,"~w~puteiro: ~r~vila mimosa", 1000,1);
		}
	}
	if(newkeys == 16) // Puteiro Sair
	{
		if(PlayerToPoint(1.0, playerid, 1204.7902,-13.2780,1000.9219))
		{
		    NoPuteiro[playerid]=0;
		    StopAudioStreamForPlayer(playerid);
			SetPlayerPos(playerid, 2495.5181,-1691.0253,14.7656);
			SetPlayerInterior(playerid, 0);
		}
	}
	// ===================== [ MERCADINHO ] ==================================== //
	if(newkeys == 16) // Mercadinho Entrar
	{
		if(PlayerToPoint(1.0, playerid, 1352.4178,-1758.2500,13.5078))
		{
			SetPlayerPos(playerid, 6.091179,-29.271898,1003.549438);
			SetPlayerInterior(playerid, 10);
		}
	}
	if(newkeys == 16) // Sair
	{
		if(PlayerToPoint(1.0, playerid, 6.1220,-31.0830,1003.5494))
		{
			SetPlayerPos(playerid, 1352.4178,-1758.2500,13.5078);
			SetPlayerInterior(playerid, 0);
		}
	}
	// ================ [ UFC OCTOGONO ] ================================================ //
	if(newkeys == KEY_SECONDARY_ATTACK) // Entrar Octogono Lutador 1
	{
		if(PlayerToPoint(1.0, playerid, -1627.4648,1485.9337,1050.3679))
		{
		    if(Player[playerid][Lutador]==1)
		    {
				SetPlayerPos(playerid, -1629.7245,1485.9786,1050.9347);
				SetPlayerHealth(playerid,100);
				SetPlayerArmour(playerid,100);
				SetPlayerInterior(playerid, 4);
				SetPlayerSkin(playerid,80);
			}
			else{SCM(playerid, COR_ERRO,"[FALHA]: Você não luta esta noite ou você não é o lutador número 1.");}
		}

	}
  	if(newkeys == KEY_SECONDARY_ATTACK) // Entrar Octogono Lutador 2
	{
		if(PlayerToPoint(1.0, playerid, -1662.5610,1489.8246,1050.3679))
		{
 			if(Player[playerid][Lutador]==2)
 			{
				SetPlayerPos(playerid, -1660.1477,1489.5850,1050.9347);
				SetPlayerInterior(playerid, 4);
				SetPlayerHealth(playerid,100);
				SetPlayerArmour(playerid,100);
				SetPlayerSkin(playerid,81);
   			}
			else{SCM(playerid, COR_ERRO,"[FALHA]: Você não luta esta noite ou você não é o lutador número 2.");}
		}

	}
	if(newkeys == KEY_SECONDARY_ATTACK) // Entrar ARENA UFC
	{
		if(PlayerToPoint(1.0, playerid, 1099.5134,1601.2949,12.5469))
		{
			if(UFC[1]==false)return SCM(playerid,COR_ERRO, "[FALHA]: Evento fechado.");
			new String[256];
			format(String, sizeof(String), "{FF0000}Ultimate Fight Championship\n{FFFFFF}Nome: {FF0000}%s\n{FFFFFF}Level: {FF0000}%d\n{FFFFFF}Preço Ingresso: {FF0000}R$650,00\n{FFFFFF}Deseja comprar o Ingresso para o evento ?",Nome(playerid),GetPlayerScore(playerid));
			ShowPlayerDialog(playerid, DIALOG_INGRESSO, DIALOG_STYLE_MSGBOX, "{FF0000}» {FFFFFF}Evento UFC {FF0000}«", String, "Sim", "Nao");
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // Sair ARENA UFC
	{
		if(PlayerToPoint(1.0, playerid, -1607.5337,1487.5707,1050.3610))
		{
			SetPlayerPos(playerid,1099.5134,1601.2949,12.5469);
			SetPlayerInterior(playerid,0);
			TaUFC[playerid]=0;
		}
	}
	// ========================== [ PORTÃO PCRJ ] ============================== //
	if((newkeys == KEY_CROUCH))
    {
    	if(PlayerToPoint(20.0, playerid, 2237.6,2453.08,12.45))
		{
	        if(Player[playerid][PCRJ]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para abrir o portão.");
			MoveDynamicObject(portaoPCRJ,2237.6,2453.08,1.45,10);
			SetTimerEx("FecharPortaoPCRJ", 5000, 0, "i", playerid);
			for(new i=0; i <= MAX_PLAYERS; i++)
			if(GetDistanceBetweenPlayers(playerid, i) <= 20)
			{
				SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
			}
		}
    }
 	if(( newkeys == KEY_CROUCH ))
    {
    	if(PlayerToPoint(20.0, playerid, 2334.43,2443.65,7.7906))
		{
	        if(Player[playerid][PCRJ]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para abrir o portão.");
			SetTimerEx("FecharPortaoPCRJ2", 5000, 0, "i", playerid);
			MoveDynamicObject(portaoPCRJ2,2334.43,2443.65,0.0906,10);
			for(new i=0; i <= MAX_PLAYERS; i++)
			if(GetDistanceBetweenPlayers(playerid, i) <= 20)
			
			{
				SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
			}
		}
    }
	// ======================= [ ELEVADOR PCRJ ] =============================== //
	if(newkeys == 16) // ELEVADOR PCRJ LV
	{
		if(Player[playerid][PCRJ] >= 4)
		{
			if(PlayerToPoint(1.0, playerid, 2297.1169,2451.4468,10.8203))
			{
				SetPlayerPos(playerid, 2291.1814,2458.5923,38.6875);
			}
		}
	}

	if(newkeys == 16) // ELEVADOR PCRJ LV
	{
		if(PlayerToPoint(1.0, playerid, 2291.1814,2458.5923,38.6875))
		{
			SetPlayerPos(playerid, 2297.1169,2451.4468,10.8203);
		}
	}
	if(newkeys == 16) // DP LV PCRJ
	{
		if(PlayerToPoint(1.0, playerid, 2296.7395,2460.0120,10.8203))
		{
			SetPlayerPos(playerid, 238.6604,139.0759,1003.0234);
			SetPlayerInterior(playerid, 3);
		}
	}

	if(newkeys == 16) // DP LV PCRJ SAIR
	{
		if(PlayerToPoint(1.0, playerid, 238.6604,139.0759,1003.0234))
		{
			SetPlayerPos(playerid, 2296.7395,2460.0120,10.8203);
			SetPlayerInterior(playerid, 0);
		}
	}
    // ============================= [ ENTRAR PREFEITURA ] ===================== //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 1481.0488,-1771.6431,18.7958))
		{
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,384.808624,173.804992,1008.382812);
		}
	}
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 390.0188,173.7865,1008.3828))
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1481.0488,-1771.6431,18.7958);
		}
	}
 	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 362.0780,173.6540,1008.3828))
		{
		    SendClientMessage(playerid, COR_ERRO,"[FALHA]: Sistema Desativado Temporariamente.");
		}
	}
	// ========================== [ INFERFONE PRESÍDIO ] ======================= //
	if(newkeys == 16) //Interfone
	{
		if(PlayerToPoint(1.0, playerid, 301.9921,1780.4479,17.6406))
		{
			ShowPlayerDialog(playerid, DIALOG_INTERFONE, DIALOG_STYLE_LIST, "{FFFF00}¤ {FFFFFF}Interfone - Presidio", "{FFFFFF}¤ Abrir portão", "Selecionar", "Cancelar");
		}

	}
	if(newkeys == 16) //Acesso as Cameras
	{
		if(PlayerToPoint(1.0, playerid, 256.8570,2036.4297,17.7325))
		{
			ShowPlayerDialog(playerid, DIALOG_CAMERAS, DIALOG_STYLE_LIST, "{FFFFFF}Sala de Cameras", "¤ Cela CMD\n¤ Cela LLL\n¤ Cela 3CP\n¤ Cela MLC", "Selecionar", "Cancelar");
		}

	}
	// ====================== [ BOCA Morro do Engenho ] ============================= //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2204.7800,-834.8940,128.3554))
		{
		    if(Boca1==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Morro do Engenho", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Martins ] ================================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2688.3999023438,-827.79998779297,64.199996948242))
		{
		    if(Boca2==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA2, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Martins", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Antares ] ================================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2903.8599,2142.7036,11.3554))
		{
		    if(Boca9==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA9, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Antares", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ======================= [ BOCA Morro da Primavera ] ============================ //
	if(newkeys == 16) 
	{
		if(PlayerToPoint(1.0, playerid, 1111.7084,-2093.1689,69.3554))
		{
			if(Boca3==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA3, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Morro da Primavera", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Morro do Urubu] ================================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 943.4615,-711.3625,122.2109))
		{
		    if(Boca4==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA4, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Morro do Urubu", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Morro do Juramento] ================================ //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, -2505.0376,-702.4961,139.3554))
		{
		    if(Boca8==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA8, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Morro do Juramento", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Muquiço] ==================================== //
	if(newkeys == 16) 
	{
		if(PlayerToPoint(1.0, playerid, 123.2502,-288.7776,1.5781))
		{
			if(Boca5==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA5, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Muquiço", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA VILA ALIANÇA] ==================================== //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 839.8510,1942.9387,10.9554))
		{
			if(Boca12==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA12, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Vila Aliança", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ====================== [ BOCA Sapo de Camará ] ========================= //
	if(newkeys == 16) 
	{
		if(PlayerToPoint(1.0, playerid, 1911.6133,-1978.3553,14.7859))
		{
			if(Boca6==false)return SCM(playerid,COR_ERRO,"[FALHA]: Boca fechada, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA6, DIALOG_STYLE_LIST, "{FFFFFF}Boca de Fumo - Sapo de Camará", "Maconha\nCocaina\nFogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// =========================== [ DEPÓSITO Tres Pontes ] ====================== //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2190.5564,2857.6909,10.8203))
		{
		    if(Boca7==false)return SCM(playerid,COR_ERRO,"[FALHA]: Depósito fechado, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA7, DIALOG_STYLE_LIST, "{FFFFFF}Depósito - Tres Pontes", "Fogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// =========================== [ DEPÓSITO CESARÃO ] ====================== //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2650.8037,2274.1150,10.8203))
		{
		    if(Boca10==false)return SCM(playerid,COR_ERRO,"[FALHA]: Depósito fechado, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA10, DIALOG_STYLE_LIST, "{FFFFFF}Depósito - Cesarão", "Fogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// =========================== [ DEPÓSITO BATEAU MOUCHE ] ====================== //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 611.0272,-609.6773,17.2266))
		{
		    if(Boca11==false)return SCM(playerid,COR_ERRO,"[FALHA]: Depósito fechado, chame um gerente para abri-la.");
			ShowPlayerDialog(playerid, DIALOG_BOCA11, DIALOG_STYLE_LIST, "{FFFFFF}Depósito - Bateau Mouche", "Fogos\nPegar Dinheiro", "Selecionar", "Cancelar");
		}
	}
	// ========================== [ ENTRAR BRANCO LV ] ========================= //
	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2014.9452,1184.1688,10.8203))
		{
			SetPlayerPos(playerid, 2315.4683,-0.0215,26.7422);
			SetPlayerFacingAngle(playerid, 175.8128);
			SetPlayerInterior(playerid, 0);
		}
	}
	// ===================== [ SAIR BANCO LV ] ================================= //
	if(newkeys == 16) 
	{
		if(PlayerToPoint(1.0, playerid, 2315.4683,-0.0215,26.7422))
		{
			SetPlayerPos(playerid, 2014.9452,1184.1688,10.8203);
			SetPlayerFacingAngle(playerid, 175.8128);
			SetPlayerInterior(playerid, 0);
			if(BombArmed[playerid] == true)
			{
	           	KillTimer(bombtimer[playerid]);
	       		SCM(playerid, COR_ERRO, "Você saiu do banco sua bomba foi desativada.");
				DestroyObject(BombObject[playerid]);
				BombArmed[playerid] = false;
			}
		}
	}
	// ====================== [ EXPLODIR CAIXA 1 MERCADO] ========================== //
 	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, -0.9904,-31.3466,1003.5494))
		{
			if(BombArmed[playerid] == false)
			{
				if(Explodiu==true)return SCM(playerid,COR_ERRO,"[FALHA]: Este caixa eletronico já foi explodido ou está sendo explodido.");
				GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
				GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
				
				SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no caixa eletrónico do mercado.", Nome(playerid));
				SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o caixa eletrónico do mercado explodirá em 1 minuto).");

				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				
				BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
				bombtimer[playerid] = SetTimerEx("BombTimer4",60000,0, "d", playerid);
				
				BombArmed[playerid] = true;
				Explodiu = true;
				
				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 1);
				Player[playerid][Procurado] += 1;
				
				SCM(playerid, COR_NEGATIVO,"Você foi feito um procurado da justiça. | Crime: 157.");
				
				new city[64] = "Não identificado";
				new string[999];
				switch(GetPlayerCity(playerid))
				{
					case CIDADELS: city = "Los Santos";
					case CIDADESF: city = "San Fierro";
					case CIDADELV: city = "Las Venturas";
				}
				SendMessageToCops(COR_VERDE, "HQ: Chamando todas as unidades, denunciante: Mercado.");
				format(string,sizeof(string),"HQ: Crime: 157 | Suspeito: %s (ID: %d) | Local: %s.", Nome(playerid), playerid, city);
				SendMessageToCops(COR_VERDE, string);
				SalvarDados(playerid);
			}
			else
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Você só pode colocar uma bomba de cada vez!");
		   	}
		}
	}
	// ====================== [ EXPLODIR CAIXA 2 MERCADO] ========================== //
 	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 8.4970,-31.5783,1003.5494))
		{
			if(BombArmed[playerid] == false)
			{
				if(Explodiu3==true)return SCM(playerid,COR_ERRO,"[FALHA]: Este caixa eletronico já foi explodido ou está sendo explodido.");
				GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
				GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);

				SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no caixa eletrónico do mercado.", Nome(playerid));
				SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o caixa eletrónico do mercado explodirá em 1 minuto).");

				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);

				BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
				bombtimer[playerid] = SetTimerEx("BombTimer6",60000,0, "d", playerid);

				BombArmed[playerid] = true;
				Explodiu3 = true;

				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 1);
				Player[playerid][Procurado] += 1;

				SCM(playerid, COR_NEGATIVO,"Você foi feito um procurado da justiça. | Crime: 157.");

				new city[64] = "Não identificado";
				new string[999];
				switch(GetPlayerCity(playerid))
				{
					case CIDADELS: city = "Los Santos";
					case CIDADESF: city = "San Fierro";
					case CIDADELV: city = "Las Venturas";
				}
				SendMessageToCops(COR_VERDE, "HQ: Chamando todas as unidades, denunciante: Mercado.");
				format(string,sizeof(string),"HQ: Crime: 157 | Suspeito: %s (ID: %d) | Local: %s.", Nome(playerid), playerid, city);
				SendMessageToCops(COR_VERDE, string);
				SalvarDados(playerid);
			}
			else
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Você só pode colocar uma bomba de cada vez!");
		   	}
		}
	}
	// ====================== [ EXPLODIR CAIXA 3 MERCADO] ========================== //
 	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, -10.0599,-30.5530,1003.5494))
		{
			if(BombArmed[playerid] == false)
			{
				if(Explodiu2==true)return SCM(playerid,COR_ERRO,"[FALHA]: Este caixa eletronico já foi explodido ou está sendo explodido.");
				GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
				GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);

				SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no caixa eletrónico do mercado.", Nome(playerid));
				SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o caixa eletrónico do mercado explodirá em 1 minuto).");

				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);

				BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
				bombtimer[playerid] = SetTimerEx("BombTimer5",60000,0, "d", playerid);

				BombArmed[playerid] = true;
				Explodiu2 = true;

				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 1);
				Player[playerid][Procurado] += 1;

				SCM(playerid, COR_NEGATIVO,"Você foi feito um procurado da justiça. | Crime: 157.");

				new city[64] = "Não identificado";
				new string[999];
				switch(GetPlayerCity(playerid))
				{
					case CIDADELS: city = "Los Santos";
					case CIDADESF: city = "San Fierro";
					case CIDADELV: city = "Las Venturas";
				}
				SendMessageToCops(COR_VERDE, "HQ: Chamando todas as unidades, denunciante: Mercado.");
				format(string,sizeof(string),"HQ: Crime: 157 | Suspeito: %s (ID: %d) | Local: %s.", Nome(playerid), playerid, city);
				SendMessageToCops(COR_VERDE, string);
				SalvarDados(playerid);
			}
			else
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Você só pode colocar uma bomba de cada vez!");
		   	}
		}
	}
	// ====================== [ PLANTAR BOMBA BANCO ] ========================== //
 	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 2308.7461,-13.5734,26.7422))
		{
			if(BombArmed[playerid] == false)
			{
				GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
				GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
				SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no caixa eletrónico.", Nome(playerid));
				SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o caixa eletrónico explodirá em 1 minuto).");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
				bombtimer[playerid] = SetTimerEx("BombTimer",60000,0, "d", playerid);
				BombArmed[playerid] = true;
				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 1);
				Player[playerid][Procurado] += 1;
				SCM(playerid, COR_NEGATIVO,"Você foi feito um procurado da justiça. | Crime: 157.");
				new city[64] = "Não identificado";
				new string[999];
				switch(GetPlayerCity(playerid))
				{
					case CIDADELS: city = "Los Santos";
					case CIDADESF: city = "San Fierro";
					case CIDADELV: city = "Las Venturas";
				}
				SendMessageToCops(COR_VERDE, "HQ: Chamando todas as unidades, denunciante: Banco.");
				format(string,sizeof(string),"HQ: Crime: 157 | Suspeito: %s (ID: %d) | Local: %s.", Nome(playerid), playerid, city);
				SendMessageToCops(COR_VERDE, string);
				SalvarDados(playerid);
			}
			else
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Você só pode colocar uma bomba de cada vez!");
		   	}
		}
	}
	// ==================== [ BEBIDAS NATAL  ] ================================= //
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS BAILE LS
	{
		if(PlayerToPoint(1.0, playerid, 1318.6178,2169.1384,11.1234) || PlayerToPoint(1.0, playerid, 1344.1317,2172.2981,13.5256))
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
    // ==================== [ ENTRAR BOATE LS ] ================================ //
	if(newkeys == KEY_SECONDARY_ATTACK) 
	{
		if(PlayerToPoint(1.0, playerid, 1836.8048,-1682.4952,13.3326))
		{
		    if(Player[playerid][Vip] >= 1)
		    {
				SetPlayerPos(playerid, 493.3535,-24.2877,1000.6797);
				SetPlayerFacingAngle(playerid, 359.1516);
				SetPlayerInterior(playerid, 17);
				NaBoateVip[playerid] = 1;
			}
			else
			{
			    SCM(playerid, COR_ERRO, "[FALHA]: Está boate é exclusiva dos membros VIP'S");
			}
		}
	}
	// ====================== [ SAIR BOATE LS ] ================================ //
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(PlayerToPoint(1.0, playerid, 493.3535,-24.2877,1000.6797))
		{
		    if(Player[playerid][Vip] >= 1)
		    {
				SetPlayerPos(playerid, 1836.8048,-1682.4952,13.3326);
				SetPlayerInterior(playerid, 0);
				NaBoateVip[playerid] = 0;
			}
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS BOATE EM LS
	{
		if(PlayerToPoint(1.0, playerid, 499.7475,-20.7463,1000.6797))
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
    // ========================================================================= ELEVADOR REPÓRTER */
   	if(newkeys == KEY_SECONDARY_ATTACK) // ELEVADOR REPORTER INTERIOR
	{
		if(PlayerToPoint(1.0, playerid, 256.2351,1712.6681,-10.5440))
		{
	    	ShowPlayerDialog(playerid, DIALOG_ELEVADOR, DIALOG_STYLE_LIST, "Elevador Repórter", "Garagem", "Selecionar", "Cancelar");
		}
	}
   	if(newkeys == KEY_SECONDARY_ATTACK) // ELEVADOR REPORTER EXTERIOR
	{
		if(PlayerToPoint(1.0, playerid, 764.3279,-1379.8453,13.6471))
		{
	    	ShowPlayerDialog(playerid, DIALOG_ELEVADOR+1, DIALOG_STYLE_LIST, "Elevador Repórter", "Estúdio", "Selecionar", "Cancelar");
		}
	}
	// ========================= [ BAR CIDADE DE LS  ] ======================== //
	if(newkeys == KEY_SECONDARY_ATTACK) // BAR EM LS
	{
		if(PlayerToPoint(1.0, playerid, 2309.8137,-1643.8263,14.8270))
		{
			SetPlayerPos(playerid, 501.8871,-68.1453,998.7578);
			SetPlayerInterior(playerid, 11);
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // SAIR BAR EM LS
	{
		if(PlayerToPoint(1.0, playerid, 501.8871,-68.1453,998.7578))
		{
			SetPlayerPos(playerid, 2309.8137,-1643.8263,14.8270);
			SetPlayerInterior(playerid, 0);
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS BAR EM LS
	{
		if(PlayerToPoint(1.0, playerid, -439.9226,-278.0242,4021.9387))
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS CMD
	{
		if(PlayerToPoint(1.0, playerid, 2678.4841,-843.3865,71.6868)/*MARTINS*/ || PlayerToPoint(1.0, playerid, 2805.8796,2227.8782,10.8203)/*ANTARES*/)
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS LLL
	{
		if(PlayerToPoint(1.0, playerid, 1275.1118,-2028.8030,59.0031)/*PRIMAVERA*/ || PlayerToPoint(1.0, playerid, 1027.3046,-804.5044,101.8482)/*URUBU*/ || PlayerToPoint(1.0, playerid, -2506.3259,-597.4611,132.7554)/*JURAMENTO*/)
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
 	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS 3CP
	{
		if(PlayerToPoint(1.0, playerid, 155.7629,-171.7017,1.6554)/*MUQUIÇO*/ || PlayerToPoint(1.0, playerid, 1891.5981,-2024.6367,13.5469)/*SAPO DE CAMARÁ*/ || PlayerToPoint(1.0, playerid, 884.1252,2041.0659,10.8687)/*VILA ALIANÇA*/)
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK) // BEBIDAS MLC
	{
		if(PlayerToPoint(1.0, playerid, 2537.5159,2084.4548,10.8554)/*CESARÃO*/ || PlayerToPoint(1.0, playerid, 2142.1326,2760.1511,10.8554)/*TRES PONTES*/ || PlayerToPoint(1.0, playerid, 708.4164,-468.2436,16.3359)/*BATEAU MOUCHE*/)
		{
			ShowPlayerDialog(playerid, DIALOG_BEBIDAS, DIALOG_STYLE_LIST, "Lista de Bebidas", "Cerveja\nRedBull\nWisky\nRefrigerante\nVodka", "Beber", "Cancelar");
		}
	}
	// ============================= [ ABRIR PORTÃO COM BUZINA REPORTER ] ================== */
    if ((newkeys == KEY_CROUCH) && (IsPlayerInAnyVehicle(playerid)))
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 777.70001, -1330.2, 12.9))
    	{
    		if(Player[playerid][Reporter] >= 1)
    		{
    		    for(new i=0; i <= HighestID; i++)
    		    if(GetDistanceBetweenPlayers(playerid, i) <= 10)
    		    {
					SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
				}
 				MoveDynamicObject(PortaoReporter, 777.70001220703, -1330.1999511719, 7.9000000953674, 5.0);
				SetTimer("FecharPortaoRGF", 5000, false) ;
    		}
    	}
    }
    // ============================= [  ABRIR PORTAO COM BUZINA REPÓRER ] ========================= //
	if((newkeys == KEY_CROUCH) && (IsPlayerInAnyVehicle(playerid)))
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 778, -1384.8, 13.1))
    	{
    		if(Player[playerid][Reporter] >= 1)
    		{
    		    for(new i=0; i <= HighestID; i++)
    		    if(GetDistanceBetweenPlayers(playerid, i) <= 10)
    		    {
					SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
				}
 				MoveDynamicObject(PortaoReporter2, 778, -1384.8000488281, 6.5999999046326, 5.0);
				SetTimer("FecharPortaoRGF2", 5000, false) ;
    		}
    	}
    }
    // ============================= [  ABRIR PORTAO COM BUZINA HELPER ] ========================= //
	if((newkeys == KEY_CROUCH) && (IsPlayerInAnyVehicle(playerid)))
	{
		if(IsPlayerInRangeOfPoint(playerid, 10.0, -1770.4, 980.40002, 25.6) || IsPlayerInRangeOfPoint(playerid, 10.0, -1770.4, 989.20001, 25.6))
    	{
    		if(Player[playerid][pHelper] >= 1)
    		{
    		    for(new i=0; i <= HighestID; i++)
    		    if(GetDistanceBetweenPlayers(playerid, i) <= 10)
    		    {
					SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
					MoveDynamicObject(portaohelper1, -1770.4000244141, 974.40002441406, 25.60000038147, 5.0);
					MoveDynamicObject(portaohelper2, -1770.6999511719, 995.5, 25.60000038147, 5.0);
					SetTimerEx("FecharPortaoHLP", 5000, 0, "i", playerid);
				}
    		}
    	}
    }
	// ============================= [  ABRIR PORTAO COM BUZINA PMRJ ] ========================= //
 	if ( ( newkeys == KEY_CROUCH ) )
    {
    	if(PlayerToPoint(9.0, playerid, 1539.4004000,-1628.0000000,15.2000000))
		{
	        if(Player[playerid][PMRJ]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para abrir o portão.");
			SetTimerEx("FecharPortaoPMRJ1", 5000, 0, "i", playerid);
			MoveDynamicObject(portaoPMRJ1,1539.4004000,-1628.0000000,1.2000000,10);

			for(new i=0; i <= MAX_PLAYERS; i++)
			if(GetDistanceBetweenPlayers(playerid, i) <= 20)
			{
				SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
			}
		}
    }
    // ================================== [ EQUIPAR DP ] ======================= //
   	if(newkeys == 16)
	{
		if(PlayerToPoint(1.0, playerid, 235.4019,165.7543,1003.0300) || PlayerToPoint(1.0, playerid, 2630.7920,1869.6605,10.8203)||PlayerToPoint(1.0, playerid,1568.5609,-1690.1646,5.8906))
		{
			if(Player[playerid][PCRJ]>=1 || Player[playerid][PMRJ]>=1)
			{
				ShowPlayerDialog(playerid, DIALOG_HQ, DIALOG_STYLE_LIST, "Batalhão Policial", "Equipar\nPresídio", "Ok", "Cancelar");
			}
			else
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Pickup exclusiva para corporações.");
			}
		}
	}
	// ============================= [ PARAR ANIMAÇÕES ] ======================= //
   	if(!gPlayerUsingLoopingAnim[playerid])
   	{
		return 1;
	}
	if(IsKeyJustDown(KEY_HANDBRAKE, newkeys, oldkeys))
	{
	    StopLoopingAnim(playerid);
        TextDrawHideForPlayer(playerid, TextAnim);
        animation[playerid] = 0;
    }
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	    new Query[128];
	    switch(dialogid)
	    {
	        case DIALOG_INICIO:
	        {
	            switch(listitem)
			 	{
			  		case 0:
			    	{
						mysql_format(conectDB, Query, sizeof(Query), "SELECT * FROM `pinfo` WHERE `Nick` = '%e' LIMIT 1", Nome(playerid));
						mysql_function_query(conectDB, Query, true, "ProcurarUsuario", "i", playerid);
			    	}
			    	case 1:
			    	{
	           			mysql_format(conectDB, Query, sizeof(Query), "SELECT * FROM `pinfo` WHERE `Nick` = '%e' LIMIT 1", Nome(playerid));
						mysql_function_query(conectDB, Query, true, "ProcurarUsuario2", "i", playerid);
			    	}
			    	case 2:
			    	{
			    	    ShowPlayerDialog(playerid, DIALOG_INICIO, DIALOG_STYLE_LIST, "{FFFFFF}Seja bem vindo a {FF0000}GTA Facções", "{1E48BD}¤ {FFFFFF}Registrar\n{1E48BD}¤ {FFFFFF}Logar\n{1E48BD}¤ {FFFFFF}Esqueci minha senha {FF0000}(Desativado Temp.)\n{1E48BD}¤ {FFFFFF}Sair", "Selecionar", "");
			    	}
			    	case 3:
			    	{
			    	    Kick(playerid);
			    	}
			   	}
	        }
			case DIALOG_NICK_EM_USO:
			{
			    ShowPlayerDialog(playerid, DIALOG_INICIO, DIALOG_STYLE_LIST, "{FFFFFF}Seja bem vindo a {1E48BD}GTA Facções", "{1E48BD}¤ {FFFFFF}Registrar\n{FF0000}¤ {FFFFFF}Logar\n{FF0000}¤ {FFFFFF}Esqueci minha senha {FF0000}(Desativado Temp.)\n{1E48BD}¤ {FFFFFF}Sair", "Selecionar", "");
			}
	        case DIALOG_REGISTRO:
	        {
	            if(!response) Kick(playerid); //Botão Cancelar
	            else // Botão registrar
	            {
	                if(strlen(inputtext) < 5 || strlen(inputtext) > 32)
	                {
	                    new string1[250],string[250];
						format(string, -1, "{FFFFFF}Olá, bem vindo a {FF0000}GTA Facções\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}INFORMAÇÕES DA SUA CONTA ABAIXO:\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Nick: {FF0000}%s\n", Nome(playerid));
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Status: {FF0000}Não registrada\n\n");
						strcat(string1,string);
						format(string, -1, "{FF0000}* Sua senha deve ter pelo menos 5 caracteres.\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Escolha sua senha:\n");
						strcat(string1,string);
				        ShowPlayerDialog(playerid, DIALOG_REGISTRO, DIALOG_STYLE_PASSWORD, "{FF0000}¤ {FFFFFF}Registro 1/3", string1, "Registrar", "");
	                }
	                else // Se não for Registrado
	                {
	                    //Vai Registrar
	                    new pIP[16];
	    				GetPlayerIp(playerid, pIP, sizeof(pIP));
	                    mysql_format(conectDB, Query, sizeof(Query), "INSERT INTO `pinfo` (`Nick`,`Senha`,`IP`) VALUES ('%s','%s','%s')", Nome(playerid), inputtext, pIP);
	                    // INSIRA EM jogadores (nome, senha) valores (nome (nome do jogador), inputtext (o que foi digitado))
	                    // Executando a consulta
	                    mysql_function_query(conectDB, Query, false, "", "");
	                    GivePlayerMoney(playerid, 30000);
						Player[playerid][Iniciante] = 1;
						SetPlayerScore(playerid, GetPlayerScore(playerid)+1);

	                    // Não precisamos obter nenhum resultado na consulta, logo, não precisamos de callback.
	                    // Portanto, no parâmetro onde ficou, por exemplo, ProcurarUsuario, na OnPlayerConnect, basta deixar ""
	                    // Mesma coisa para os especificadores, que vem logo após a callback, não usaremos callback, muito menos parametros, logo: ""

	                    //Depois de Registrar vai mostar dialog de Login
	                    new string1[28],string[28];
						format(string, -1, "{FFFFFF}Digite seu e-mail:\n");
						strcat(string1,string);
	                    ShowPlayerDialog(playerid, DIALOG_REGISTRO_EMAIL, DIALOG_STYLE_INPUT, "{FF0000}¤ {FFFFFF}Registro 2/3", string1, "Avançar", "");
	                }
	            }
	        }
			case DIALOG_REGISTRO_EMAIL:
			{
			    if(!response) Kick(playerid);
				else
				{
					if(isEmail(inputtext) == 0)
					{
					    new string1[68], string[68];
					    format(string, -1, "{FF0000}ERRO: E-mail invalido.\n\n");
						strcat(string1,string);
	                    format(string, -1, "{FFFFFF}Digite seu e-mail:\n");
						strcat(string1,string);
				        ShowPlayerDialog(playerid, DIALOG_REGISTRO_EMAIL, DIALOG_STYLE_INPUT, "{FF0000}¤ {FFFFFF}Registro 2/3", string1, "Avançar", "");
					}
					else
					{
					    mysql_format(conectDB, Query, sizeof(Query), "UPDATE `pinfo` SET `Email` = '%s' WHERE `Nick` = '%s'", inputtext, Nome(playerid));
		                mysql_function_query(conectDB, Query, false, "", "");
			            new string1[250],string[250];
						format(string, -1, "{FFFFFF}Olá, bem vindo a {FF0000}GTA Facções\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}INFORMAÇÕES DA SUA CONTA ABAIXO:\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Nick: {7CFC00}%s\n", Nome(playerid));
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Status: {7CFC00}Registrada\n\n");
						strcat(string1,string);
						format(string, -1, "{FFFFFF}Digite sua senha:\n");
						strcat(string1,string);
			            ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FF0000}¤ {FFFFFF}Login 3/3", string1, "Jogar", "Cancelar");
		            }
				}
			}
	        case DIALOG_LOGIN:
	        {
	            if(!response)
	                Kick(playerid);

	            else // Botão login
	            {
	                // Agora vamos ao login
	                // Faremos uma consulta para o nome e a senha
	                mysql_format(conectDB, Query, sizeof(Query), "SELECT * FROM `pinfo` WHERE `Nick` = '%e' AND `Senha` = '%e'", Nome(playerid), inputtext);
	                // Traduzindo
	                // SELECIONE TUDO de jogadores AONDE nome = nome(variavel) E senha = inputtext (o que foi digitado)

	                // Executando a consulta
	                // Precisaremos de uma callback pois precisaremos obter o resultado por cache
	                mysql_function_query(conectDB, Query, true, "FazerLogin", "i", playerid);
	            }
	        }
	        case DIALOG_ACESSORIOS:
	        {
	        	if(response)
	        	{
			        SendClientMessage(playerid, COR_PRINCIPAL, "[INFO]: Acessório Ativado, para retirar utilize '/tiraracessorio'");
	        		switch(listitem)
	        		{
			              case 0: SetPlayerAttachedObject(playerid, 0, 19330, 2, 0.166000, -0.038999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			              case 1: SetPlayerAttachedObject(playerid, 0, 19161, 2, 0.078999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			              case 2: SetPlayerAttachedObject(playerid, 0, 18639, 2, 0.131000, 0.019000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			              case 3: SetPlayerAttachedObject(playerid, 0, 18638, 2, 0.148999, 0.031000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			              case 4: SetPlayerAttachedObject(playerid, 0, 18939, 2, 0.164000, 0.001999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			              case 5: SetPlayerAttachedObject(playerid, 0, 19488, 2, 0.121999, 0.000000, -0.005999, -83.199966, 98.200027, -2.500000, 1.000000, 1.000000, 1.000000);
			              case 6: SetPlayerAttachedObject(playerid, 0, 19352, 2, 0.106999, 0.016000, -0.010999, 4.500000, 82.099990, -3.100001, 1.000000, 1.000000, 1.000000);
			              case 7: SetPlayerAttachedObject(playerid, 0, 19090, 2, -0.315999, 0.019999, 0.030000, 0.000000, 0.000000, 0.000000, 1.455999, 0.526000, 0.541000);
			              case 8: SetPlayerAttachedObject(playerid, 0, 19424, 2, 0.070999, -0.026000, -0.002000, -85.299987, 1.600005, -99.500000, 0.944001, 0.915000, 0.809999);
			              case 9: SetPlayerAttachedObject(playerid, 0, 19078,1,-1.000000,-0.517000,0.000000,0.000000,0.299999,10.499994,8.673998,9.400999,7.410993);
			              case 10: SetPlayerAttachedObject(playerid,1, 19078,4,-0.067000,0.053999,0.018000,-168.400039,-169.800003,-2.800000,1.000000,1.000000,1.000000);
			              case 11: SetPlayerAttachedObject(playerid,0, 19085,2,0.090999,0.035000,-0.015000,106.599983,83.199996,0.800003,1.000000,1.000000,1.000000);
			              case 12: SetPlayerAttachedObject(playerid,1, 19086,15,0.051000,0.000000,-0.424999,0.000000,0.000000,-102.100006,1.000000,1.000000,1.000000);
			              case 13: SetPlayerAttachedObject(playerid,0, 19137,2,0.101000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
			              case 14: SetPlayerAttachedObject(playerid,0, 19137,15,0.040999,0.000000,-0.130000,-86.300003,106.100013,-96.100051,7.741999,4.874000,5.584998);
			              case 15: SetPlayerAttachedObject(playerid,0, 19315,1,-0.247999,0.509999,-0.015999,4.300004,86.900024,85.500015,3.010000,4.463000,3.824000);
			              case 16: SetPlayerAttachedObject(playerid,0, 19314,2,0.157000,0.000000,0.000000,-0.199999,-7.600006,-88.599998,1.000000,1.000000,1.000000);
			              case 17: SetPlayerAttachedObject(playerid,0, 19314,2,0.157000,0.000000,0.000000,1.400000,-7.600006,-28.599973,0.711000,0.919999,0.361999);
			              case 18: SetPlayerAttachedObject(playerid,0, 19320,2,0.000000,0.000000,0.000000,4.299999,72.999992,3.199999,3.594999,3.787999,4.951001);
			              case 19: SetPlayerAttachedObject(playerid,0, 18963,2,0.261000,0.084999,0.004999,4.999999,85.400039,84.699974,2.097000,2.627000,3.033999);
			              case 20: SetPlayerAttachedObject(playerid,0, 1607,2,0.267000,0.000000,0.000000,-0.199999,81.199996,-3.499999,1.135000,1.000000,1.126999);
			              case 21: SetPlayerAttachedObject(playerid,0, 1608,1,0.000000,0.000000,0.000000,0.499999,89.200042,0.199999,1.000000,1.000000,1.000000);
			              case 22: SetPlayerAttachedObject(playerid,0, 1609,1,-0.358000,0.000000,0.170000,0.000000,93.099998,0.000000,1.427000,1.509000,1.641000);
			              case 23: SetPlayerAttachedObject(playerid,0, 16442,15,0.000000,0.000000,0.259000,0.000000,0.000000,-104.400001,1.000000,1.000000,1.000000);
			              case 24: SetPlayerAttachedObject(playerid,1, 373 , 1, 0.33, -0.029, -0.15, 65, 25, 35);
			              case 25: SetPlayerAttachedObject(playerid,1, 1240, 1, 0.15, 0.17, 0.06, 0.0, 90.0, 0.0);
			              case 26: SetPlayerAttachedObject(playerid,1, 1252, 1, 0.1, -0.2, 0.0, 0.0, 90.0, 0.0);
			              case 27: SetPlayerAttachedObject(playerid,1, 356, 1, -0.2, -0.15, 0.0, 0.0, 24.0, 0.0);
			              case 28: SetPlayerAttachedObject(playerid,1 ,359 ,15 ,-0.02 ,0.08 ,-0.3 ,0 ,50 ,-10);
			              case 29: SetPlayerAttachedObject(playerid,0, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
			              case 30: SetPlayerAttachedObject(playerid,0 ,1852 ,2 ,0.1 ,0 ,-0.01 ,0 ,15 ,0);
			              case 31: SetPlayerAttachedObject(playerid,1, 1654, 1,0.1,0.20,0.0,180.0,100.0,0.0);
	          		}
				}
	        }
	    }
	    
		if(dialogid == DIALOG_TOCAR2)
		{
			if(response)
			{
				SomCarro(playerid, inputtext);
				SCM(playerid,0xADFF2FFF,"[INFO]: O veículo foi desligado para o som do seu carro sair mas alto para liga-lo novamente pressione 'n'.");
				SetVehicleEngineState(GetPlayerVehicleID(playerid), 0);

			}
		}
		if(dialogid == DIALOG_TOCAR)
		{
			if(response)
			{
				BLigarMP3(playerid, inputtext);

			}
		}
	 	if(dialogid == DIALOG_EMPREGOS)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
				    if(Player[playerid][MotoTaxi]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Você já faz parte do Moto Taxi.");
				    if(Player[playerid][PMRJ]>=1 || Player[playerid][PCRJ]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você faz parte de alguma organização policial.");
					if(!(GetPlayerScore(playerid)>=200))return SCM(playerid,COR_ERRO,"[FALHA]: Você precisa ter score/level 200 para entrar no emprego.");
					SCM(playerid,COR_PRINCIPAL,"[EMPREGO]: Você agora trabalha como um Moto Taxi digite /ajudaemprego para ver sua função.");
					Player[playerid][MotoTaxi]=1;
					SalvarDados(playerid);
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_AJUDA)
		{
			if(response)
			{
				if(listitem == 0)
				{
				    Ajuda(playerid);
				}
				if(listitem == 1)
				{
				   Comandos(playerid);
				}
	   			if(listitem == 2)
				{
				    format(Str, sizeof(Str),"{F0E68C}-Ajuda-: O jogador %s[ID:%d] está pedindo ajuda de um administrador.",Nome(playerid),playerid);
				    MensagemAdmin(Str);
				}
	   			if(listitem == 3)
				{
	            	ShowPlayerDialog(playerid, DIALOG_CREDITOS, DIALOG_STYLE_LIST, "{ffffff}Créditos - {0000EE}GTA Facções", "{ffffff}Fundadores - Ferb & Jones\nCriadores do GM - Marola e Ferb\nMapa - Marola, Geovani, Imbel e Ferb\n", "Fechar", "");
				}
			}
		}
		
	 	if(dialogid == DIALOG_HIERARQUIA)
		{
			if(response)
			{
				if(listitem == 0)
				{
				    if(Player[playerid][Faccoes]==1)
				    {
				        DonoFav1(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==2)
				    {
				        DonoFav2(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==3)
				    {
				        DonoFav3(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 4)
				    {
				        DonoFav4(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 5)
				    {
				        DonoFav5(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==6)
				    {
				        DonoFav6(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==7)
				    {
				        DonoFav7(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==8)
				    {
				        DonoFav8(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==9)
				    {
				        DonoFav9(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==10)
				    {
				        DonoFav10(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==11)
				    {
				        DonoFav11(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==12)
				    {
				    	DonoFav12(playerid);
				        return 1;
				    }
				}
				if(listitem == 1)
				{
				    if(Player[playerid][Faccoes]==1)
				    {
				        FrentesFav1(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==2)
				    {
				        FrentesFav2(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==3)
				    {
				        FrentesFav3(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 4)
				    {
				        FrentesFav4(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 5)
				    {
				        FrentesFav5(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==6)
				    {
				        FrentesFav6(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==7)
				    {
				        FrentesFav7(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==8)
				    {
				        FrentesFav8(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==9)
				    {
				        FrentesFav9(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==10)
				    {
				        FrentesFav10(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==11)
				    {
				    	FrentesFav11(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==12)
				    {
				    	FrentesFav12(playerid);
				        return 1;
				    }
				}
				if(listitem == 2)
				{
				    if(Player[playerid][Faccoes]==1)
				    {
				        GerentesFav1(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==2)
				    {
				        GerentesFav2(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==3)
				    {
				        GerentesFav3(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 4)
				    {
				        GerentesFav4(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 5)
				    {
				        GerentesFav5(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==6)
				    {
				        GerentesFav6(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==7)
				    {
				        GerentesFav7(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==8)
				    {
				        GerentesFav8(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==9)
				    {
				        GerentesFav9(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==10)
				    {
				        GerentesFav10(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==11)
				    {
				    	GerentesFav11(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==12)
				    {
				    	GerentesFav12(playerid);
				        return 1;
				    }
				}
	   			if(listitem == 3)
				{
				    if(Player[playerid][Faccoes]==1)
				    {
				        VaporesFav1(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==2)
				    {
				        VaporesFav2(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==3)
				    {
				        VaporesFav3(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 4)
				    {
				        VaporesFav4(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 5)
				    {
				        VaporesFav5(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==6)
				    {
				        VaporesFav6(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==7)
				    {
				        VaporesFav7(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==8)
				    {
				        VaporesFav8(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==9)
				    {
				        VaporesFav9(playerid);
				        return 1;
				    }
    				if(Player[playerid][Faccoes]==10)
				    {
				        SCM(playerid,COR_ERRO,"[FALHA]: Não existe vapor na MLC.");
				        return 1;
				    }
    				if(Player[playerid][Faccoes]==11)
				    {
				        SCM(playerid,COR_ERRO,"[FALHA]: Não existe vapor na MLC.");
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==12)
				    {
				    	SCM(playerid,COR_ERRO,"[FALHA]: Não existe vapor na MLC.");
				        return 1;
				    }
				}
	   			if(listitem == 4)
				{
    				if(Player[playerid][Faccoes]==1)
				    {
				        FogueteirosFav1(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==2)
				    {
				        FogueteirosFav2(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==3)
				    {
				        FogueteirosFav3(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 4)
				    {
				        FogueteirosFav4(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes] == 5)
				    {
				        FogueteirosFav5(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==6)
				    {
				        FogueteirosFav6(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==7)
				    {
				        FogueteirosFav7(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==8)
				    {
				        FogueteirosFav8(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==9)
				    {
				        FogueteirosFav9(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==10)
				    {
				        FogueteirosFav10(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==11)
				    {
				    	FogueteirosFav11(playerid);
				        return 1;
				    }
				    if(Player[playerid][Faccoes]==12)
				    {
				    	FogueteirosFav12(playerid);
				        return 1;
				    }
   				}
			}
		}
	 	if(dialogid == DIALOG_MENUARSENAL)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M4"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Engenho", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Engenho", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Engenho", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL2)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M42"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Martins", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL2, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Martins", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL2, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Martins", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL3)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M43"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Antares", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL3, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Antares", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL3, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Antares", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL4)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M44"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis da Primavera", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL4, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Primavera", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL4, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis da Primavera", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL5)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M45"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Juramento", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL5, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Juramento", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL5, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Juramento", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL6)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M46"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Urubu", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL6, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Urubu", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL6, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Urubu", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL7)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M47"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Muquiço", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL7, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Muquiço", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL7, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Muquiço", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL8)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M48"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Sapo", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL8, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Sapo", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL8, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Sapo", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL9)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M49"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis da Vila Aliança", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL9, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Vila Aliança", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL9, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Vila Aliança", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL10)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M50"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Cesarão", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL10, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Cesarão", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL10, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Cesarão", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL11)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M51"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do 3Pontes", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL11, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do 3Pontes", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL11, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do 3Pontes", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_MENUARSENAL12)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					format(Str, sizeof(Str), "{ffffff}Quantidade de Fuzi's: {ADFF2F}%d",DOF2_GetInt(CONFIG, "M52"));
					ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{BD0D3F}# {FFFFFF}Fuzis do Bateau Mouche", Str, "Pronto",#);
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ARSENAL12, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Bateau Mouche", "Guardar Fuzil", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_PEGARFUZIL12, DIALOG_STYLE_LIST, "{BD0D3F}#{FFFFFF} Fuzis do Bateau Mouche", "Pegar Fuzil", "Ok", "Cancelar");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M4",DOF2_GetInt(CONFIG, "M4")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M4")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M4",DOF2_GetInt(CONFIG, "M4")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL2)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M42",DOF2_GetInt(CONFIG, "M42")+1);
					SCM(playerid,COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL2)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M42")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M42",DOF2_GetInt(CONFIG, "M42")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL3)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M43",DOF2_GetInt(CONFIG, "M43")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL3)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M43")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M43",DOF2_GetInt(CONFIG, "M43")-1);
						SCM(playerid,COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL4)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M44",DOF2_GetInt(CONFIG, "M44")+1);
					SCM(playerid,COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL4)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M44")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M44",DOF2_GetInt(CONFIG, "M44")-1);
						SCM(playerid,COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL5)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M45")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M45",DOF2_GetInt(CONFIG, "M45")-1);
						SCM(playerid,COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL5)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M45",DOF2_GetInt(CONFIG, "M45")+1);
					SCM(playerid,COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL6)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M46")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M46",DOF2_GetInt(CONFIG, "M46")-1);
						SCM(playerid,COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL6)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M46",DOF2_GetInt(CONFIG, "M46")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL7)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M47")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M47",DOF2_GetInt(CONFIG, "M47")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL7)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M47",DOF2_GetInt(CONFIG, "M47")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL8)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M48")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M48",DOF2_GetInt(CONFIG, "M48")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL8)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M48",DOF2_GetInt(CONFIG, "M48")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL9)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M49")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M49",DOF2_GetInt(CONFIG, "M49")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL9)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M49",DOF2_GetInt(CONFIG, "M49")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL10)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M50")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M50",DOF2_GetInt(CONFIG, "M50")-1);
						SCM(playerid, COR_ARSENAL,"[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL10)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M50",DOF2_GetInt(CONFIG, "M50")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL11)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M51")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M51",DOF2_GetInt(CONFIG, "M51")-1);
						SCM(playerid, COR_ARSENAL, "[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL11)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M51",DOF2_GetInt(CONFIG, "M51")+1);
					SCM(playerid, COR_ARSENAL, "[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid,31,0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_PEGARFUZIL12)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
				if(listitem == 0)
				{
					if(DOF2_GetInt(CONFIG, "M52")==0)return SCM(playerid,COR_ERRO,"[FALHA]: O arsenal não tem fuzil para pegar.");
				    if(!(GetPlayerWeapon(playerid)==31))
				    {
					   	DOF2_SetInt(CONFIG, "M52",DOF2_GetInt(CONFIG, "M52")-1);
						SCM(playerid, COR_ARSENAL, "[INFO]: Você pegou um fuzil.");
						GivePlayerWeapon(playerid,31,300);
						DOF2::SaveFile();
					}
					else SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um fuzil.");
				}
			}
			return 1;
		}
	 	if(dialogid == DIALOG_ARSENAL12)
		{
			if(!response)return SCM(playerid,COR_ERRO,"[INFO]: Você decidiu fechar a caixa.");
			{
			    if(listitem == 0)
				{
			    	if(!(GetPlayerWeapon(playerid)==31))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fuzil para colocar no arsenal!");
	   				DOF2_SetInt(CONFIG, "M52",DOF2_GetInt(CONFIG, "M52")+1);
					SCM(playerid, COR_ARSENAL,"[INFO]: Você colocou 1 fuzil no arsenal.");
         			SetPlayerWeaponAmmo(playerid, 31, 0);
					DOF2::SaveFile();
			        return 1;
				}
			}
			return 1;
		}
     	if(dialogid == DIALOG_MACONHA)
		{
			if(response ==0)
			{
				SCM(playerid, COR_ERRO, "[FALHA]: Você decidiu não comprar drogas.");
			}
			if(response == 1)
			{
				new valorDroga;
				if(strlen(inputtext) == 0)
				{
					SCM(playerid, COR_ERRO,"** Digite a quantidade de gramas.");
					format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
				    return 1;
				}
				if(GetPlayerMoney(playerid) < strval(inputtext) * 5)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente.");
					return 1;
				}
				if(strval(inputtext)>500)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você só pode comprar de 500 em 500.");
				    return 1;
				}
				valorDroga = strval(inputtext) * 5;
				GivePlayerMoney(playerid,-valorDroga);
			    SendFormattedMessage(playerid, COR_PRINCIPAL,"[INFO]: Você comprou %s gramas de maconha.",inputtext);
			    Player[playerid][Maconha] += strval(inputtext);
			}
		}
     	if(dialogid == DIALOG_COCAINA)
		{
			if(response ==0)
			{
				SCM(playerid, COR_ERRO,"[FALHA]: Você decidiu não comprar drogas.");
			}
			if(response == 1)
			{
				new valorDroga;
				if(strlen(inputtext) == 0)
				{
					SCM(playerid,COR_ERRO,"** Digite a quantidade de gramas.");
					format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
				    return 1;
				}
				if(GetPlayerMoney(playerid) < strval(inputtext) * 10)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente.");
					return 1;
				}
				if(strval(inputtext)>500)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você só pode comprar de 500 em 500.");
				    return 1;
				}
				valorDroga = strval(inputtext) * 10;
				GivePlayerMoney(playerid,-valorDroga);
			    SendFormattedMessage(playerid, COR_ERRO,"[INFO]: Você comprou %s gramas de Cocaina.",inputtext);
			    Player[playerid][Cocaina] += strval(inputtext);
			}
		}
	 	if(dialogid == DIALOG_PUTA)
		{
			if(response)
			{
				if(listitem == 0)
				{
        			SCM(playerid,-1,"{FFFF00}[NPC] {ffffff}Suzi: Vem cá na minha frente e digite /boquete pra eu chupar você amorzinho...");
        			ApplyActorAnimation(Puta[1], "BOMBER","BOM_Plant_Loop",2.0,1,0,0,1,0);
				}
	   			if(listitem == 1)
				{
    				ApplyActorAnimation(Puta[1], "FINALE","FIN_Land_Car",4.0,1,0,0,0,0);
			        SCM(playerid,-1,"{FFFF00}[NPC] {ffffff}Suzi: Digite /pee amorzinho...");
				}
			}
		}
		if(dialogid == DIALOG_PUTEIRO)
		{
			if(response ==0)
			{
       			SCM(playerid,COR_ERRO,"[INFO]: Você decidiu não comer a vagabunda da suzi.");
			}
			if(response == 1)
			{
				if(GetPlayerMoney(playerid) < 15000)return SCM(playerid,COR_ERRO,"[FALHA]: Sai daqui seu duro, você não tem dinheiro pra comer a puta!");
				SetPlayerPos(playerid, 344.0723,305.0365,999.1484);
				SetPlayerInterior(playerid, 6);
				NoQuarto=1;
				NoQuarto2[playerid]=1;
				GameTextForPlayer(playerid,"~w~quarto: ~r~boa trepa", 1000,1);
				GivePlayerMoney(playerid,-15000);
				SetTimerEx("@NoQuarto", 180000, 0, "i", playerid);
			}
		}
		if(dialogid == DIALOG_INGRESSO)
		{
			if(response ==0)
			{
       			SCM(playerid,COR_ERRO,"[INFO]: Você decidiu não comprar ingresso para o evento UFC.");
			}
			if(response == 1)
			{
				if(GetPlayerMoney(playerid) < 650)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar o ingresso.");
				TaUFC[playerid]=1;
				SetPlayerPos(playerid,-1607.5337,1487.5707,1050.3610+3);
				SetPlayerInterior(playerid,4);
				GivePlayerMoney(playerid,-650);
				ResetPlayerWeapons(playerid);
				GameTextForPlayer(playerid,"~r~ultimate ~w~fight ~r~championship", 1000,1);
			}
		}
     	if(dialogid == DIALOG_FOGOS)
		{
			if(response ==0)
			{
				SCM(playerid,COR_ERRO,"[FALHA]: Você decidiu não comprar fogos.");
			}
			if(response == 1)
			{
				new varlorFogos;
				if(strlen(inputtext) == 0)
				{
					SCM(playerid,COR_ERRO,"** Digite a quantidade de fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
				    return 1;
				}
				if(GetPlayerMoney(playerid) < strval(inputtext) * 10)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente.");
					return 1;
				}
				if(strval(inputtext)>100)
				{
				    SCM(playerid,COR_ERRO,"[FALHA]: Você só pode comprar de 100 em 100.");
				    return 1;
				}
				varlorFogos = strval(inputtext) * 10;
				GivePlayerMoney(playerid,-varlorFogos);
			    SendFormattedMessage(playerid, COR_PRINCIPAL,"[INFO]: Você comprou %s Fogos.",inputtext);
			    Player[playerid][Fogos] += strval(inputtext);
			}
		}
	  	if(dialogid == DIALOG_COMPRARARMAS)
		{
			if(!response) return SCM(playerid, COR_ERRO,"[FALHA]: Você decidiu não comprar arma.");
			{
				if(listitem == 0)
				{
					if(GetPlayerMoney(playerid) < 20000) return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar esta arma.");
					{
						GivePlayerMoney(playerid, -20000);
						SCM(playerid, COR_PRINCIPAL,"[INFO]: Você comprou uma 'M4'.");
						GivePlayerWeapon(playerid, 31, 250);
					}
				}
				if(listitem == 1)
				{
					if(GetPlayerMoney(playerid) < 25000) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar esta arma.");
					{
						GivePlayerMoney(playerid,-25000);
						SCM(playerid, COR_PRINCIPAL,"[INFO]: Você comprou uma 'AK-47'.");
						GivePlayerWeapon(playerid, 30, 300);
					}
				}
				if(listitem == 2)
				{
					if(GetPlayerMoney(playerid) < 12000) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar esta arma.");
					{
						GivePlayerMoney(playerid,-12000);
						SCM(playerid, COR_PRINCIPAL,"[INFO]: Você comprou uma 'MP5'.");
						GivePlayerWeapon(playerid, 29, 400);
					}
				}
				if(listitem == 3)
				{
					if(GetPlayerMoney(playerid) < 15000) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar esta arma.");
					{
						GivePlayerMoney(playerid,-15000);
						SCM(playerid, COR_PRINCIPAL,"[INFO]: Você comprou uma 'Shotgun'.");
						GivePlayerWeapon(playerid,25,100);
					}
				}
			}
			return 1;
		}
		if(dialogid == DIALOG_GPS)
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, GPS_LS, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o Local:", "Bar\nBoate VIP\nMercado\nPrefeitura\nVila Mimosa(Puteiro)", "Selecionar", "Cancelar");
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, GPS_LV, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o Local:", "Banco\nArena UFC", "Selecionar", "Cancelar");
				}
				if(listitem == 2)
				{
				    ShowPlayerDialog(playerid, GPS_SF, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o Local:", "Presídio", "Selecionar", "Cancelar");
				}
				if(listitem == 3)
				{
					ShowPlayerDialog(playerid, GPS_FAVELAS, DIALOG_STYLE_LIST, "{FFFFFF}Escolha a Facção:", "CMD\nLLL\n3CP\nMLC\nUPP - COMPLEXO DA MARÉ", "Selecionar", "Cancelar");
				}
				if(listitem == 4)
				{
					DisablePlayerCheckpoint(playerid);
					CP[playerid] = 0;
				}
			}
		}
		if(dialogid == GPS_FAVELAS)
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, GPS_CV, DIALOG_STYLE_LIST, "{FFFFFF}Escolha a Favela", "Morro do Engenho\nMartins\nAntares", "Selecionar", "Cancelar");
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, GPS_ADA, DIALOG_STYLE_LIST, "{FFFFFF}Escolha a Favela", "Morro da Primavera\nMorro do Urubu\nMorro do Juramento", "Selecionar", "Cancelar");
				}
				if(listitem == 2)
				{
					ShowPlayerDialog(playerid, GPS_TCP, DIALOG_STYLE_LIST, "{FFFFFF}Escolha a Favela", "Muquiço\nSapo de Camará\nVila Aliança", "Selecionar", "Cancelar");
				}
				if(listitem == 3)
				{
					ShowPlayerDialog(playerid, GPS_MLC, DIALOG_STYLE_LIST, "{FFFFFF}Escolha a Favela", "Cesarão\nTres Pontes\nBateau Mouche", "Selecionar", "Cancelar");
				}
				if(listitem == 4)
				{
					SetPlayerCheckpoint(playerid,2105.9531,753.7885,10.6719, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Complexo da Maré' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
		if(dialogid == GPS_CV)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid,2219.3789,-1114.8909,25.6902, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Morro do Engenho' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 1)
				{
					SetPlayerCheckpoint(playerid,2860.5010,-832.9351,11.0952, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Martins' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 2)
				{
					SetPlayerCheckpoint(playerid,2847.1567,2013.4292,10.6719, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Antares' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
		if(dialogid == GPS_ADA)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid,1405.9299,-1928.5653,16.5229, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Morro da Primavera' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 1)
				{
					SetPlayerCheckpoint(playerid,856.9786,-952.8549,45.8302, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Morro do Urubu' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 2)
				{
					SetPlayerCheckpoint(playerid,-2208.8154,-872.8371,52.7792, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Morro do Juramento' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
		if(dialogid == GPS_TCP)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid,374.8392,-143.1492,3.0774, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Muquiço' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 1)
				{
					SetPlayerCheckpoint(playerid,1821.9127,-1882.8879,13.3563, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Sapo de Camará' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 2)
				{
					SetPlayerCheckpoint(playerid,1821.9127,-1882.8879,13.3563, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Vila Aliança' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
		if(dialogid == GPS_MLC)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid,2676.3643,2293.0532,12.0163, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Cesarão' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 1)
				{
					SetPlayerCheckpoint(playerid,1340.5011,719.4672,10.8203, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Tres Pontes' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 2)
				{
					SetPlayerCheckpoint(playerid,681.5947,-674.3638,16.1875, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A Favela 'Bateau Mouche' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
	 	if(dialogid == GPS_LS)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid, 2309.8137,-1643.8263,14.8270, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: O 'Bar' foi marcado no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 1)
				{
					SetPlayerCheckpoint(playerid, 1836.8048,-1682.4952,13.3326, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A 'Boate VIP' foi marcado no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
				if(listitem == 2)
				{
					SetPlayerCheckpoint(playerid, 1352.4178,-1758.2500,13.5078, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: O 'Mercado' foi marcado no Mapa siga até o ponto vermelho para chegar ao seu destino.");
					CP[playerid] = 2;
				}
				if(listitem == 3)
				{
					SetPlayerCheckpoint(playerid, 1480.9801,-1767.0762,18.7958, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A 'Prefeitura' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino.");
					CP[playerid] = 2;
				}
				if(listitem == 4)
				{
					SetPlayerCheckpoint(playerid,2495.3418,-1685.5734,13.5130, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: A 'Vila Mimosa' foi marcada no Mapa siga até o ponto vermelho para chegar ao seu destino.");
					CP[playerid] = 2;
				}
			}
		}
	 	if(dialogid == GPS_LV)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid,2014.9452,1184.1688,10.8203, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: O 'Banco' foi marcado no Mapa siga até o ponto vermelho para chegar ao seu destino.");
					CP[playerid] = 2;
				}
       			if(listitem == 1)
				{
				    CP[playerid]=2;
					SetPlayerCheckpoint(playerid,1099.5134,1601.2949,12.5469, 4.0);
					SCM(playerid,COR_PRINCIPAL,"-GPSInfo-: A Arena UFC foi Marcada no Mapa siga até o ponto vermelho para chegar ao seu destino.");
				}
			}
		}
	 	if(dialogid == GPS_SF)
		{
			if(response)
			{
				if(listitem == 0)
				{
					SetPlayerCheckpoint(playerid, 308.3990,1777.0809,17.6406, 4.0);
					SCM(playerid, COR_PRINCIPAL, "-GPSInfo-: O 'Presidio' foi marcado no Mapa siga até o ponto vermelho para chegar ao seu destino. ");
					CP[playerid] = 2;
				}
			}
		}
       	if(dialogid == DIALOG_REGRAS)
		{
			if(response ==0)
			{
				Regras1(playerid);
			}
			if(response == 1)
			{
				Regras2(playerid);
				PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
				SetPlayerCameraPos(playerid, 1473.0959,-1587.3617,79.9308);
				SetPlayerCameraLookAt(playerid, 1483.7644,-1659.1058,28.7769);
			}
		}
		if(dialogid == DIALOG_REGRAS2)
		{
			if(response ==0)
			{
				Regras1(playerid);
			}
			if(response == 1)
			{
				Regras3(playerid);
    			PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
  				SetPlayerCameraPos(playerid, 563.3523,-1225.7898,117.8663);
				SetPlayerCameraLookAt(playerid, 627.3071,-1130.5742,113.2172);
			}
		}
	 	if(dialogid == DIALOG_REGRAS3)
		{
			if(response ==0)
			{
				Regras1(playerid);
			}
			if(response == 1)
			{
				Regras4(playerid);
				PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
  				SetPlayerCameraPos(playerid, 2081.1199,-1035.0262,113.4360);
				SetPlayerCameraLookAt(playerid, 2175.6904,-1027.3837,75.6326);
			}
		}
	  	if(dialogid == DIALOG_REGRAS4)
		{
			if(response ==0)
			{
				Regras1(playerid);
			}
			if(response == 1)
			{
				Regras5(playerid);
 				PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
  				SetPlayerCameraPos(playerid, 2476.4539,-1374.4449,124.6351);
				SetPlayerCameraLookAt(playerid, 2414.1274,-1305.3009,99.3433);
			}
		}
 		if(dialogid == DIALOG_ABRIR)
		{
			if(response ==0)
			{
          		ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha a facção da favela:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
   			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, DIALOG_ABRIRCV, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha qual favela você quer abrir ou fechar a boca:", "Morro do Engenho\nMartins\nAntares", "Escolher", "Voltar");
				}
	   			if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ABRIRADA, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha qual favela você quer abrir ou fechar a boca:", "Morro da Primavera\nMorro do Urubu\nMorro do Juramento", "Escolher", "Voltar");
				}
	   			if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_ABRIRTCP, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha qual favela você quer abrir ou fechar a boca:", "Muquiço\nSapo de Camará\nVila Aliança", "Escolher", "Voltar");
				}
	   			if(listitem == 3)
				{
					ShowPlayerDialog(playerid, DIALOG_ABRIRMLC, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha qual favela você quer abriu ou fechar o depósito:", "Cesarão\nTres Pontes\nBateau Mouche", "Escolher", "Voltar");
				}
			}
		}
  	  	if(dialogid == DIALOG_FACCOES)
		{
			if(response ==0)
			{
			    if(Player[playerid][Iniciante]==1)
			    {
					Regras1(playerid);
				}
			}
			if(response == 1)
			{
				ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
			}
		}
 		if(dialogid == DIALOG_FACCOES2)
		{
			if(response ==0)
			{
          		ShowPlayerDialog(playerid, DIALOG_FACCOES, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
   			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, DIALOG_CV, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma favela para poder continuar:", "Morro do Engenho\nMartins\nAntares", "Escolher", "Voltar");
				}
	   			if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_ADA, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma favela para poder continuar:", "Morro da Primavera\nMorro do Urubu\nMorro do Juramento", "Escolher", "Voltar");
				}
	   			if(listitem == 2)
				{
					ShowPlayerDialog(playerid, DIALOG_TCP, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma favela para poder continuar:", "Muquiço\nSapo de Camará\nVila Aliança", "Escolher", "Voltar");
				}
	   			if(listitem == 3)
				{
					ShowPlayerDialog(playerid, DIALOG_MLC, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma favela para poder continuar:", "Cesarão\nTres Pontes\nBateau Mouche", "Escolher", "Voltar");
				}
				if(listitem == 4)
				{
					Player[playerid][Faccoes] = 13;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante] = 0;
					TogglePlayerSpectating(playerid, false);
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
			}
		}
   		if(dialogid == DIALOG_ABRIRCV)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha a facção da favela:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
   			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					if(PlayerToPoint(1.0, playerid, 2204.7800,-834.8940,128.3554))
					{
					    if(Boca1==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca1=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca da {ffffff}'Morro do Engenho'.",Nome(playerid),factext);
						}
						else
						{
						    Boca1=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
	   			if(listitem == 1)
				{
					if(PlayerToPoint(1.0, playerid, 2688.3999023438,-827.79998779297,64.199996948242))
					{
					    if(Boca2==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca2=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca do {ffffff}'Martins'.",Nome(playerid),factext);
						}
						else
						{
						    Boca2=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
	   			if(listitem == 2)
				{
					if(PlayerToPoint(1.0, playerid, 2903.8599,2142.7036,11.3554))
					{
					    if(Boca9==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca9=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca do {ffffff}'Antares'.",Nome(playerid),factext);
						}
						else
						{
						    Boca9=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
			}
		}
   		if(dialogid == DIALOG_ABRIRADA)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha a facção da favela:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
   			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					if(PlayerToPoint(1.0, playerid, 1111.7084,-2093.1689,69.3554))
					{
					    if(Boca3==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca3=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca da {ffffff}'Morro da Primavera'.",Nome(playerid),factext);
						}
						else
						{
						    Boca3=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
	   			if(listitem == 1)
				{
					if(PlayerToPoint(1.0, playerid, 943.4615,-711.3625,122.2109))
					{
					    if(Boca4==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca4=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca do {ffffff}'Morro do Urubu'.",Nome(playerid),factext);
						}
						else
						{
						    Boca4=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
	   			if(listitem == 2)
				{
					if(PlayerToPoint(1.0, playerid, -2505.0376,-702.4961,139.3554))
					{
					    if(Boca8==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca8=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca do {ffffff}'Morro do Juramento'.",Nome(playerid),factext);
						}
						else
						{
						    Boca8=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
					}
				}
			}
		}
		if(dialogid == DIALOG_ABRIRTCP)
		{
		if(response ==0)
		{
			ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha a facção da favela:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
		}
		if(response == 1)
		{
			if(listitem == 0)
			{
				if(PlayerToPoint(1.0, playerid, 123.2502,-288.7776,1.5781))
				{
				    if(Boca5==false)
				    {
						new factext[64];
						if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
						Boca5=true;
						SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca da {ffffff}'Muquiço'.",Nome(playerid),factext);
					}
					else
					{
					    Boca5=false;
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
					}
				}
				else
				{
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
				}
			}
   			if(listitem == 1)
			{
				if(PlayerToPoint(1.0, playerid, 1911.6133,-1978.3553,14.7859))
				{
				    if(Boca6==false)
				    {
						new factext[64];
						if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
						Boca6=true;
						SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca de {ffffff}'Sapo de Camará'.",Nome(playerid),factext);
					}
					else
					{
					    Boca6=false;
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
					}
				}
				else
				{
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
				}
		}
			if(listitem == 2)
		{
		if(PlayerToPoint(1.0, playerid, 839.8510,1942.9387,10.9554))
		{
	    if(Boca12==false)
	    {
		new factext[64];
		if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
		if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
		if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
		if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
		if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
		if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
		if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
		if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
		if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
		if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
		if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
		if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
		Boca12=true;
		SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu a boca da {ffffff}'Vila Aliança'.",Nome(playerid),factext);
		}
		else
		{
	    Boca12=false;
	    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou a boca da favela.");
		}
		}
		else
		{
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
		}
		}
		}
		}
   		if(dialogid == DIALOG_ABRIRMLC)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha a facção da favela:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
   			}
			if(response == 1)
			{
   			if(listitem == 0)
			{
					if(PlayerToPoint(1.0, playerid, 2650.8037,2274.1150,10.8203))
					{
					    if(Boca10==false)
					    {
							new factext[64];
							if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
							if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
							if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
							if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
							if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
							Boca10=true;
							SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu o depósito do {ffffff}'Cesarão'.",Nome(playerid),factext);
						}
						else
						{
						    Boca10=false;
						    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou o depósito da favela.");
						}
					}
					else
					{
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está no depósito.");
					}
			}
			if(listitem == 1)
			{
				if(PlayerToPoint(1.0, playerid, 2190.5564,2857.6909,10.8203))
				{
				    if(Boca7==false)
				    {
						new factext[64];
						if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
						Boca7=true;
						SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu o depósito da {ffffff}'Tres Pontes'.",Nome(playerid),factext);
					}
					else
					{
					    Boca7=false;
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou o depósito da favela.");
					}
				}
				else
				{
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
				}
			}
			if(listitem == 2)
			{
				if(PlayerToPoint(1.0, playerid, 611.0272,-609.6773,17.2266))
				{
				    if(Boca11==false)
				    {
						new factext[64];
						if(Player[playerid][Faccoes] == 12) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 11) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 10) { factext = "MLC"; }
						if(Player[playerid][Faccoes] == 9) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 8) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 7) { factext = "3CP"; }
						if(Player[playerid][Faccoes] == 6) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 5) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 4) { factext = "LLL"; }
						if(Player[playerid][Faccoes] == 3) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 2) { factext = "CMD"; }
						if(Player[playerid][Faccoes] == 1) { factext = "CMD"; }
						Boca11=true;
						SendFormattedMessageToAll(0x00FF00FF,"{00FF00}-GFInfo-: O Gerente {ffffff}%s, {00FF00}da facção {ffffff}'%s' {00FF00}abriu o depósito do {ffffff}'Bateau Mouche'.",Nome(playerid),factext);
					}
					else
					{
					    Boca11=false;
					    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou o depósito da favela.");
					}
				}
				else
				{
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você não está na boca.");
				}
			}
			}
		}
   		if(dialogid == DIALOG_CV)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					Player[playerid][Faccoes]=1;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'CMD' da favela 'Morro do Engenho' use {FFFFFF}'!' {33AAFF}para se comunicar com sua facção");
				}
	   			if(listitem == 1)
				{
					Player[playerid][Faccoes]=2;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'CMD' da favela 'Martins' use {FFFFFF}'!'{33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
	   			if(listitem == 2)
				{
					Player[playerid][Faccoes]=3;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'CMD' da favela 'Antares' use {FFFFFF}'!'{33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
			}
		}
		if(dialogid == DIALOG_ADA)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					Player[playerid][Faccoes]=4;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'LLL' da favela 'Morro da Primavera' use {FFFFFF}'!' {33AAFF}para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
	   			if(listitem == 1)
				{
					Player[playerid][Faccoes]=6;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'LLL' da favela 'Morro do Urubu' use {FFFFFF}'!' {33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
	   			if(listitem == 2)
				{
					Player[playerid][Faccoes]=5;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'LLL' da favela 'Morro do Juramento' use {FFFFFF}'!' {33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
			}
		}
  		if(dialogid == DIALOG_TCP)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					Player[playerid][Faccoes]=8;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					StopAudioStreamForPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser '3CP' da favela 'Muquiço' use {FFFFFF}'!' {33AAFF}para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
	   			if(listitem == 1)
				{
					Player[playerid][Faccoes]=9;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
	                Player[playerid][PCRJ]=0;
	                Player[playerid][pHelper]=0;
	                Player[playerid][Admin]=0;
					Player[playerid][DJ] = 0;
					TogglePlayerSpectating(playerid, false);
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser '3CP' da favela 'Sapo de Camará' use {FFFFFF}'!' {33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
	   			if(listitem == 2)
				{
					Player[playerid][Faccoes]=7;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][Iniciante]=0;
					Player[playerid][PMRJ]=0;
	                Player[playerid][PCRJ]=0;
	                Player[playerid][pHelper]=0;
	                Player[playerid][Admin]=0;
					Player[playerid][DJ] = 0;
					TogglePlayerSpectating(playerid, false);
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser '3CP' da favela 'Vila Aliança' use {FFFFFF}'!' {33AAFF} para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
			}
		}
 		if(dialogid == DIALOG_MLC)
		{
			if(response ==0)
			{
				ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "Voltar");
			}
			if(response == 1)
			{
				if(listitem == 0)
				{
					Player[playerid][Faccoes]=11;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					TogglePlayerSpectating(playerid, false);
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'MLC' da favela 'Cesarão' use{FFFFFF} '!' {33AAFF}para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
				if(listitem == 1)
				{
					Player[playerid][Faccoes]=12;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					TogglePlayerSpectating(playerid, false);
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'MLC' da favela 'Tres Pontes' use{FFFFFF} '!' {33AAFF}para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
				if(listitem == 2)
				{
					Player[playerid][Faccoes]=10;
					Player[playerid][Lider]=0;
					Player[playerid][Cargo]=0;
					Player[playerid][Dono]=0;
					Player[playerid][PMRJ]=0;
					Player[playerid][PCRJ]=0;
					Player[playerid][Iniciante]=0;
					TogglePlayerSpectating(playerid, false);
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você escolheu ser 'MLC' da favela 'Bateau Mouche' use{FFFFFF} '!' {33AAFF}para se comunicar com sua facção");
					SpawnPlayer(playerid);
					SalvarDados(playerid);
					Logado{playerid} = true;
				}
			}
		}
		if(dialogid == DIALOG_TRANSFERIRCASH)
		{
		    if(!response) return 1;
			if(response)
			{
				if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, COR_ERRO, "[FALHA]: Este jogador não está conectado neste momento.");
				SetPVarInt(playerid, "IDDele", strval(inputtext));
				ShowPlayerDialog(playerid, DIALOG_TRANSFERIRCASH2, DIALOG_STYLE_INPUT, "{0000EE}¤ {FFFFFF}GTA Facções - Coloque a quantidade de cash", "{FFFFFF}Coloque abaixo a quantidade de Cash que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
			}
		}
		if(dialogid == DIALOG_TRANSFERIRCASH2)
		{
		    if(!response) return 1;
			if(response)
			{
			    new Texto[400];
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, DIALOG_TRANSFERIRCASH2, DIALOG_STYLE_INPUT, "{0000EE}¤ {FFFFFF}GTA Facções - Coloque a quantidade de cash.", "{FFFFFF}Coloque abaixo a quantidade de Cash que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000) ShowPlayerDialog(playerid, DIALOG_TRANSFERIRCASH2, DIALOG_STYLE_INPUT, "{0000EE}¤ {FFFFFF}GTA Facções - Coloque a quantidade de cash", "Coloque abaixo a quantidade de Cash que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
				Player[GetPVarInt(playerid, "IDDele")][Cash] += strval(inputtext);
				Player[playerid][Cash] -= strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s transferiu %d de Cash para você.", Nome(playerid), strval(inputtext));
				SendClientMessage(GetPVarInt(playerid, "IDDele"), COR_PRINCIPAL, Texto);
				format(Texto, sizeof(Texto), "[INFO]: Você transferiu %d de Cash para %s.", strval(inputtext), Nome(GetPVarInt(playerid, "IDDele")));
				SendClientMessage(playerid, COR_PRINCIPAL, Texto);
			}
		}
		if(dialogid == DIALOG_CASH)
		{
			if(response ==0)
			{
       			SCM(playerid,COR_ERRO,"[FALHA]: Você decidiu não gastar seus Cash.");
			}
			if(response == 1)
			{
			    if(Player[playerid][Vip]>0)return SCM(playerid,COR_ERRO,"[FALHA]: Você já é vip.");
			    new string[999];
				if(Player[playerid][Cash] < 1100) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem Cash suficientes.");
                Player[playerid][Vip] = ConvertDays(15);
                Player[playerid][Cash]-=1100;
                printf("[Cash]: AdmCMD: O Player gastou 1100 cashs comprando 15 dias vip.", Nome(playerid));
                SendFormattedMessageToAll(-1, "{F4A460}AdmCMD: O Player %s adiquiriu 15 dias vip por 1100 cashs. [/Cash]", Nome(playerid));
				format(string, sizeof(string), "{FFFF00}Parabéns, Você comprou 15 dias de vip com 1100 cash.");
				ShowPlayerDialog(playerid, 2329, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", string, "Sair",#);
                format(string, sizeof(string), PegarVip(playerid), Nome(playerid));
			    DOF2_CreateFile(PegarVip(playerid));
			    DOF2_SetInt(PegarVip(playerid), "Dias", Player[playerid][Vip]);
			    DOF2_SaveFile();
			    SalvarDados(playerid);
			}
		}
		if(dialogid == DIALOG_CASH3)
		{
			if(response ==0)
			{
       			SCM(playerid, COR_ERRO,"[FALHA]: Você decidiu não gastar seus Cash.");
			}
			if(response == 1)
			{
			    if(Player[playerid][Vip]>0)return SCM(playerid,COR_ERRO,"[FALHA]: Você já é vip.");
			    new string[999];
				if(Player[playerid][Cash] < 100) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem Cash suficientes.");
                Player[playerid][Vip] = ConvertDays(1);
                Player[playerid][Cash]-=100;
                printf("[Cash]: AdmCMD: O Player gastou 100 cash comprando 1 dia vip.", Nome(playerid));
                SendFormattedMessageToAll(-1, "{F4A460}AdmCMD: O Player %s adiquiriu 1 dia vip por 100 cash. [/Cash]", Nome(playerid));
				format(string, sizeof(string), "{FFFF00}Parabéns, Você comprou 1 dia de vip com 100 cash.");
				ShowPlayerDialog(playerid, 2329, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", string, "Sair",#);
                format(string, sizeof(string), PegarVip(playerid), Nome(playerid));
			    DOF2_CreateFile(PegarVip(playerid));
			    DOF2_SetInt(PegarVip(playerid), "Dias", Player[playerid][Vip]);
			    DOF2_SaveFile();
			    SalvarDados(playerid);
			}
		}
		if(dialogid == DIALOG_CASH4)
		{
			if(response ==0)
			{
       			SCM(playerid, COR_ERRO,"[FALHA]: Você decidiu não gastar seus Cash.");
			}
			if(response == 1)
			{
				if(Player[playerid][Vip]>0)return SCM(playerid,COR_ERRO,"[FALHA]: Você já é vip.");
			    new string[999];
				if(Player[playerid][Cash] < 500) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem Cash suficientes.");
                Player[playerid][Vip] = ConvertDays(5);
                Player[playerid][Cash]-=500;
                printf("[Cash]: AdmCMD: O Player gastou 500 cashs comprando 5 dias vip.", Nome(playerid));
                SendFormattedMessageToAll(-1, "{F4A460}AdmCMD: O Player %s adiquiriu 5 dias vip por 500 cashs. [/Cash]", Nome(playerid));
				format(string, sizeof(string), "{FFFF00}Parabéns, Você comprou 5 dias de vip com 500 cash.");
				ShowPlayerDialog(playerid, 2329, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", string, "Sair",#);
                format(string, sizeof(string), PegarVip(playerid), Nome(playerid));
			    DOF2_CreateFile(PegarVip(playerid));
			    DOF2_SetInt(PegarVip(playerid), "Dias", Player[playerid][Vip]);
			    DOF2_SaveFile();
			    SalvarDados(playerid);
			}
		}
		if(dialogid == DIALOG_CASH5)
		{
			if(response ==0)
			{
       			SCM(playerid, COR_ERRO,"[FALHA]: Você decidiu não gastar seus Cash.");
			}
			if(response == 1)
			{
				if(Player[playerid][Vip]>0)return SCM(playerid,COR_ERRO,"[FALHA]: Você já é vip.");
			    new string[999];
				if(Player[playerid][Cash] < 800) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem Cash suficientes.");
                Player[playerid][Vip] = ConvertDays(10);
                Player[playerid][Cash]-=800;
                printf("[Cash]: AdmCMD: O Player gastou 800 cash comprando 10 dias vip.", Nome(playerid));
                SendFormattedMessageToAll(-1, "{F4A460}AdmCMD: O Player %s adiquiriu 10 dias vip por 800 cashs. [/Cash]", Nome(playerid));
				format(string, sizeof(string), "{FFFF00}Parabéns, Você comprou 10 dias de vip com 800 cash.");
				ShowPlayerDialog(playerid, 2329, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", string, "Sair",#);
                format(string, sizeof(string), PegarVip(playerid), Nome(playerid));
			    DOF2_CreateFile(PegarVip(playerid));
			    DOF2_SetInt(PegarVip(playerid), "Dias", Player[playerid][Vip]);
			    DOF2_SaveFile();
			    SalvarDados(playerid);
			}
		}
		if(dialogid == DIALOG_CASHS)
		{
			if(response)
			{
			    if(listitem == 0)
			    {
			    
			    }
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_CASH1, DIALOG_STYLE_TABLIST_HEADERS, "Loja de Cash [1/2]:", "Arma\tPreço\tBalas\nJetpack\t{FFFF00}80 Cash\t1\nGranada\t{FFFF00}100 Cash\t05\nMicro-Uzi\t{FFFF00}10 Cash\tInfinita\n12 Automatica\t{FFFF00}10 Cash\tInfinita\nKatana\t{FFFF00}10 Cash\t-\nColete\t{FFFF00}10 Cash\t100\nVida\t{FFFF00}10 Cash\t100\nMoto-Serra\t{FFFF00}10 Cash\t-\nBazuca\t{FFFF00}100 Cash\t1\nParaquedas\t{FFFF00}10 Cash\tInfinito\nDoube Tec-9\t{FFFF00}10 Cash\tInifnita", "Comprar", "Avançar");
				}
				if(listitem == 2)
				{
				    if(Player[playerid][Cash] <= 0) return SendClientMessage(playerid, COR_ERRO, "[FALHA]: Você não tem cash suficiente para fazer uma transição.");
					ShowPlayerDialog(playerid, DIALOG_TRANSFERIRCASH, DIALOG_STYLE_INPUT, "{0000EE}¤ {FFFFFF}GTA Facções - Coloque o ID do jogador", "{FFFFFF}Coloque o ID do jogador que você quer transferir.\n\nColoque um ID Válido, Por favor.", "Proximo", "Cancelar");
				}
			}
			return 1;
		}
		if(dialogid == DIALOG_CASH1)
		{
			if(!response) return ShowPlayerDialog(playerid, DIALOG_CASH2, DIALOG_STYLE_TABLIST_HEADERS, "Loja de Cash [2/2]", "Vip\tPreço\tDias\n{FFFFFF}Vip\t{FFFF00}100 Cash\t1\nVip\t{FFFF00}500 Cash\t5\nVip\t{FFFF00}800 Cash\t10\nVip\t{FFFF00}1100 Cash\t15", "Selecionar", "Sair");
			{
				if(listitem == 0)
				{
				    if(Player[playerid][Cash]<80)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou um 'Jetpack', por 80 Cash.");
                    Player[playerid][Cash]-=80;
                    SetPlayerSpecialAction(playerid, 2);
				}
				if(listitem == 1)
				{
				    if(Player[playerid][Cash]<100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou '5 Granadas', por 100 Cash.");
                    Player[playerid][Cash]-=100;
					GivePlayerWeapon(playerid,16,5);
				}
				if(listitem == 2)
				{
				    if(Player[playerid][Cash]<10)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma 'Uzi', por 10 Cash.");
                    Player[playerid][Cash]-=10;
					GivePlayerWeapon(playerid,28,1000);
				}
				if(listitem == 3)
				{
				    if(Player[playerid][Cash]<10)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma '12 Automatica', por 10 Cash.");
                    Player[playerid][Cash]-=10;
					GivePlayerWeapon(playerid, 27, 700);
				}
				if(listitem == 4)
				{
				    if(Player[playerid][Cash]<10)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma 'Katana', por 10 Cash.");
                    Player[playerid][Cash]-=10;
					GivePlayerWeapon(playerid,8,1);
				}
				if(listitem == 5)
				{
				    if(Player[playerid][Cash]<100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou 'Colete', por 100 Cash.");
                    Player[playerid][Cash]-=10;
					SetPlayerArmour(playerid,100);
				}
				if(listitem == 6)
				{
				    if(Player[playerid][Cash]<10)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou 'Vida', por 10 Cash.");
                    Player[playerid][Cash]-=10;
					SetPlayerHealth(playerid,100);
				}
				if(listitem == 7)
				{
				    if(Player[playerid][Cash]<100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma 'Serra Elétrica', por 100 Cash.");
                    Player[playerid][Cash]-=100;
					GivePlayerWeapon(playerid,9,1);
				}
				if(listitem == 8)
				{
				    if(Player[playerid][Cash]<100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma 'Bazuca', por 100  Cash.");
                    Player[playerid][Cash]-=100;
					GivePlayerWeapon(playerid,35,1);
				}
				if(listitem == 9)
				{
				    if(Player[playerid][Cash]< 100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou um 'Paraquédas', por 100 Cash.");
                    Player[playerid][Cash]-=100;
					GivePlayerWeapon(playerid,46,1);
				}
				if(listitem == 10)
				{
				    if(Player[playerid][Cash]< 100)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cash's suficiente para comprar.");
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Parabéns você comprou uma 'TEC-9' por 100 Cash.");
                    Player[playerid][Cash]-=100;
					GivePlayerWeapon(playerid, 32, 2000);
				}
			}
			return 1;
		}
		if(dialogid == DIALOG_CASH2)
		{
			if(!response) return SCM(playerid,COR_ERRO,"[FALHA]: Você cancelou sua compra.");
			{
			if(listitem == 0)
			{
				new String[999];
				format(String, sizeof(String), "{FFFFFF}Quantidade de Cash: {FFFF00}[%d]\n{FFFFFF}Pegar 1 Dia VIP {FFFF00}[CUSTO: 100 CASH]",Player[playerid][Cash]);
				ShowPlayerDialog(playerid, DIALOG_CASH3, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", String, "Pegar VIP", "Sair");
			}
			if(listitem == 1)
			{
				new String[256];
				format(String, sizeof(String), "{FFFFFF}Quantidade de Cash: {FFFF00}[%d]\n{FFFFFF}Pegar 5 Dias VIP {FFFF00}[CUSTO: 500 CASH]",Player[playerid][Cash]);
				ShowPlayerDialog(playerid, DIALOG_CASH4, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", String, "Pegar VIP", "Sair");
			}
			if(listitem == 2)
			{
				new String[256];
				format(String, sizeof(String), "{FFFFFF}Quantidade de Cash: {FFFF00}[%d]\n{FFFFFF}Pegar 10 Dias VIP {FFFF00}[CUSTO: 800 CASH]",Player[playerid][Cash]);
				ShowPlayerDialog(playerid, DIALOG_CASH5, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", String, "Pegar VIP", "Sair");
			}
			if(listitem == 3)
			{
				new String[256];
				format(String, sizeof(String), "{FFFFFF}Quantidade de Cash: {FFFF00}[%d]\n{FFFFFF}Pegar 15 Dias VIP {FFFF00}[CUSTO: 1100 CASH]",Player[playerid][Cash]);
				ShowPlayerDialog(playerid, DIALOG_CASH, DIALOG_STYLE_MSGBOX, "{FFFFFF}Sistema de Cash", String, "Pegar VIP", "Sair");
			}
			}
			return 1;
		}
		if(dialogid == DIALOG_VEH)
		{
			if(response)
			{
				if(listitem == 0)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(560, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 1)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(411, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 2)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(437, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 3)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(481, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 4)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(510, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 5)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(462, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 6)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(468, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 7)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(471, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 8)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(522, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
			}
		}
  		if(dialogid == DIALOG_VEHVIP)
		{
			if(response)
			{
				if(listitem == 0)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(560, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 1)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(411, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 2)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(437, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 3)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(481, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 4)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(510, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 5)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(462, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 6)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(468, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 7)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(471, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 8)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(522, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 9)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(454, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 10)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(424, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 11)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(429, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 12)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(446, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 13)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
				if(listitem == 14)
				{
					GetPlayerPos(playerid, X, Y, Z);
					VeiculoVeh[playerid]=1;
					GetPlayerFacingAngle(playerid, A);
					VeiculoVeh[playerid] = CreateVehicle(402, X, Y, Z, A, -1, -1, 30000);
					PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
					SCM(playerid, COR_PRINCIPAL, "-GFInfo-: Veículo criado, ajude o servidor não deixe ele espalhado use /dcm para deletá-lo.");
				}
			}
		}
 		if(dialogid == DIALOG_TEMPO)
		{
			new string[999];
			if(response)
			{
				if(listitem == 0)
				{
					SetWorldTime(01);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 01:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 1)
				{
					SetWorldTime(02);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 02:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 2)
				{
					SetWorldTime(03);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 03:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 3)
				{
					SetWorldTime(04);
					TempoReal[1]=false;
					format(string, sizeof(string), "[INFO]: O administrador %s configurou a hora para 04:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 4)
				{
					SetWorldTime(05);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 05:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 5)
				{
					SetWorldTime(06);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 06:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 6)
				{
					SetWorldTime(07);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 07:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 7)
				{
					SetWorldTime(08);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 08:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 8)
				{
					SetWorldTime(09);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 09:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 9)
				{
					SetWorldTime(10);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 10:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 10)
				{
					SetWorldTime(11);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 11:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 11)
				{
					SetWorldTime(12);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 12:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 12)
				{
					SetWorldTime(13);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 13:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 13)
				{
					SetWorldTime(14);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 14:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 14)
				{
					SetWorldTime(15);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 15:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 15)
				{
					SetWorldTime(16);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 16:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 16)
				{
					SetWorldTime(17);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 17:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 17)
				{
					SetWorldTime(18);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 18:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 18)
				{
					SetWorldTime(19);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 19:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 19)
				{
					SetWorldTime(20);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 20:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 20)
				{
					SetWorldTime(21);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 21:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 21)
				{
					SetWorldTime(22);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 22:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 22)
				{
					SetWorldTime(23);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 23:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 23)
				{
					SetWorldTime(24);
					TempoReal[1]=false;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a hora para 24:00h", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
				if(listitem == 24)
				{
					TempoReal[1]=true;
					format(string, sizeof(string), "AdmCMD: O administrador %s configurou a para hora automatico.", Nome(playerid));
					SendClientMessageToAll(0xFFFFFFFF, string);
				}
			}
			return 1;
		}
  	   	if(dialogid == DIALOG_ARMAS)
		{
			if(response)
			{
				if(listitem == 0)
				{
				    GivePlayerWeapon(playerid,3,2);
				    SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um cacetete.");
				}
				if(listitem == 1)
				{
					GivePlayerWeapon(playerid,4,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma faca.");
				}
				if(listitem == 2)
				{
					GivePlayerWeapon(playerid,1,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um soco inglês.");
				}
				if(listitem == 3)
				{
					GivePlayerWeapon(playerid,5,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um Taco de Baseball.");
				}
				if(listitem == 4)
				{
					GivePlayerWeapon(playerid,6,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Pá.");
				}
				if(listitem == 5)
				{
					GivePlayerWeapon(playerid,8,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Katana.");
				}
				if(listitem == 6)
				{
					GivePlayerWeapon(playerid,9,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Serra Elétrica.");
				}
				if(listitem == 7)
				{
					GivePlayerWeapon(playerid,10,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um Vibrador Roxo.");
				}
				if(listitem == 8)
				{
					GivePlayerWeapon(playerid,11,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Vibrador Pequeno.");
				}
				if(listitem == 9)
				{
					GivePlayerWeapon(playerid,12,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Vibrador Largo.");
				}
				if(listitem == 10)
				{
					GivePlayerWeapon(playerid,14,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um buquê de flores.");
				}
				if(listitem == 11)
				{
					GivePlayerWeapon(playerid,17,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma bomba de gás.");
				}
				if(listitem == 12)
				{
					GivePlayerWeapon(playerid,25,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma ShotGun");
				}
				if(listitem == 13)
				{
					GivePlayerWeapon(playerid,26,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Sawnoff Shotgun");
				}
				if(listitem == 14)
				{
					GivePlayerWeapon(playerid,30,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma AK-47.");
				}
				if(listitem == 15)
				{
					GivePlayerWeapon(playerid,29,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma MP5.");
				}
				if(listitem == 16)
				{
					GivePlayerWeapon(playerid,41,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um Spray.");
				}
				if(listitem == 17)
				{
					GivePlayerWeapon(playerid,42,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um Extintor.");
				}
				if(listitem == 18)
				{
					GivePlayerWeapon(playerid,43,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou uma Camera.");
				}
				if(listitem == 19)
				{
					GivePlayerWeapon(playerid,46,999999);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você pegou um Paraquedas.");
				}
			}
		}
  	  	if(dialogid == DIALOG_EN)
		{
			if(!response) return SCM(playerid, COR_ERRO, "Você cancelou a criada da enquete.");
			SendClientMessageToAll(-1, " ");
			SendClientMessageToAll(COR_PRINCIPAL, "-------------------------------------------------------------------------------");
			format(SringEnquete,128, "O Administrador %s acaba de criar uma enquete:",  Nome(playerid));
			SendClientMessageToAll(COR_REPORTER, SringEnquete);
			format(SringEnquete,128, "Pergunta: %s", inputtext);
			SendClientMessageToAll(COR_BRANCO, SringEnquete);
			SendClientMessageToAll(COR_PRINCIPAL, "Para votar use /sim ou /nao conforme a enquete");
			SendClientMessageToAll(COR_PRINCIPAL, "-------------------------------------------------------------------------------");

			EnqueteAberta = true;
			format(NomeEnquete, 128, "%s", inputtext);
			SCM(playerid, COR_PRINCIPAL, "[ENQUETE]: Caso queira fechar enquete digite [/fechar]");
			return true;
		}
		if(dialogid == DIALOG_CAMERAS)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	                Player[playerid][Camera]=1;
					SetPlayerCameraPos(playerid, 252.276489, 1954.244262, 20.755990);
					SetPlayerCameraLookAt(playerid, 255.733184, 1952.088134, 18.863124);
					SetPlayerPos(playerid,252.276489, 1954.244262, 20.755990);
					TogglePlayerControllable(playerid, 0);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você está obsevando a cela do CMD para sair digite '/saircamera'.");
	            }
	  			if(listitem == 1)
	            {
	            	Player[playerid][Camera]=1;
					SetPlayerCameraPos(playerid, 266.552062, 1958.545288, 20.904172);
					SetPlayerCameraLookAt(playerid, 263.033355, 1961.371093, 18.751565);
					SetPlayerPos(playerid,266.552062, 1958.545288, 20.904172);
					TogglePlayerControllable(playerid, 0);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você está obsevando a cela do LLL para sair digite '/saircamera'.");
	            }
	  			if(listitem == 2)
	            {
	                Player[playerid][Camera]=1;
					SetPlayerCameraPos(playerid, 267.248565, 1955.021118, 20.714584);
					SetPlayerCameraLookAt(playerid, 269.865997, 1951.231933, 18.767492);
					SetPlayerPos(playerid,267.248565, 1955.021118, 20.714584);
					TogglePlayerControllable(playerid, 0);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você está obsevando a cela do 3CP para sair digite '/saircamera'.");
	            }
	  			if(listitem == 3)
	            {
	                Player[playerid][Camera]=1;
					SetPlayerCameraPos(playerid, 267.122344, 1955.863525, 20.522140);
					SetPlayerCameraLookAt(playerid, 269.969726, 1959.560913, 18.727180);
					SetPlayerPos(playerid,267.122344, 1955.863525, 20.522140);
					TogglePlayerControllable(playerid, 0);
					SCM(playerid,COR_PRINCIPAL,"[INFO]: Você está obsevando a cela da MLC para sair digite '/saircamera'.");
	            }
      		}
		}
		if(dialogid == DIALOG_INTERFONE)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	    		    for(new i=0; i <= HighestID; i++)
	    		    if(GetDistanceBetweenPlayers(playerid, i) <= 10)
	    		    {
						SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
					}
	 				MoveDynamicObject(portaoPresidio, 301.9921,1780.4479,-17.6406, 5.0);
					SetTimer("FecharPortaoPresidio", 5000, false) ;
	            }
      		}
		}
		if(dialogid == DIALOG_BMLC)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
					SCM(playerid,COR_ERRO,"Sistema em Construção...");
	            }
            }
		}
		
		// ========================== [ BOCAS DE FUMO Morro do Engenho ] ================================ //
		if(dialogid == DIALOG_BOCA)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo]==2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo]==2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	            	if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Morro do Engenho.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao = true;
	                SetTimer("Tempo1", 60000*60,1);
	            }
            }
		}
		// ========================== [ BOCAS DE FUMO Martins ] ================================ //
		if(dialogid == DIALOG_BOCA2)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao2 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Martins.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao2 = true;
	                SetTimer("Tempo2", 60000*60,1);
	            }
            }
		}
		// ========================== [ BOCAS DE FUMO Martins ] ================================ //
		if(dialogid == DIALOG_BOCA9)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao9 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Antares.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao9 = true;
	                SetTimer("Tempo9", 60000*60,1);
	            }
            }
		}
		// ========================== [ BOCA DE FUMO Morro da Primavera ] ================================ //
		if(dialogid == DIALOG_BOCA3)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao3 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Morro da Primavera.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao3 = true;
	                SetTimer("Tempo3", 60000*60,1);
	            }
            }
		}
		
		// ========================== [ BOCA DE FUMO Morro do Urubu ] ================================ //
		if(dialogid == DIALOG_BOCA4)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao4 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Morro do Urubu.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao4 = true;
	                SetTimer("Tempo4", 60000*60,1);
	            }
            }
		}

		// ========================== [ BOCA DE FUMO Muquiço ] ================================ //
		if(dialogid == DIALOG_BOCA5)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao5 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Muquiço.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao5 = true;
	                SetTimer("Tempo5", 60000*60,1);
	            }
            }
		}
		if(dialogid == DIALOG_MUDARSENHA)
		{
		    new string[256];
	        if(!response) return SCM(playerid, COR_ERRO,"[FALHA]: Você cancelou a troca do nick.");
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_MUDARNICK, DIALOG_STYLE_INPUT,"Mudança de Senha - GF","Digite sua nova senha!","Trocar","Cancelar");
			mysql_format(conectDB, Query, sizeof(Query), "UPDATE `pinfo` SET `Senha`='%s' WHERE `Nick`='%s'",inputtext,Nome(playerid));
			mysql_tquery(conectDB, Query,"DadosSalvos","d", playerid);
	     	format(string, sizeof(string), "[INFO]: Parabéns! Sua nova senha é %s! [TIRE PRINT TECLA F8]", inputtext);
	        SCM(playerid, COR_PRINCIPAL, string);
	        SalvarDados(playerid);
	        return 1;
		}
		if(dialogid == DIALOG_MUDARNICK)
		{
	        if(!response) return SCM(playerid, COR_ERRO,"[FALHA]: Você cancelou a troca do nick.");
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_MUDARNICK, DIALOG_STYLE_INPUT,"Mudança de Nick - GF","Digite seu novo nick","Trocar","Cancelar");
			new string[999];
			if(20 < strlen(inputtext) || strlen(inputtext) < 4) return SCM(playerid, COR_ERRO, "[FALHA]: Nick deve ser de 4 a 20 dígitos || Somente caraceteres simples.");
	        if(fexist(PegarVip(playerid)))
	        {
	            new string2[2000];
	            format(string2,sizeof(string2),"GF/Vips/%s.ini", inputtext);
	            DOF2_RenameFile(PegarVip(playerid),string2);
	            DOF2_SaveFile();
	     	}
			mysql_format(conectDB, Query, sizeof(Query), "UPDATE `pinfo` SET `Nick`='%s' WHERE `Nick`='%s'", inputtext, Nome(playerid));
			mysql_tquery(conectDB, Query,"DadosSalvos","d", playerid);
			format(string, sizeof(string), "[INFO]: Parabéns! Seu novo nick é %s, mude ele no samp quando relogar. [TIRE PRINT TECLA F8]", inputtext);
	        SCM(playerid, COR_PRINCIPAL, string);
			SetPlayerName(playerid, inputtext);
	        SalvarDados(playerid);
	        SetTimerEx("TimerKick", 1000, 0, "i", playerid);
	        return 1;
		}
		if(dialogid == DIALOG_X9)
		{
	        if(!response) return SCM(playerid, COR_ERRO,"[FALHA]: Você resolveu não entregar o meliante.");
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_X9, DIALOG_STYLE_INPUT,"X9","Digite o id do meliante:","Pronto","Cancelar");
  			new id = strval(inputtext);
			x9 = Nome(id);
			ShowPlayerDialog(playerid, DIALOG_X92, DIALOG_STYLE_INPUT,"X9","Digite onde o meliante se encontra:","Concluir","Cancelar");
	        return 1;
		}
		if(dialogid == DIALOG_X92)
		{
	        if(!response) return SCM(playerid, COR_ERRO,"[FALHA]: Você resolveu não entregar o meliante.");
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_X92, DIALOG_STYLE_INPUT,"X9","Digite onde o meliante se encontra:","Concluir","Cancelar");
			new string[999];
			format(string, sizeof(string), "{0000ff}HQ: Um X9 entregou o meliante {ffffff}%s {0000ff}no local: {FFFFFF}%s{0000ff} neste exato momento", x9,inputtext);
			SendMessageToCops(-1, string);
	        return 1;
		}
		// ========================== [ BOCA DE FUMO Sapo de Camará ] ================================ //
		if(dialogid == DIALOG_BOCA6)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao6 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca da Sapo de Camará.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao6 = true;
	                SetTimer("Tempo6", 60000*60,1);
	            }
            }
		}
		
		// ========================== [ BOCA DE FUMO Tres Pontes ] ================================ //
		if(dialogid == DIALOG_BOCA7)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao7 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 no depósito da Tres Pontes.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao7 = true;
	                SetTimer("Tempo7", 60000*60,1);
	            }
            }
		}
		// ========================== [ BOCA DE FUMO BATEAU MOUCHE ] ================================ //
		if(dialogid == DIALOG_BOCA11)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao11 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o cifrão reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 no depósito do Bateau Mouche.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao11 = true;
	                SetTimer("Tempo11", 60000*60, 1);
	            }
            }
		}
		if(dialogid == DIALOG_BOCA8)
		{
			if(response)
			{
				if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao8 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que a boca reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca do Morro do Juramento.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao8 = true;
	                SetTimer("Tempo8", 60000*60,1);
	            }
            }
		}
		if(dialogid == DIALOG_BOCA10)
		{
			if(response)
			{
	  			if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao10 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que o depósito reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 no Depósito do Cesarão.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao10 = true;
	                SetTimer("Tempo10", 60000*60,1);
	            }
            }
		}
		if(dialogid == DIALOG_BOCA12)
		{
			if(response)
			{
				if(listitem == 0)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nMaconha | R$: 5,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_MACONHA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 1)
	            {
	            	if(!(Player[playerid][Cargo] == 2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para acessar a boca.");
	                format(Str, sizeof(Str), "Boca de Fumo\nCocaina | R$: 10,00(Gramas)\nDigite a quantidade de gramas.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_COCAINA, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Drogas", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 2)
	            {
	            	if(!(Player[playerid][Cargo] == 1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para comprar fogos.");
	                format(Str, sizeof(Str), "Venda de Fogos\nPreço: R$: 10,00 (cada)\nDigite a quantidade de fogos.", Nome(playerid));
					ShowPlayerDialog(playerid, DIALOG_FOGOS, DIALOG_STYLE_INPUT, "{FFFFFF}Venda de Fogos", Str, "Comprar", "Sair");
	            }
	  			if(listitem == 3)
	            {
	                if(!(Player[playerid][Cargo] == 4 || Player[playerid][Dono] == 1 || Player[playerid][Lider] == 1)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para acessar o cifrão.");
	                if(TempoCifrao12 == true) return SCM(playerid, COR_ERRO, "[FALHA]: Espere alguns minutos até que a boca reabasteça");
	                SendFormattedMessageToAll(COR_AMARELO,"-GFInfo-: O player %s pegou R$50.000 na boca da Vila Aliança.", Nome(playerid));
	                GivePlayerMoney(playerid, 50000);
	                TempoCifrao12 = true;
	                SetTimer("Tempo12", 60000*60,1);
	            }
            }
		}
		if(dialogid == DIALOG_HQ)
		{
		if(response)
		{
			if(listitem == 0)   //EQUIPAR
			{
				if(EmTrabalho[playerid] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho [/dp].");
				if(Player[playerid][PCRJ]>=1 || Player[playerid][PMRJ]>=1)
				{
					GivePlayerWeapon(playerid,3,1);
					GivePlayerWeapon(playerid,41,5090);
					GivePlayerWeapon(playerid,29,5090);
					GivePlayerWeapon(playerid,24,50990);
					GivePlayerWeapon(playerid,31,50990);
					SetPlayerArmour(playerid, 100);
					new string[999];
					format(string, sizeof(string), "{C798FA}[ ! ] - {FFFFFF}%s {C798FA}se equipou.", Nome(playerid));
					MensagemLocal(playerid, COR_BRANCO, string, 20);

				}
			}
			if(listitem == 1)
			{
			    SetPlayerPos(playerid, 268.3744,1942.7944,17.7391);
				SetPlayerInterior(playerid,0);
				GameTextForPlayer(playerid, "~r~HQ: ~w~presidio!", 2500, 1);
			}
		}
		return 1;
		}
		if(dialogid == DIALOG_ELEVADOR)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            SetPlayerInterior(playerid, 0);
		            SetPlayerPos(playerid, 764.3279,-1379.8453,13.6471);
		        }
		    }
		}

		if(dialogid == DIALOG_ELEVADOR+1)
		{
		    if(response)
		    {
				if(listitem == 0)
		        {
					SetPlayerPos(playerid, 261.3987,1712.5823,-10.5440);
					SetPlayerFacingAngle(playerid, 269.7691);
		        }
		    }
		}
		if(dialogid == DIALOG_AVALIAR)
		{
			if(response == 0)
			{
				SCM(IDHELPER[playerid], COR_PRINCIPAL, "[INFO]: O player não reconheceu a sua ajuda!");
				SCM(playerid, COR_PRINCIPAL, "[INFO]: Você não reconheceu a ajuda.");
				IDHELPER[IDHELPER[playerid]] = 0;
				IDHELPER[playerid] = 0;
				return 1;
			}
			if(response == 1)
			{

				SCM(playerid, COR_PRINCIPAL, "[INFO]: Obrigado, caso tenha alguma outra dúvida, use '/duvida' ou '/chamar helper' que ajudaremos.");
				SCM(IDHELPER[playerid], COR_PRINCIPAL, "[INFO]: O player reconheceu a sua ajuda!");
				IDHELPER[IDHELPER[playerid]] = 0;
				IDHELPER[playerid] = 0;
				return 1;
			}
		}
		if(dialogid == DIALOG_TUNAR)
		{
			if(response)
			{
				if(listitem == 0)
				{
		 	        ShowPlayerDialog(playerid, PINTARV, DIALOG_STYLE_LIST, "Escolha a cor:", "Branco\nPreto\nVermelho\nRosa\nAmarelo\nAzul\n", "OK", "Cancelar");
				}
				if(listitem == 1)
				{
		 	        ShowPlayerDialog(playerid, DIALOG_RODAS, DIALOG_STYLE_LIST, "Escolha a Roda:", "Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAccess", "Ok", "Cancelar");
				}
				if(listitem == 2)
				{
					new vehicle;
					vehicle = GetPlayerVehicleID(playerid);
					AddVehicleComponent(vehicle, 1087);// Suspenção Hidraulica
					SCM(playerid, COR_PRINCIPAL,"[INFO]: Você colocou suspenção hidraulica em seu veículo!");
				}
				if(listitem == 3)
				{
				    new vehicle;
				    vehicle = GetPlayerVehicleID(playerid);
		 	        AddVehicleComponent(vehicle, 1010); // nitro x10
		 	        SCM(playerid, COR_PRINCIPAL,"[INFO]: Você colocou nitro em seu veículo!");
				}
				if(listitem == 4)
				{
	                SetVehicleHealth(GetPlayerVehicleID(playerid), 99999999);
	                SCM(playerid, COR_PRINCIPAL, "[INFO] Você blindou seu veículo!");
				}
			}
		}
		
	    if(dialogid == DIALOG_RODAS)
	    {
	        if(!response) return 1;
	        new vehicleid = GetPlayerVehicleID(playerid);
			if(listitem == 0){  AddVehicleComponent(vehicleid, 1073); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Shadow no seu carro."); }
	  		if(listitem == 1){  AddVehicleComponent(vehicleid, 1074); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Mega no seu carro."); }
			if(listitem == 2){  AddVehicleComponent(vehicleid, 1075); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Rimshine no seu carro."); }
			if(listitem == 3){  AddVehicleComponent(vehicleid, 1076); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Wires no seu carro."); }
			if(listitem == 4){  AddVehicleComponent(vehicleid, 1077); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Classic no seu carro."); }
			if(listitem == 5){  AddVehicleComponent(vehicleid, 1078); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Twist no seu carro."); }
			if(listitem == 6){  AddVehicleComponent(vehicleid, 1079); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Cutter no seu carro."); }
			if(listitem == 7){  AddVehicleComponent(vehicleid, 1080); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Switch no seu carro."); }
			if(listitem == 8){  AddVehicleComponent(vehicleid, 1081); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Grove no seu carro."); }
			if(listitem == 9){  AddVehicleComponent(vehicleid, 1082); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Import no seu carro."); }
			if(listitem == 10){ AddVehicleComponent(vehicleid, 1083); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Dollar no seu carro."); }
			if(listitem == 11){ AddVehicleComponent(vehicleid, 1084); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Trance no seu carro."); }
			if(listitem == 12){ AddVehicleComponent(vehicleid, 1085); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Atomic no seu carro."); }
			if(listitem == 13){ AddVehicleComponent(vehicleid, 1096); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Ahab no seu carro."); }
			if(listitem == 14){ AddVehicleComponent(vehicleid, 1097); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Virtual no seu carro."); }
			if(listitem == 15){ AddVehicleComponent(vehicleid, 1098); SCM(playerid, COR_PRINCIPAL, "[INFO]: Você adicionou a roda Access no seu carro."); }
			return 1;
		}
		
		if(dialogid == PINTARV)
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(listitem == 0)
				{
					ChangeVehicleColor(vehicleid, 1, 1);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
				if(listitem == 1)
				{
					ChangeVehicleColor(vehicleid, 0, 0);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
				if(listitem == 2)
				{
					ChangeVehicleColor(vehicleid, 3, 3);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
				if(listitem == 3)
				{
					ChangeVehicleColor(vehicleid, 18, 18);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
				if(listitem == 4)
				{
					ChangeVehicleColor(vehicleid, 6, 6);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
				if(listitem == 5)
				{
					ChangeVehicleColor(vehicleid, 20, 20);
					SCM(playerid, COR_PRINCIPAL,"[INFO]: A cor de seu veículo foi mudada.");
				}
			}
		}
		if(dialogid == DIALOG_RADIO)
		{
			if(response)
			{
				if(listitem == 0)
				{
					PlayAudioStreamForPlayer(playerid, "http://45.34.11.10:8149/mp3");
					SCM(playerid, COR_PRINCIPAL, "[INFO]: Voce Ligou a Radio GTA Facções.");
				}
				if(listitem == 1)
				{
					StopAudioStreamForPlayer(playerid);
					SCM(playerid, COR_PRINCIPAL, "[INFO]: Voce Desligou a Radio GTA Facções.");
				}
			}
		}
		if(dialogid == DIALOG_CONTA)
		{
			if(response)
			{
				if(listitem == 0)
				{
					ShowPlayerDialog(playerid, DIALOG_MUDARNICK, DIALOG_STYLE_INPUT,"Mudança de Nick","Digite seu novo nick:","Enviar","Cancelar");
				}
				if(listitem == 1)
				{
					ShowPlayerDialog(playerid, DIALOG_MUDARSENHA, DIALOG_STYLE_INPUT,"Mudança de Senha","Digite sua nova senha:","Enviar","Cancelar");
				}
				if(listitem == 2)
				{
				    Status(playerid);
				}
			}
		}
		if(dialogid == DIALOG_BEBIDAS)
		{
			if(response)
			{
				new string[70];
				if(listitem == 0)
				{
					for(new i=0; i <= MAX_PLAYERS; i++)
					{
						if(GetDistanceBetweenPlayers(playerid, i) <= 20)
						{
							format(string, sizeof(string), "** %s Bebeu uma cerveja.", Nome(playerid));
							SCM(i, COR_ROXO,string);
							SetPlayerDrunkLevel (playerid, 3000);
							GivePlayerMoney(playerid, -5);
							Player[playerid][Bafo]=1;
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						}
					}

				}
				if(listitem == 1)
				{
					for(new i=0; i <= MAX_PLAYERS; i++)
					{
						if(GetDistanceBetweenPlayers(playerid, i) <= 20)
						{
							format(string, sizeof(string), "** %s Bebeu um Red Bull.", Nome(playerid));
							SCM(i, COR_ROXO,string);
							SetPlayerDrunkLevel(playerid, 3000);
							GivePlayerMoney(playerid, -8);
							Player[playerid][Bafo]=1;
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
						}
					}
				}
				if(listitem == 2)
				{
				    for(new i=0; i <= MAX_PLAYERS; i++)
					{
						if(GetDistanceBetweenPlayers(playerid, i) <= 20)
						{
							format(string, sizeof(string), "** %s Bebeu um wisky.", Nome(playerid));
							SCM(i, COR_ROXO,string);
							SetPlayerDrunkLevel(playerid, 5000);
							GivePlayerMoney(playerid, -10);
							Player[playerid][Bafo]=1;
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						}
					}
				}
				if(listitem == 3)
				{
				    for(new i=0; i <= MAX_PLAYERS; i++)
				    {
						if(GetDistanceBetweenPlayers(playerid, i) <= 20)
						{
							format(string, sizeof(string), "** %s Bebeu um refrigerante.", Nome(playerid));
							SCM(i, COR_ROXO,string);
							GivePlayerMoney(playerid, -3);
							Player[playerid][Bafo]=1;
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						}
					}
				}
				if(listitem == 4)
				{
				    for(new i=0; i <= MAX_PLAYERS; i++)
				    {
						if(GetDistanceBetweenPlayers(playerid, i) <= 20)
						{
							format(string, sizeof(string), "** %s Bebeu uma vodka.", Nome(playerid));
							SCM(i, COR_ROXO,string);
							GivePlayerMoney(playerid, -10);
							Player[playerid][Bafo]=1;
							SetPlayerDrunkLevel (playerid, 6000);
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
		   				}
		   			}
				}
			}
		}
		
		if(dialogid == DIALOG_EVENTOS_1)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            TipoEvento = 1;
		            new string[126], string1[126];
      				format(string, -1, "{FFFFFF}Digite qual será o Prêmio do Evento:");
					strcat(string1, string);
				    ShowPlayerDialog(playerid, DIALOG_EVENTOS, DIALOG_STYLE_INPUT,"{FFFFFF}Digite o prêmio do Evento\n", string,"OK","Cancelar");
				}
		        if(listitem == 1)
		        {
		            TipoEvento = 2;
		            new string[126], string1[126];
      				format(string, -1, "{FFFFFF}Digite qual será o Prêmio do Evento:");
					strcat(string1, string);
				    ShowPlayerDialog(playerid, DIALOG_EVENTOS, DIALOG_STYLE_INPUT,"{FFFFFF}Digite o prêmio do Evento\n", string,"OK","Cancelar");
				}
			}
		}
		
		if(dialogid == DIALOG_EVENTOS)
		{
		    if(response)
		    {
				if(TipoEvento == 1)
				{
				    format(premio, 128, inputtext);
					if(Evento == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Um evento ja foi criado");
	      			SendFormattedMessageToAll(COR_LARANJA, "[EVENTO GF] Um evento acabou de ser aberto por {FFFFFF}%s. {FF7100}'/irevento' para participar, {FFFFFF}Prêmio: %s.", Nome(playerid), premio);
	        		if(ParticipandoEvento[playerid] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você já está participando de um evento");
	        		GameTextForAll("~h~~y~] UM EVENTO FOI ABERTO ]", 10000, 3);
					SetPlayerPos(playerid, -182.3077,1891.6052,115.6294);
					SetPlayerInterior(playerid, 0);
					Evento = 1;
				}
			}
			if(TipoEvento == 2)
 			{
   				format(premio, 128, inputtext);
      			if(Evento == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Um evento ja foi criado");
	      		SendFormattedMessageToAll(COR_LARANJA, "[EVENTO GF] Um evento acabou de ser aberto por {FFFFFF}%s. {FF7100}'/irevento' para participar, {FFFFFF}Prêmio: %s.", Nome(playerid), premio);
        		if(ParticipandoEvento[playerid] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você já está participando de um evento");
        		GameTextForAll("~h~~y~] UM EVENTO FOI ABERTO ]", 10000, 3);
				SetPlayerInterior(playerid, 0);
				DestroyVehicle(Surf[1]);
				Surf[1] = CreateVehicle( 511  , -1677.8000000  , -171.8999900  , 15.7000000  , 312.0000000  ,  -1 , -1, -1  );
				PutPlayerInVehicle(playerid, Surf[1], 0);
				SetVehicleParamsForPlayer ( Surf[1], playerid, 0 , 1 ) ;
				Evento = 1;
			}
		}
		if(dialogid == DIALOG_EVENTO_RESULTADO1)
		{
			if(response)
		 	{
		 	    new id = strval(inputtext);
		 		new string[128], string1[128];
		 		eventoPrimeiroColocado = Nome(id);

				format(string, -1, "{FFD700}1º {FFFFFF}- {FFD700}%s\n\n", eventoPrimeiroColocado);
				strcat(string1,string);
				format(string, -1, "{FFFFFF}Digite o prêmio do {FFD700}PRIMEIRO {FFFFFF}colocado:\n");
				strcat(string1,string);
				ShowPlayerDialog(playerid, DIALOG_EVENTO_PREMIO1, DIALOG_STYLE_INPUT, "{FFD700}» {FFFFFF}RESULTADO DO EVENTO 1º COLOCADO {FFD700}«", string1, "Próximo", "");
		  	}
		}
		if(dialogid == DIALOG_EVENTO_PREMIO1)
		{
			if(response)
			{
		 		new status[256], string[256];
		 		format(eventoPremioPrimeiroColocado, 50, inputtext);

				format(string, sizeof(string), "{FFD700}1º {FFFFFF}- {FFD700}%s\n", eventoPrimeiroColocado);
				strcat(status,string);

				format(string, sizeof(string), "{FFFFFF}Ganhou: %s\n\n",eventoPremioPrimeiroColocado);
				strcat(status,string);
				
				format(string, sizeof(string), "{FFD700}Pedimos para o vencedor do evento aguardar\nalguns minutos até o Admin\nPagar o Prêmio.",eventoPremioPrimeiroColocado);
				strcat(status,string);
				
		    	for(new i = 0; i < MAX_PLAYERS; i++)
		    	{
		    	    if(IsPlayerConnected(i))
		        	{
		        	    PlayerPlaySound(playerid, 1084,0.0,0.0,0.0);
						ShowPlayerDialog(i, DIALOG_EVENTO_PUBLICAR, DIALOG_STYLE_MSGBOX, "{FFD700}» {FFFFFF}GANHADOR DO EVENTO {FFD700}«", status, "Fechar", "");
						ParticipandoEvento[i] = false;
					}
				}
			}
		}
		if(dialogid == DIALOG_EVENTO_PUBLICAR)
		{
			if(response)
			{
				PlayerPlaySound(playerid, 1084,0.0,0.0,0.0);
			}
		}
  		if(dialogid == DIALOG_CONFIG)
		{
			if(response)
			{
				if(listitem == 0)
				{
	                if(Player[playerid][BlockTR] == false)
	                {
	                    Player[playerid][BlockTR] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Trazer bloqueado com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockTR] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Trazer desbloqueado com sucesso.");
					}
				}
				if(listitem == 1)
				{
	                if(Player[playerid][BlockIR] == false)
	                {
	                    Player[playerid][BlockIR] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Ir bloqueado com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockIR] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Ir desbloqueado com sucesso.");
					}
				}
				if(listitem == 2)
				{
	                if(Player[playerid][BlockPM] == false)
	                {
	                    Player[playerid][BlockPM] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Mensagem Privada bloqueada com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockPM] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Mensagem Privada desbloqueada com sucesso.");
					}
				}
			}
		}
  		if(dialogid == DIALOG_CONFIG2)
		{
			if(response)
			{
				if(listitem == 0)
				{
	                if(Player[playerid][BlockTR] == false)
	                {
	                    Player[playerid][BlockTR] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Trazer bloqueado com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockTR] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Trazer desbloqueado com sucesso.");
					}
				}
				if(listitem == 1)
				{
	                if(Player[playerid][BlockIR] == false)
	                {
	                    Player[playerid][BlockIR] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Ir bloqueado com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockIR] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Ir desbloqueado com sucesso.");
					}
				}
				if(listitem == 2)
				{
	                if(Player[playerid][BlockPM] == false)
	                {
	                    Player[playerid][BlockPM] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Mensagem Privada bloqueada com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockPM] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Mensagem Privada desbloqueada com sucesso.");
					}
				}
				if(listitem == 3)
				{
	                if(Player[playerid][BlockOlhar] == false)
	                {
	                    Player[playerid][BlockOlhar] = true;
	                    SendClientMessage(playerid, COR_PRINCIPAL,"-ADMCmd-: Olhar bloqueado com sucesso para ativá-lo novamente digite /config.");
	                }
	                else
					{
					    Player[playerid][BlockOlhar] = false;
					    SendClientMessage(playerid, COR_PRINCIPAL, "-ADMCmd-: Olhar desbloqueado com sucesso.");
					}
				}
			}
		}
        return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(_:clickedid != INVALID_TEXT_DRAW)
	{
		// ============================== [ MENU ] ============================= //
		if(clickedid == Menu[10])
		{
			if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
			ShowPlayerDialog(playerid, DIALOG_MUDARNICK, DIALOG_STYLE_INPUT,"Mudança de Nick - GF","Digite seu novo nick!","Trocar","Cancelar");
		}
		else if(clickedid == Menu[11])
		{
			if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
			ShowPlayerDialog(playerid, DIALOG_MUDARSENHA, DIALOG_STYLE_INPUT,"Mudança de Senha - GF","Digite sua nova senha!","Trocar","Cancelar");
		}
		else if(clickedid == Menu[12])
		{
			if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
			Status(playerid);
		}
		else if(clickedid == Menu[13])
		{
		    if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da Arena UFC.");
			if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
			if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode mudar de favela dentro de um veículo!");
			if(GetPlayerInterior(playerid) >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode mudar de favela dentro deste interior!");
		    ShowPlayerDialog(playerid, DIALOG_FACCOES2, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Escolha uma facção para poder continuar:", "CMD\nLLL\n3CP\nMLC\nOutras Organizações", "Escolher", "");
		}
		else if(clickedid == Menu[14])
		{
		    ShowPlayerDialog(playerid, DIALOG_AJUDA, DIALOG_STYLE_LIST, "{7A67EE}¤ {FFFFFF}Tire suas dúvidas:", "{7A67EE}¤ {FFFFFF}Ajuda Geral\n{7A67EE}¤ {FFFFFF}Comandos do Servidor\n{7A67EE}¤ {FFFFFF}Chamar um Admin\n{7A67EE}¤ {FFFFFF}Créditos", "Escolher", "Cancelar");
		}
		else if(clickedid == Menu[4])
		{
			TextDrawHideForPlayer(playerid, Menu[1]);
	        TextDrawHideForPlayer(playerid, Menu[2]);
	        TextDrawHideForPlayer(playerid, Menu[3]);
	        TextDrawHideForPlayer(playerid, Menu[4]);
	        TextDrawHideForPlayer(playerid, Menu[5]);
	        TextDrawHideForPlayer(playerid, Menu[6]);
	        TextDrawHideForPlayer(playerid, Menu[7]);
	        TextDrawHideForPlayer(playerid, Menu[8]);
	        TextDrawHideForPlayer(playerid, Menu[9]);
	        TextDrawHideForPlayer(playerid, Menu[10]);
	        TextDrawHideForPlayer(playerid, Menu[11]);
	        TextDrawHideForPlayer(playerid, Menu[12]);
	        TextDrawHideForPlayer(playerid, Menu[13]);
	        TextDrawHideForPlayer(playerid, Menu[14]);
	        CancelSelectTextDraw(playerid);
		}
		TextDrawHideForPlayer(playerid, Menu[1]);
        TextDrawHideForPlayer(playerid, Menu[2]);
        TextDrawHideForPlayer(playerid, Menu[3]);
        TextDrawHideForPlayer(playerid, Menu[4]);
        TextDrawHideForPlayer(playerid, Menu[5]);
        TextDrawHideForPlayer(playerid, Menu[6]);
        TextDrawHideForPlayer(playerid, Menu[7]);
        TextDrawHideForPlayer(playerid, Menu[8]);
        TextDrawHideForPlayer(playerid, Menu[9]);
        TextDrawHideForPlayer(playerid, Menu[10]);
        TextDrawHideForPlayer(playerid, Menu[11]);
        TextDrawHideForPlayer(playerid, Menu[12]);
        TextDrawHideForPlayer(playerid, Menu[13]);
        TextDrawHideForPlayer(playerid, Menu[14]);
        CancelSelectTextDraw(playerid);
	}
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return 0;
    if(CP[playerid] == 1)
    {
    	GameTextForPlayer(playerid, "~r~Alvo localizado!", 2500, 3);
    	DisablePlayerCheckpoint(playerid);
    	CP[playerid] = 0;
    	HidePlayerArrow(playerid);
    }
	if(CP[playerid] == 2)
	{
		GameTextForPlayer(playerid, "~r~GPS: ~w~VOCE CHEGOU!", 2500, 1);
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
		HidePlayerArrow(playerid);
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid)
{
	for(new i=0;i<MAX_GZS; i++)
	{
		if(GetPVarInt(playerid,"GZAtacada") != -1)
		{
			KillTimer(ContagemDominio[GetPVarInt(playerid,"GZAtacada")]);
			ContagemDominio[GetPVarInt(playerid,"GZAtacada")] = 0;
			GangZoneStopFlashForAll(GangZonas[GetPVarInt(playerid,"GZAtacada")]);
			SetPVarInt(playerid,"GZAtacada",-1);
			SetPVarInt(playerid,"Tempo",0);
			Gz[playerid]=0;
			return 1;
		}
	}
	return 1;
}
CMD:fps(playerid)
{
	if(Player[playerid][FirstPS] == 0)
	{
		FPS[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachObjectToPlayer(FPS[playerid],playerid, 0.0, 0.12, 0.7, 0.0, 0.0, 0.0);
		AttachCameraToObject(playerid, FPS[playerid]);
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você ativou a câmera em primeira pessoa, /FPS para desativar!");
		Player[playerid][FirstPS] = 1;
	}
	else if(Player[playerid][FirstPS] == 1)
	{
		SetCameraBehindPlayer(playerid);
		DestroyObject(FPS[playerid]);
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você desativou a câmera em primeira pessoa!");
		Player[playerid][FirstPS] = 0;
	}
	return 1;
}
CMD:desetaroff(playerid,params[])
{
	new nick[256], str[250],Query[300];
	if(!(Player[playerid][Lider] == 1 || Player[playerid][Dono] == 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(sscanf(params, "s", nick)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /desetaroff [nick]");
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `Nick` = '%s' AND `faccoes` = '%d'",nick,Player[playerid][Faccoes]);
    mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
		mysql_format(conectDB, Query, sizeof(Query), "UPDATE `pinfo` SET `Cargo`='0',`Dono`='0' WHERE `Nick`='%s'",nick);
		mysql_tquery(conectDB, Query,"DadosSalvos","d", playerid);
		SendFormattedMessage(playerid,COR_PRINCIPAL,"[INFO]: O player %s foi desetado com sucesso!",nick);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Este player não é de sua facção ou não existe!");
	return 1;
}
CMD:tocar(playerid)
{
	if(Player[playerid][DJ] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	ShowPlayerDialog(playerid, DIALOG_TOCAR,DIALOG_STYLE_INPUT,"{0000FF}Toque sua música.","{FFFFFF}Link Abaixo:","Tocar","Cancelar");
	return 1;
}
CMD:botarmusica(playerid)
{
	if(Player[playerid][Vip] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	if(CarroDeSom[playerid] == 1)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			ShowPlayerDialog(playerid, DIALOG_TOCAR2,DIALOG_STYLE_INPUT,"{0000FF}Coloque sua música.","{FFFFFF}Link Abaixo:","Tocar","Cancelar");
		}
		else
		{
		    SCM(playerid,COR_ERRO,"[FALHA]: Entre no carro de som para colocar a música.");
		}
	}
	else
	{
        SCM(playerid,COR_ERRO,"[FALHA]: Você não tem um carro de som.");
	}
	return 1;
}
CMD:bocas(playerid)
{
	if(!(Player[playerid][Cargo]==3))return SCM(playerid,COR_ERRO,"[FALHA]: Somente gerente pode abrir e fechar a boca de fumo.");
	ShowPlayerDialog(playerid, DIALOG_ABRIR, DIALOG_STYLE_LIST, "{0000EE}¤ {ffffff}Selecione a Facção:", "{ffffff}CMD\n{ffffff}LLL\n{ffffff}3CP\n{ffffff}MLC", "Escolher", "Voltar");
	return 1;
}
CMD:pagar(playerid, params[])
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	new moneys;
	new playermoney2;
	new giveplayerid;
	new giveplayer[MAX_PLAYER_NAME+1];
	new sendername[MAX_PLAYER_NAME+1];
	new tmp [256], string[256], idx;
	tmp = strtok(params, idx);
	if(!strlen(tmp)){SCM(playerid, COR_USOCORRETO, "Uso correto: /pagar [id] [preço]"); return 1;}
	giveplayerid = strval(tmp);
	tmp = strtok(params, idx);
	if(!strlen(tmp)){SCM(playerid, COR_USOCORRETO, "Uso correto: /pagar [id] [preço]"); return 1;}
	moneys = strval(tmp);
	if(moneys < 1 || moneys > 10000)
	{
		SCM(playerid, COR_ERRO, "[FALHA]: Você só pode pagar entre 1 a 10.000.");
		return 1;
	}
	if (IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				playermoney2 = GetPlayerMoney(playerid);
				if (moneys > 0 && playermoney2 >= moneys)
				{
					GivePlayerMoney(playerid, (0 - moneys));
					GivePlayerMoney(giveplayerid, moneys);
					format(string, sizeof(string), "-GFInfo-: Você pagou %d de dinheiro para o player %s.", moneys,giveplayer);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COR_PRINCIPAL, string);
					format(string, sizeof(string), "-GFInfo-: %s pagou %d de dinheiro para você.",sendername, moneys);
					SCM(giveplayerid, COR_PRINCIPAL, string);
				}
				else
				{
					SCM(playerid, COR_ERRO, "   Você não tem essa quantidade de dinheiro!");
				}
			}
			else
			{
				SCM(playerid, COR_ERRO, "   Jogador está longe demais!");
			}
		}
	}
	else
	{
		format(string, sizeof(string), "   %d não está online.", giveplayerid);
		SCM(playerid, COR_ERRO, string);
	}
	return 1;
}
CMD:ajuda(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	ShowPlayerDialog(playerid, DIALOG_AJUDA, DIALOG_STYLE_LIST, "{7A67EE}¤ {FFFFFF}Tire suas dúvidas:", "{7A67EE}¤ {FFFFFF}Ajuda Geral\n{7A67EE}¤ {FFFFFF}Comandos do Servidor\n{7A67EE}¤ {FFFFFF}Chamar um Admin\n{7A67EE}¤ {FFFFFF}Créditos", "Escolher", "Cancelar");
	return 1;
}
CMD:dominar(playerid,params[])
{
	if(PlayerToPoint(3.0, playerid, 2003.4324,753.4951,10.6719)//Complexo da Maré
	|| PlayerToPoint(3.0, playerid, 2190.8745,2815.1069,10.8203)//Tres Pontes
	|| PlayerToPoint(3.0, playerid, 654.0714,-542.9300,16.3281)//Bateau Mouche
	|| PlayerToPoint(3.0, playerid, 1174.9948,-2043.9192,69.0078)//Morro da Primavera
	|| PlayerToPoint(3.0, playerid, 207.4265,-144.0237,1.5859)//Muquiço
	|| PlayerToPoint(3.0, playerid, 942.5204,1984.1465,10.8687)//Vila Aliança
	|| PlayerToPoint(3.0, playerid, 2605.4514,2281.8171,10.8203)//Cesarão
	|| PlayerToPoint(3.0, playerid, 2869.9612,2268.3896,10.8130)//Antares
	|| PlayerToPoint(3.0, playerid, -2395.9583,-614.8931,132.7850)/*Morro do Juramento*/ || PlayerToPoint(3.0, playerid, 940.8082,-680.9699,120.1932)/*Morro do Urubu*/ || PlayerToPoint(3.0, playerid, 1868.0765,-2101.6897,13.5416)/*Sapo de Camará*/ || PlayerToPoint(3.0, playerid, 2694.5,-841.09997558594,64.0)/*Martins*/ || PlayerToPoint(3.0, playerid, 2200.8481,-980.8399,62.5842)/*Morro do Engenho*/)
	{
		for(new i = 0; i < MAX_GZS; i++)
		{
			if(GetPlayerVisibleDynamicCP(playerid) == ChecksDominio[i])
			{
				if(Player[playerid][Admin] >= 1 || Player[playerid][Cargo] >= 4 || Player[playerid][Vip] > 0 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][PMRJ] >= 4 || Player[playerid][PCRJ] >= 4)
				{
					if(ContagemDominio[i] != 0) return 1;
					if((strcmp(GZDono[i], "{FF0000}CMD", true) == 0) && Player[playerid][Faccoes] == 1||
					(strcmp(GZDono[i], "{FF0000}CMD", true) == 0) && Player[playerid][Faccoes] == 2 ||
					(strcmp(GZDono[i], "{FF0000}CMD", true) == 0) && Player[playerid][Faccoes] == 3 ||
					(strcmp(GZDono[i], "{0000FF}LLL", true) == 0) && Player[playerid][Faccoes] == 4 ||
					(strcmp(GZDono[i], "{0000FF}LLL", true) == 0) && Player[playerid][Faccoes] == 5 ||
					(strcmp(GZDono[i], "{0000FF}LLL", true) == 0) && Player[playerid][Faccoes] == 6 ||
					(strcmp(GZDono[i], "{FFFF00}3CP", true) == 0) && Player[playerid][Faccoes] == 7 ||
					(strcmp(GZDono[i], "{FFFF00}3CP", true) == 0) && Player[playerid][Faccoes] == 8 ||
					(strcmp(GZDono[i], "{FFFF00}3CP", true) == 0) && Player[playerid][Faccoes] == 9 ||
					(strcmp(GZDono[i], "{FFFF00}MLC", true) == 0) && Player[playerid][Faccoes] == 10 ||
					(strcmp(GZDono[i], "{D2691E}MLC", true) == 0) && Player[playerid][Faccoes] == 11 ||
					(strcmp(GZDono[i], "{D2691E}MLC", true) == 0) && Player[playerid][Faccoes] == 12 ||
					(strcmp(GZDono[i], "{A9A9A9}PCRJ", true) == 0) && Player[playerid][PCRJ] >= 1 ||
					(strcmp(GZDono[i], "{3A5FCD}PMRJ", true) == 0) && Player[playerid][PMRJ] >= 1)
					return SCM(playerid, COR_ERRO, "[FALHA]: Sua organização já dominou essa favela.");
					SetPVarInt(playerid,"GZAtacada",i);
					Gz[playerid]=1;
					ContagemDominio[i] = SetTimerEx("Contagem",1000,1,"i",playerid);
					GangZoneFlashForAll(GangZonas[GetPVarInt(playerid,"GZAtacada")],GetPlayerColor(playerid));
					new cargotext[999];
					if(Player[playerid][Vip]>0) { cargotext = "{DEC107}Membro VIP{FFFFFF}";}
					if(Player[playerid][PCRJ] == 5) { cargotext = "{A9A9A9}Delegado da PCRJ{FFFFFF}"; }
					if(Player[playerid][PCRJ] == 4) { cargotext = "{A9A9A9}Investigador da PCRJ{FFFFFF}"; }
					if(Player[playerid][PMRJ] == 5) { cargotext = "{3A5FCD}Coronel da PMRJ{FFFFFF}"; }
					if(Player[playerid][PMRJ] == 4) { cargotext = "{3A5FCD}Capitão da PMRJ{FFFFFF}"; }
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 1){cargotext="{FF0000}Líder da CMD{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 2){cargotext="{FF0000}Líder da CMD{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 3){cargotext="{FF0000}Líder da CMD{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 4){cargotext="{0000FF}Líder da LLL{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 5){cargotext="{0000FF}Líder da LLL{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 6){cargotext="{0000FF}Líder da LLL{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 7){cargotext="{FFFF00}Líder da 3CP{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 8){cargotext="{FFFF00}Líder da 3CP{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 9){cargotext="{FFFF00}Líder da 3CP{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes]==10){cargotext="{D2691E}Líder da MLC{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes]==11){cargotext="{D2691E}Líder da MLC{FFFFFF}";}
					if(Player[playerid][Lider]==1 && Player[playerid][Faccoes]==12){cargotext="{D2691E}Líder da MLC{FFFFFF}";}
					
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==1){cargotext="{FF0000}Dono do Morro do Engenho{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==2){cargotext="{FF0000}Dono do Martins{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==3){cargotext="{FF0000}Dono do Antares{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==4){cargotext="{0000FF}Dono da Morro da Primavera{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]== 5){cargotext="{0000FF}Dono do Morro do Juramento{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==6){cargotext="{0000FF}Dono do Morro do Urubu{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==7){cargotext="{FFFF00}Dono da Vila Aliança{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==8){cargotext="{FFFF00}Dono do Muquiço{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==9){cargotext="{FFFF00}Dono do Sapo de Camará{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==11){cargotext="{D2691E}Dono do Cesarão{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==12){cargotext="{D2691E}Dono da Tres Pontes{FFFFFF}";}
					if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==10){cargotext="{D2691E}Dono do Bateau Mouche{FFFFFF}";}
					
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==1){cargotext="{FF0000}Frente do Morro do Engenho{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==2){cargotext="{FF0000}Frente do Martins{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==3){cargotext="{FF0000}Frente do Antares{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==4){cargotext="{0000FF}Frente do Morro da Primavera{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==5){cargotext="{0000FF}Frente do Morro do Juramento{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==6){cargotext="{0000FF}Frente do Morro do Urubu{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==7){cargotext="{FFFF00}Frente da Vila Aliança{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==8){cargotext="{FFFF00}Frente do Muquiço{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==9){cargotext="{FFFF00}Frente do Sapo de Camará{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==11){cargotext="{D2691E}Frente do Cesarão{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==12){cargotext="{D2691E}Frente da Tres Pontes{FFFFFF}";}
					if(Player[playerid][Cargo]==4 && Player[playerid][Faccoes]==10){cargotext="{D2691E}Frente do Bateau Mouche{FFFFFF}";}

					if(Player[playerid][Admin]==1){cargotext="{33AAFF}Administrador Teste{FFFFFF}";}
					if(Player[playerid][Admin]==2){cargotext="{33AAFF}Administrador Ajudante{FFFFFF}";}
					if(Player[playerid][Admin]==3){cargotext="{33AAFF}Administrador Fixo{FFFFFF}";}
					if(Player[playerid][Admin]==4){cargotext="{33AAFF}Sub Game Master{FFFFFF}";}
					if(Player[playerid][Admin]==5){cargotext="{33AAFF}Game Master{FFFFFF}";}
					SendFormattedMessageToAll(-1, "-GFInfo-: O %s '%s' está tomando a favela %s {FFFFFF}da %s.", cargotext,Nome(playerid), GangZone[i][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
					return 1;
				}
				else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para dominar essa favela!");
			}
		}
	}
	else SCM(playerid,COR_ERRO,"[FALHA]: Você precisa está dentro uma gangzone para dominar uma favela.");
	return 1;
}
CMD:resgatar(playerid,params[])
{
	new id, string[999];
	if(sscanf(params, "u", id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /resgatar [id]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Player[playerid][PMRJ]>=1 || Player[playerid][PCRJ]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para resgatar.");
	if(Presidio[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está preso e não pode resgatar ninguém.");
	if(Player[id][TempoPreso] <1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player não está preso.");
	if(PlayerToPoint(1.0, playerid, 272.6010,1967.0321,17.7391) || PlayerToPoint(1.0, playerid, 265.6680,1966.8204,17.7391) || PlayerToPoint(1.0, playerid, 260.7818,1944.8075,17.7325) || PlayerToPoint(1.0, playerid, 267.9536,1944.7185,17.7391))
	{
		if(PresoADM[id]==0)
		{
			if (ProxDetectorS(5.0, playerid, id))
			{
				Player[id][TempoPreso] = 0;
				SetPlayerWantedLevel(id, 0);
				Player[id][Procurado] =0;
				Presidio[id] = 0;
				Player[id][Resgatado]=1;
				SetPlayerInterior(id, 0);
				SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
				SendFormattedMessageToAll(COR_NEGATIVO,"-OpenServ-: %s foi resgatado do presídio de segurança máxima pelo player %s.",Nome(id),Nome(playerid));
		 	    format(string, sizeof(string),"~w~Resgatado pelo player ~r~%s.",Nome(playerid));
				GameTextForPlayer(id, string, 1000, 1);
				SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
				SalvarDados(id);
				if(PlayerToPoint(1.0, playerid, 272.6010,1967.0321,17.7391))
				{
					SetPlayerPos(id,272.5276,1968.8599,17.7391);
				}
				if(PlayerToPoint(1.0, playerid, 267.9536,1944.7185,17.7391))
				{
					SetPlayerPos(id,268.7645,1942.2720,17.7391);
				}
				if(PlayerToPoint(1.0, playerid, 260.7818,1944.8075,17.7325))
				{
					SetPlayerPos(id,261.1141,1941.9133,17.7325);
				}
				if(PlayerToPoint(1.0, playerid, 265.6680,1966.8204,17.7391))
				{
					SetPlayerPos(id,265.2554,1967.5797,17.7391);
				}
			} else SCM(playerid,COR_ERRO,"[FALHA]: Você deve está perto do player para soltá-lo.");
		}
	}
	else SCM(playerid,COR_ERRO,"[FALHA]: Você não está em um local de resgate.");
	return 1;
}
CMD:explodir(playerid,params[])
{
	if(PlayerToPoint(1.0, playerid, 286.7910,2052.5923,17.6406))
	{
	    if(Explodindo==true)return SCM(playerid,COR_ERRO,"[FALHA]: Este portão já foi explodido ou está sendo explodido.");
		GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
		GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
		SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no primeiro portão do presidio.", Nome(playerid));
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o primeiro portão explodirá em 20 segundos).");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
		BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
		bombtimer[playerid] = SetTimerEx("BombTimer2",20000,0, "d", playerid);
		BombArmed[playerid] = true;
		Explodindo=true;
	}
	if(PlayerToPoint(1.0, playerid, 266.7945,2052.7744,17.6406))
	{
	    if(Explodindo2==true)return SCM(playerid,COR_ERRO,"[FALHA]: Este portão já foi explodido ou está sendo explodido.");
		GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
		GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
		SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O %s plantou uma bomba no segundo portão do presidio.", Nome(playerid));
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua bomba foi plantada com sucesso (o segundo portão explodirá em 20 segundos).");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
		BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
		bombtimer[playerid] = SetTimerEx("BombTimer3",20000,0, "d", playerid);
		BombArmed[playerid] = true;
		Explodindo2=true;
	}
	return 1;
}
CMD:cityadmin(playerid)
{
	if(Player[playerid][Admin] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não é tem permissão para usar este comando!");
	Player[playerid][CityAdmin] = true;
	SetPlayerPos(playerid, -838.1016,502.8534,1358.2864);
	SetPlayerFacingAngle(playerid, 267.3420);
	SetPlayerInterior(playerid, 1);
	SetPlayerVirtualWorld(playerid, 0);
	new string[128];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}foi para a cidade dos administradores.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 20);
	SCM(playerid, COR_PRINCIPAL, "[INFO] Para sair da cidade digite '/saircity'");
	return 1;
}

CMD:saircity(playerid)
{
	if(Player[playerid][Admin] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não é tem permissão para usar este comando!");
	if(Player[playerid][CityAdmin] == false) return SCM(playerid, COR_ERRO,"[FALHA]: Você não está na cidade dos administradores.");
	SpawnPlayer(playerid);
	SetPlayerInterior(playerid, 0);
	Player[playerid][CityAdmin] = false;
	new string[128];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}saiu da cidade dos administradores.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 20);
	return 1;
}
CMD:creditos(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	ShowPlayerDialog(playerid, DIALOG_CREDITOS, DIALOG_STYLE_LIST, "{ffffff}Créditos - {0000EE}GTA Facções", "{ffffff}Fundadores - Ferb & Jones\nScripter: Ferb e Marola\nMapa - Marola, Geovani, Imbel e Ferb\n", "Fechar", "");
	return 1;
}
CMD:comandoslider(playerid)
{
	if(Player[playerid][Lider]<1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	ComandosLider(playerid);
	return 1;
}
CMD:comandosrcon(playerid)
{
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	ComandosRcon(playerid);
	return 1;
}
CMD:gps(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	ShowPlayerDialog(playerid, DIALOG_GPS , DIALOG_STYLE_LIST, "{ffffff}Escolha a Localidade","Los Santos\nLas Venturas\nSan Fierro\nFavelas\nDesligar GPS","Ok", "Cancelar");
	return 1;
}
CMD:bafometro(playerid,params[])
{
 	new id;
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /bafometro [id]");
	if(!(IsPlayerConnected(id))) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	if(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1)
	{
		if (ProxDetectorS(5.0, playerid, id))
		{
			new string[110];
			format(string, sizeof(string), "[ ! ] -{ffffff} %s efetuou o teste do bafometro no player %s.", Nome(playerid), Nome(id));
			MensagemLocal(id, COR_ROXO, string, 60);
			if(Player[id][Bafo]>=1)
			{
			    SendFormattedMessage(playerid, COR_ERRO,"[INFO]: O player %s está alcoolizado ! [/apreender]",Nome(id));
			}
			else
			{
			    SendFormattedMessage(playerid, COR_VERDE,"[INFO]: O player %s não está alcoolizado, Libere-o!",Nome(id));
			}
		}
		else SCM(playerid, COR_ERRO, "[FALHA]: Esse player está muito distante de você!");

	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:x9(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	ShowPlayerDialog(playerid, DIALOG_X9, DIALOG_STYLE_INPUT,"X9","Digite o id do meliante:","Pronto","Cancelar");
	return 1;
}
CMD:infofavelas(playerid)
{
	new cargotext1[40],cargotext2[40],cargotext3[40],cargotext4[40],cargotext5[40],cargotext6[40],cargotext7[40],cargotext8[40],cargotext9[40],cargotext10[40],cargotext11[40],cargotext12[40], dialogrande[500],string[500];
	if(Boca12==true) { cargotext12 = "{00CD00}Boca Aberta"; }
	if(Boca12==false) { cargotext12 = "{FF0000}Boca Fechada"; }
 	if(Boca11==true) { cargotext11 = "{00CD00}Depósito Aberto"; }
	if(Boca11==false) { cargotext11 = "{FF0000}Depósito Fechado"; }
 	if(Boca10==true) { cargotext10 = "{00CD00}Depósito Aberto"; }
	if(Boca10==false) { cargotext10 = "{FF0000}Depósito Fechado"; }
 	if(Boca9==true) { cargotext9 = "{00CD00}Boca Aberta"; }
	if(Boca9==false) { cargotext9 = "{FF0000}Boca Fechada"; }
 	if(Boca8==true) { cargotext8 = "{00CD00}Boca Aberta"; }
	if(Boca8==false) { cargotext8 = "{FF0000}Boca Fechada"; }
 	if(Boca7==true) { cargotext7 = "{00CD00}Depósito Aberto"; }
	if(Boca7==false) { cargotext7 = "{FF0000}Depósito Fechado"; }
 	if(Boca6==true) { cargotext6 = "{00CD00}Boca Aberta"; }
	if(Boca6==false) { cargotext6 = "{FF0000}Boca Fechada"; }
	if(Boca5==true) { cargotext5 = "{00CD00}Boca Aberta"; }
	if(Boca5==false) { cargotext5 = "{FF0000}Boca Fechada"; }
	if(Boca4==true) { cargotext4 = "{00CD00}Boca Aberta"; }
	if(Boca4==false) { cargotext4 = "{FF0000}Boca Fechada"; }
	if(Boca3==true) { cargotext3 = "{00CD00}Boca Aberta"; }
	if(Boca3==false) { cargotext3 = "{FF0000}Boca Fechada"; }
	if(Boca2==true) { cargotext2 = "{00CD00}Boca Aberta"; }
	if(Boca2==false) { cargotext2 = "{FF0000}Boca Fechada"; }
	if(Boca1==true) { cargotext1 = "{00CD00}Boca Aberta"; }
	if(Boca1==false) { cargotext1 = "{FF0000}Boca Fechada"; }
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	format(string, sizeof(string),"{FF0000}CMD\n{ffffff}Engenho - Fuzis: {ADFF2F}%d - %s\n{ffffff}Martins - Fuzis: {ADFF2F}%d - %s\n{ffffff}Antares - Fuzis: {ADFF2F}%d - %s\n",DOF2_GetInt(CONFIG, "M4"),cargotext1,DOF2_GetInt(CONFIG, "M42"),cargotext2,DOF2_GetInt(CONFIG, "M43"),cargotext9); strcat(dialogrande, string);
	format(string, sizeof(string),"{0000FF}LLL\n{ffffff}Primavera - Fuzis: {ADFF2F}%d - %s\n{ffffff}Urubu - Fuzis: {ADFF2F}%d - %s\n{ffffff}Juramento - Fuzis: {ADFF2F}%d - %s\n", DOF2_GetInt(CONFIG, "M44"),cargotext3,DOF2_GetInt(CONFIG, "M46"),cargotext4,DOF2_GetInt(CONFIG, "M45"),cargotext8); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFF00}3CP\n{ffffff}Muquiço - Fuzis: {ADFF2F}%d - %s\n{ffffff}Sapo de Camará - Fuzis: {ADFF2F}%d - %s\n{ffffff}Vila Aliança - Fuzis: {ADFF2F}%d - %s\n", DOF2_GetInt(CONFIG, "M47"),cargotext5,DOF2_GetInt(CONFIG, "M48"),cargotext12,DOF2_GetInt(CONFIG, "M49"),cargotext6); strcat(dialogrande, string);
    format(string, sizeof(string),"{D2691E}MLC\n{ffffff}Cesarão - Fuzis: {ADFF2F}%d - %s\n{ffffff}3 Pontes - Fuzis: {ADFF2F}%d - %s\n{ffffff}Bateau Mouche - Fuzis: {ADFF2F}%d - %s\n", DOF2_GetInt(CONFIG, "M50"),cargotext7,DOF2_GetInt(CONFIG, "M51"),cargotext11,DOF2_GetInt(CONFIG, "M52"),cargotext10); strcat(dialogrande, string);
	ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "{ffffff}Informações das Favelas", dialogrande, "Fechar", "");
	return 1;
}
CMD:config(playerid)
{
	new string[140], s[100], string2[100], s2[100], string3[100], s3[100], string4[100], s4[100];
	// Trazer
	if(Player[playerid][BlockTR] == false)
	{
		format(s, sizeof(s), "{00FF00}(Desbloqueado)");
		strcat(string, s, sizeof(string));
	}
	if(Player[playerid][BlockTR] == true)
	{
		format(s, sizeof(s), "{FF0000}(Bloqueado)");
		strcat(string, s, sizeof(string));
	}
	// IR
	if(Player[playerid][BlockIR] == false)
	{
		format(s2, sizeof(s2), "{00FF00}(Desbloqueado)");
		strcat(string2, s2, sizeof(string2));
	}
	if(Player[playerid][BlockIR] == true)
	{
		format(s2, sizeof(s2), "{FF0000}(Bloqueado)");
		strcat(string2, s2, sizeof(string2));
	}
	// PM
	if(Player[playerid][BlockPM] == false)
	{
		format(s3, sizeof(s3), "{00FF00}(Desbloqueada)");
		strcat(string3, s3, sizeof(string3));
	}
	if(Player[playerid][BlockPM] == true)
	{
		format(s3, sizeof(s3), "{FF0000}(Bloqueada)");
		strcat(string3, s3, sizeof(string3));
	}
	if(Player[playerid][BlockOlhar] == false)
	{
		format(s4, sizeof(s4), "{00FF00}(Desbloqueado)");
		strcat(string4, s4, sizeof(string4));
	}
	if(Player[playerid][BlockOlhar] == true)
	{
		format(s4, sizeof(s4), "{FF0000}(Bloqueado)");
		strcat(string4, s4, sizeof(string4));
	}
	if(Player[playerid][Admin] >= 1)
	{
		format(string, sizeof(string), "Trazer %s\nIr %s\nMensagem Privada %s\nOlhar %s", string, string2, string3, string4);
		ShowPlayerDialog(playerid, DIALOG_CONFIG2, DIALOG_STYLE_LIST, "Configurações", string, "Selecionar", "Fechar");
	}
	else if(Player[playerid][Vip] >= 1 || Player[playerid][Cargo] == 3 || Player[playerid][Cargo] == 3 || Player[playerid][Lider] == 1 || Player[playerid][Dono] == 1)
	{
		format(string, sizeof(string), "Trazer %s\nIr %s\nMensagem Privada %s", string, string2, string3);
		ShowPlayerDialog(playerid, DIALOG_CONFIG, DIALOG_STYLE_LIST, "Configurações", string, "Selecionar", "Fechar");
	}
	else {SendClientMessage(playerid, COR_ERRO, "[FALHA]: Você não tem permissão.");}
	return 1;
}
CMD:comandos(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	Comandos(playerid);
	return 1;
}
CMD:minhaconta(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_CONTA, DIALOG_STYLE_LIST, "Minha Conta", "Alterar Nick\nAlterar Senha\nMinhas Informações", "Selecionar", "Cancelar");
	return 1;
}
CMD:mudarnick(playerid)
{
    if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	GameTextForPlayer(playerid, "~w~digite: ~r~/menu", 2000, 1);
    return 1;
}
CMD:mudarsenha(playerid)
{
    if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
    GameTextForPlayer(playerid, "~w~digite: ~r~/menu", 2000, 1);
    return 1;
}
CMD:menu(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
	TextDrawShowForPlayer(playerid, Menu[1]);
	TextDrawShowForPlayer(playerid, Menu[2]);
	TextDrawShowForPlayer(playerid, Menu[3]);
	TextDrawShowForPlayer(playerid, Menu[4]);
	TextDrawShowForPlayer(playerid, Menu[5]);
	TextDrawShowForPlayer(playerid, Menu[6]);
	TextDrawShowForPlayer(playerid, Menu[7]);
	TextDrawShowForPlayer(playerid, Menu[8]);
	TextDrawShowForPlayer(playerid, Menu[9]);
	TextDrawShowForPlayer(playerid, Menu[10]);
	TextDrawShowForPlayer(playerid, Menu[11]);
	TextDrawShowForPlayer(playerid, Menu[12]);
	TextDrawShowForPlayer(playerid, Menu[13]);
	TextDrawShowForPlayer(playerid, Menu[14]);
	SelectTextDraw(playerid, 0x4682B4FF);
	return 1;
}
CMD:limparficha(playerid,params[])
{
    new id,motivo[500],string[500];
    if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado!");
    if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(sscanf(params,"us",id,motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /limparficha [id] [motivo]");
	Player[id][Procurado]=0;
	SetPlayerWantedLevel(id, 0);
	SalvarDados(id);
	format(string, sizeof(string), "{0000ff}BTL: {ffffff}%s{0000ff} foi inocentado de todas as acusações, pelo policial %s. | Motivo: %s", Nome(id),Nome(playerid),motivo);
	SendMessageToCops(-1, string);
	SendFormattedMessage(id,COR_NEGATIVO,"-BTLInfo-: Você foi inocentado de todas as acusações, pelo policial %s. | Motivo: %s",Nome(playerid), motivo);
	return 1;
}
CMD:logadosrcon(playerid)  //
{
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	SCM(playerid, COR_ERRO, "** Jogadores logados na RCON:");
	new text[70];
	for(new i = 0; i <= HighestID; i ++)
	{
		if(IsPlayerConnected(i) && IsPlayerAdmin(i))
		format(text, sizeof(text),"%s- %s (ID: %d) ", text, Nome(i), i);
	}
 	SCM(playerid, COR_BRANCO, text);
	return 1;
}
CMD:reports(playerid)
{
	if(Player[playerid][Admin] >= 1)
	{
		SCM(playerid, 0xADFF2FFF,"** Últimos reports efetuados:");
		new string[200], acount;
		for(new i = 0; i < sizeof(Reports); i ++)
		{
			if(IsPlayerConnected(Reports[i]))
			{
			    if(Player[i][pRpt] == 0)
			    {
					format(string, sizeof(string),"** %d. %s (id: %d) | Motivo:%s", acount, Nome(Reports[i]), Reports[i], ReportsReasons[i]);
					SCM(playerid, COR_BRANCO, string);
					acount ++;
				}
			}
		}
		if(acount == 0)
		{
			SCM(playerid, COR_BRANCO, "Nenhum report encontrado.");
		}
	}
	return 1;
}
CMD:reportar(playerid, params[])
{
	new id,motivo[126];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando!");
    if(sscanf(params,"us",id,motivo)) return SCM(playerid, COR_USOCORRETO,"Uso correto: /reportar [id] [motivo]");
    if(!IsPlayerConnected(id)) return SCM(playerid,COR_ERRO,"[FALHA]: Player não conectado.");
	if(Player[playerid][DelayReport] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Por favor, sem floodar o '/reportar'.");
    SCM(playerid, COR_PRINCIPAL,"[INFO]: Obrigado por reportar, aguarde um administrador irá atender sua solicitação.");
    format(Str, sizeof(Str),"{FF0000}-GFReportSystem-: %s reportou %s[ID:%d] | motivo: %s",Nome(playerid),Nome(id),id,motivo);
    MensagemAdmin(Str);
    new Index;
    motivo = strtok(params,Index);
    Player[playerid][LastReport] = id;
	Reports[rep_idx] = id;
	format(ReportsReasons[rep_idx],24, params[strlen(motivo)]);
	Player[playerid][DelayReport] = true;
 	SetTimerEx("TempoReport", 5000, 0, "i", playerid);
	rep_idx ++;
	if(rep_idx >= sizeof(Reports))
	rep_idx = 0;
    return true;
}
CMD:id(playerid, params[])  //
{
	new tmp[256], string[256];
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params, "s", tmp)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /id [parte do nick]");
	format(string,sizeof(string),"** Procurando por: \"%s\": ",tmp);
	SCM(playerid,0xADFF2FFF,string);
	new found=0;
	for(new i = 0; i <= HighestID; i ++)
	{
		if(Logado{playerid} == true)
		{
			if(IsPlayerConnected(i))
			{
				new foundname[MAX_PLAYER_NAME+1];
				GetPlayerName(i, foundname, MAX_PLAYER_NAME+1);
				new namelen = strlen(foundname);
				new bool:searched=false;
				for(new pos=0; pos <= namelen; pos++)
				{
					if(searched != true)
					{
						if(strfind(foundname,tmp,true) == pos)
						{
							found++;
							if(GetPlayerScore(i) < 2)
							{
								format(string,sizeof(string),"%d. %s (ID %d) {f50000}(Level %d)",found,foundname,i, GetPlayerScore(i));
								SCM(playerid, -1 ,string);
							}
							else
							{
								format(string,sizeof(string),"%d. %s (ID %d) {26cf0a}(Level %d)",found,foundname,i, GetPlayerScore(i));
								SCM(playerid, -1 ,string);
							}

							searched = true;
						}
					}
				}
			}
		}
	}
	return 1;
}
CMD:lerpm(playerid)
{
    if(Player[playerid][Admin] < 4)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Player[playerid][LerPM] == false)
	{
		Player[playerid][LerPM] = true;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Você ativou o sistema de Lêr PM's.");
	}
	else
	{
		Player[playerid][LerPM] = false;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Você desativou o sistema de Lêr PM's.");
	}
	return 1;
}
CMD:pm(playerid, params[])
{
	new str[999], str2[999], id, Name1[MAX_PLAYER_NAME], Name2[MAX_PLAYER_NAME];
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    if(Logado{id}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Este id não está logado!");
	if(sscanf(params, "us[999]", id, str2)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /pm [id] [menssagem]");
	if(!IsPlayerConnected(id))return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");

	if(Player[id][BlockPM] == true)
	{
	    format(str, sizeof(str), "[FALHA]: PM deste player está bloqueada, motivo: %s.", Mtv);
		SCM(playerid, COR_ERRO, str);
		return 1;
	}

	if(playerid == id) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode mandar menssagem para sí mesmo!");
	{
		GetPlayerName(playerid, Name1, sizeof(Name1));
		GetPlayerName(id, Name2, sizeof(Name2));
		format(str, sizeof(str), "** Enviado para %s(ID %d): %s", Name2, id, str2);
		SCM(playerid, 0xFFFF00FF, str);
		format(str, sizeof(str), "** Recebido de %s(ID %d): %s", Name1, playerid, str2);
		SCM(id, 0xFFFF00FF, str);
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(Player[i][LerPM] == true)
			{
				new string[156];
				format(string, sizeof(string), "-GFInfo-** %s envio para %s: %s", Name1, Name2, str2);
				SCM(i, 0xFF80808B, string);
			}
		}
	}
	return 1;
}
CMD:pml(playerid, params[])
{
    if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	new str[999], str2[999], id, Name1[MAX_PLAYER_NAME], Name2[MAX_PLAYER_NAME];
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");

	if(sscanf(params, "us[999]", id, str2)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /pm [id] [menssagem]");
	if(Player[id][BlockPM] == true)
	{
	    format(str, sizeof(str), "[FALHA]: PM deste player está bloqueada, motivo: %s.", Mtv);
		SCM(playerid, COR_ERRO, str);
		return 1;
	}
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(playerid == id) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode mandar menssagem para sí mesmo!");
	{
		GetPlayerName(playerid, Name1, sizeof(Name1));
		GetPlayerName(id, Name2, sizeof(Name2));
		format(str, sizeof(str), "** Enviado para %s(ID %d): %s", Name2, id, str2);
		SCM(playerid, 0xFFFF00FF, str);
		format(str, sizeof(str), "** Recebido de %s(ID %d): %s", Name1, playerid, str2);
		SCM(id, 0xFFFF00FF, str);
	}
	return 1;
}
CMD:virar(playerid)
{
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetCameraBehindPlayer(playerid);
			GetPlayerPos(playerid, X, Y, Z);
			SetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
			new string[70];
			format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}digitou /virar.", Nome(playerid));
			MensagemLocal(playerid, COR_ROXO, string, 20);
		}
		else
		{
			SCM(playerid, COR_ERRO, "[FALHA]: Você tem que estar em um veículo!");
		}
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não está em um veículo ou não está dirigindo ele.");
	return 1;
}
CMD:comandosvip(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][Vip]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	new dialogrande[572];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{7A67EE} Comandos VIP\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/v - {1E48BD}Chat VIP;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/tunar - {1E48BD}Tuna seu veículo [Rodas/Blinda/Pinta/Suspenção/Nitro];\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/jetpack - {1E48BD}Cria um Jetpack;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/veh - {1E48BD}Cria um veículo;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/dcm - {1E48BD}Deleta um veículo;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/asay - {1E48BD}Envia uma mensagem para todo servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/equipar - {1E48BD}Com granadas e todas as armas do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/carrodesom - {1E48BD}Para criar um carro de som.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/botarmusica - {1E48BD}Para botar musica no carro de som.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}/dominar - {1E48BD}Para dominar uma favela.\n");
	ShowPlayerDialog(playerid, 6627, DIALOG_STYLE_MSGBOX, "{0000EE}¤ {FFFFFF}GTA Facções - Comando Vip", dialogrande, "Sair", #);
	return 1;
}
CMD:vantagensvip(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	new dialogrande[1024];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/v - Chat VIP;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/jetpack - Cria um Jetpack;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/veh - Cria um veículo;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/dcm - Deleta um veículo;\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/asay - Envia uma mensagem para todo servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/equipar - Com granadas e todas as armas do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/tunar - Tuna seu veículo [Rodas/Blinda/Pinta/Suspenção/Nitro];\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/dominar - Para dominar uma favela, com no mínimo 3 players de sua facção.\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/carrodesom - para criar um carro de som.\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}/botarmusica - para botar musica no carro de som.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}Expêriencia em dobro.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}Carros exclusivos para players vip.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}Players vip, nascem já com colete.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}Mais chance de ser escolhido para cargos administrativos.:\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} {FFFFFF}Para comprar VIP, acesse nosso fórum, www.equipegf.com/forum\n");
	ShowPlayerDialog(playerid,667, DIALOG_STYLE_MSGBOX, "{1E48BD}¤ {FFFFFF}Vantagens VIP - GTA Facções", dialogrande, "Sair", #);
	return 1;
}
CMD:minhafavela(playerid)
{
    if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    if(Player[playerid][Faccoes] >= 13)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é de uma favela.");
	new cargotext[64], cont;
	if(Player[playerid][Faccoes] == 12) { cargotext = "Tres Pontes"; }
	if(Player[playerid][Faccoes] == 10) { cargotext = "Bateau Mouche"; }
	if(Player[playerid][Faccoes] == 11) { cargotext = "Cesarão"; }
	if(Player[playerid][Faccoes] == 9) { cargotext = "Sapo de Camará"; }
	if(Player[playerid][Faccoes] == 8) { cargotext = "Muquiço"; }
	if(Player[playerid][Faccoes] == 7) { cargotext = "Vila Aliança"; }
	if(Player[playerid][Faccoes] == 6) { cargotext = "Morro do Urubu"; }
	if(Player[playerid][Faccoes] == 5) { cargotext = "Morro do Juramento"; }
	if(Player[playerid][Faccoes] == 4) { cargotext = "Morro da Primavera"; }
	if(Player[playerid][Faccoes] == 3) { cargotext = "Antares"; }
	if(Player[playerid][Faccoes] == 2) { cargotext = "Martins"; }
	if(Player[playerid][Faccoes] == 1) { cargotext = "Morro do Engenho"; }
	SendFormattedMessage(playerid, 0xADFF2FFF, "** %s", cargotext);
    for(new i = 0; i <= HighestID; i ++)
	{
        if(Player[playerid][Faccoes] == Player[i][Faccoes])
		{
			if(GetPlayerScore(i) < 2) SendFormattedMessage(playerid, COR_BRANCO, "%s (ID %d) {f50000}(Level %d)", Nome(i), i, GetPlayerScore(i));
			else SendFormattedMessage(playerid, COR_BRANCO, "%s (ID %d) {26cf0a}(Level %d)", Nome(i), i, GetPlayerScore(i));
            cont++;
        }
	}
	if(cont == 0)
	{
	    SCM(playerid, COR_ERRO, "** Não tem ninguém online.");
	}
	else SendFormattedMessage(playerid, 0xADFF2FFF, "Resultado: %d Membro(s) Online.", cont);
	return 1;
}
CMD:meuid(playerid)
{
    if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	SendFormattedMessage(playerid, 0xADFF2FFF, "** Seu ID é: %d", playerid);
	return 1;
}
CMD:pular(playerid)
{
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][Lutador] > 0) return SCM(playerid,COR_ERRO, "[FALHA]: Você está no meio de uma luta!");
	new Float:px, Float:py, Float:pz;
	GetPlayerPos(playerid, px, py, pz);
	SetPlayerPos(playerid, px, py, pz+0.7);
	return 1;
}
CMD:info(playerid) 
{
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    Status(playerid);
	return 1;
}
Status(playerid)
{
	new string[999], dialogrande[999], orgtext[20], orgtext1[20], orgtext2[20], orgtext3[20], orgtext4[20], cargotext[100];
	/* */
    if(Player[playerid][Vip] == 0) { orgtext = "Normal"; }
    if(Player[playerid][Vip] >= 1) { orgtext = "VIP"; }
    /* */
   	if(Player[playerid][MotoTaxi] == 1) { orgtext1 = "MotoTaxi"; }
 	if(Player[playerid][MotoTaxi] == 0) { orgtext1 = "Desempregado"; }
 	/* */
   	if(Player[playerid][PMRJ] >= 1 || Player[playerid][PCRJ] >= 1) { orgtext2 = "Sim"; }
 	if(Player[playerid][PMRJ] == 0 && Player[playerid][PCRJ] == 0) { orgtext2 = "Não"; }
 	/* */
   	if(Player[playerid][Reporter] >= 1) { orgtext3 = "Sim"; }
 	if(Player[playerid][Reporter] == 0) { orgtext3 = "Não"; }
 	/* */
   	if(Player[playerid][pHelper] >= 1) { orgtext4 = "Sim"; }
 	if(Player[playerid][pHelper] == 0) { orgtext4 = "Não"; }
 	/* */
 	if(Player[playerid][PCRJ] == 5) { cargotext = "Delegado"; }
	if(Player[playerid][PCRJ] == 4) { cargotext = "Investigador"; }
	if(Player[playerid][PCRJ] == 3) { cargotext = "Inspetor"; }
	if(Player[playerid][PCRJ] == 2) { cargotext = "Escrivão"; }
	if(Player[playerid][PCRJ] == 1) { cargotext = "Agente"; }

	if(Player[playerid][PMRJ] == 5) { cargotext = "Líder"; }
	if(Player[playerid][PMRJ] == 4) { cargotext = "Capitão"; }
	if(Player[playerid][PMRJ] == 3) { cargotext = "Sargento"; }
	if(Player[playerid][PMRJ] == 2) { cargotext = "Soldado"; }
	if(Player[playerid][PMRJ] == 1) { cargotext = "Recruta"; }

	format(string, sizeof(string),"%s%s",dialogrande,"{FFD519} Informações da Conta\n\n"); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Nick: {ABABAB}%s\n", Nome(playerid)); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Tipo de Conta: {ABABAB}%s\n", orgtext); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Cash: {ABABAB}%d\n", Player[playerid][Cash]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Dinheiro: {ABABAB}%d\n", GetPlayerMoney(playerid)); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Emprego: {ABABAB}%s\n", orgtext1); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Policia: {ABABAB}%s\n", orgtext2); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Repórter: {ABABAB}%s\n", orgtext3); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Helper: {ABABAB}%s\n", orgtext4); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Matou: {ABABAB}%d\n", Player[playerid][Matou]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Morreu: {ABABAB}%d\n", Player[playerid][Morreu]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Maconha: {ABABAB}%d\n", Player[playerid][Maconha]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Cocaina: {ABABAB}%d\n", Player[playerid][Cocaina]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Fogos: {ABABAB}%d\n", Player[playerid][Fogos]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Logou: {ABABAB}%d\n", Player[playerid][Logou]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Passagens pela Policia: {ABABAB}%d\n\n", Player[playerid][Passagens]); strcat(dialogrande, string);
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFD519} Campeonato Ultimate Fight Championship\n\n");
	format(string, sizeof(string),"{FFFFFF}Cartel: {ABABAB}%d/%d\n", Player[playerid][CartelV],Player[playerid][CartelD]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Cinturões Ganhos: {ABABAB}%d\n", Player[playerid][Cinturao]); strcat(dialogrande, string);
	format(string, sizeof(string),"{FFFFFF}Cinturões Perdidos: {ABABAB}%d\n\n", Player[playerid][CinturaoPERD]); strcat(dialogrande, string);
	if(Player[playerid][PCRJ]>=1 || Player[playerid][PMRJ]>=1)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFD519} Informações BTL\n\n");
		format(string, sizeof(string),"{FFFFFF}Su's Efetuados: {ABABAB}%d\n", Player[playerid][sutotal]); strcat(dialogrande, string);
		format(string, sizeof(string),"{FFFFFF}Abatimentos: {ABABAB}%d\n", Player[playerid][suabatidos]); strcat(dialogrande, string);
		format(string, sizeof(string),"{FFFFFF}Cargo: {ABABAB}%s\n", cargotext); strcat(dialogrande, string);
	}
	ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Informações - {C798FA}GTA Facções", dialogrande, "Fechar", "");
	return 1;
}
CMD:kill(playerid)
{
	if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da Arena UFC.");
	if(!VerificarRival(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode usar este comando com alguém que não é de sua facção próximo.");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][InHospital] == true)return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode usar este comando agora!");
	GetPlayerPos(playerid, Player[playerid][LastPos][0], Player[playerid][LastPos][1], Player[playerid][LastPos][2]);
	SetTimerEx("AutoKill", 5000, false, "i", playerid);
	SCM(playerid, COR_PRINCIPAL,"[INFO]: Não se mova para que sua morte desejada seja um sucesso.");
	return 1;
}
CMD:skin(playerid,params[])
{
	new skin;
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(sscanf(params,"d",skin)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /skin [id]");
	if(Player[playerid][PCRJ] >= 1||Player[playerid][PMRJ]>=1 && EmTrabalho[playerid] == 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está em trabalho e não pode tirar sua farda!");
	if(skin > 311) return SCM(playerid, COR_ERRO, "[FALHA]: máximo de número de skins do server é 311.");
	SetPlayerSkin(playerid,skin);
	SalvarDados(playerid);
	SendFormattedMessage(playerid, COR_PRINCIPAL, "[INFO]: Você mudou sua skin para %d.", skin);
	return 1;
}
CMD:setskin(playerid,params[])
{
	new skin, id;
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
    if(!(Player[playerid][Admin] >= 1)) return SCM(playerid,COR_ERRO, "[FALHA]: Você não é um administrador para usar este comando.");
	if(sscanf(params,"ud",id,skin)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setskin [id][id da skin]");
	if(skin > 22) return SCM(playerid,COR_ERRO, "[FALHA]: máximo de número de skins do server é 22.");
	SetPlayerSkin(id,skin);
	SendFormattedMessage(playerid, COR_PRINCIPAL, "[INFO]: Você mudou a skin do player %s para %d.", Nome(id), skin);
	SendFormattedMessage(id, COR_PRINCIPAL, "[INFO]: %s mudou sua skin para %d.", Nome(playerid), skin);
	return 1;
}
CMD:pcrjs(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Policiais Cívis online");
	new cargotext[64];
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][PCRJ] >= 1)
				{
					if(Player[i][PCRJ] == 5) { cargotext = "Delegado"; }
					if(Player[i][PCRJ] == 4) { cargotext = "Investigador"; }
					if(Player[i][PCRJ] == 3) { cargotext = "Inspetor"; }
					if(Player[i][PCRJ] == 2) { cargotext = "Escrivão"; }
					if(Player[i][PCRJ] == 1) { cargotext = "Agente"; }
					SendFormattedMessage(playerid, COR_BRANCO, "** %s: %s", cargotext, Nome(i));
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um policial cívil online no momento.");
	return 1;
}
CMD:pms(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Pms online");
	new cargotext[64];
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][PMRJ] >= 1)
				{
					if(Player[i][PMRJ] == 5) { cargotext = "Coronel"; }
					if(Player[i][PMRJ] == 4) { cargotext = "Capitão"; }
					if(Player[i][PMRJ] == 3) { cargotext = "Sargento"; }
					if(Player[i][PMRJ] == 2) { cargotext = "Soldado"; }
					if(Player[i][PMRJ] == 1) { cargotext = "Recruta"; }
					SendFormattedMessage(playerid, COR_BRANCO, "** PMRJ: %s | %s", Nome(i), cargotext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um pmrj online no momento.");
	return 1;
}
CMD:fogueteiros(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Fogueteiros online");
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
	   			new cargotext[40];
				if(Player[i][Faccoes] == 12) { cargotext = "Tres Pontes"; }
				if(Player[i][Faccoes] == 10) { cargotext = "Bateau Mouche"; }
                if(Player[i][Faccoes] == 11) { cargotext = "Cesarão"; }
				if(Player[i][Faccoes] == 9) { cargotext = "Sapo de Camará"; }
				if(Player[i][Faccoes] == 8) { cargotext = "Muquiço"; }
				if(Player[i][Faccoes] == 7) { cargotext = "Vila Aliança"; }
				if(Player[i][Faccoes] == 6) { cargotext = "Morro do Urubu"; }
				if(Player[i][Faccoes] == 5) { cargotext = "Morro do Juramento"; }
				if(Player[i][Faccoes] == 4) { cargotext = "Morro da Primavera"; }
				if(Player[i][Faccoes] == 3) { cargotext = "Antares"; }
				if(Player[i][Faccoes] == 2) { cargotext = "Martins"; }
				if(Player[i][Faccoes] == 1) { cargotext = "Morro do Engenho"; }
				if(Player[i][Cargo] == 1)
				{
					SendFormattedMessage(playerid, COR_BRANCO, "** Fogueteiro: %s | %s", Nome(i),cargotext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um fogueteiro online no momento.");
	return 1;
}
CMD:vapores(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Vapores online");
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
	   			new cargotext[40];
				if(Player[i][Faccoes] == 12) { cargotext = "Tres Pontes"; }
				if(Player[i][Faccoes] == 10) { cargotext = "Bateau Mouche"; }
				if(Player[i][Faccoes] == 11) { cargotext = "Cesarão"; }
				if(Player[i][Faccoes] == 9) { cargotext = "Sapo de Camará"; }
				if(Player[i][Faccoes] == 8) { cargotext = "Muquiço"; }
				if(Player[i][Faccoes] == 7) { cargotext = "Vila Aliança"; }
				if(Player[i][Faccoes] == 6) { cargotext = "Morro do Urubu"; }
				if(Player[i][Faccoes] == 5) { cargotext = "Morro do Juramento"; }
				if(Player[i][Faccoes] == 4) { cargotext = "Morro da Primavera"; }
				if(Player[i][Faccoes] == 3) { cargotext = "Antares"; }
				if(Player[i][Faccoes] == 2) { cargotext = "Martins"; }
				if(Player[i][Faccoes] == 1) { cargotext = "Morro do Engenho"; }
				if(Player[i][Cargo] == 2)
				{
					SendFormattedMessage(playerid, COR_BRANCO, "** Vapor: %s | %s", Nome(i),cargotext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um vapor online no momento.");
	return 1;
}
CMD:gerentes(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Gerentes online");
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
	   			new cargotext[40];
				if(Player[i][Faccoes] == 12) { cargotext = "Tres Pontes"; }
				if(Player[i][Faccoes] == 10) { cargotext = "Bateau Mouche"; }
				if(Player[i][Faccoes] == 11) { cargotext = "Cesarão"; }
				if(Player[i][Faccoes] == 9) { cargotext = "Sapo de Camará"; }
				if(Player[i][Faccoes] == 8) { cargotext = "Muquiço"; }
				if(Player[i][Faccoes] == 7) { cargotext = "Vila Aliança"; }
				if(Player[i][Faccoes] == 6) { cargotext = "Morro do Urubu"; }
				if(Player[i][Faccoes] == 5) { cargotext = "Morro do Juramento"; }
				if(Player[i][Faccoes] == 4) { cargotext = "Morro da Primavera"; }
				if(Player[i][Faccoes] == 3) { cargotext = "Antares"; }
				if(Player[i][Faccoes] == 2) { cargotext = "Martins"; }
				if(Player[i][Faccoes] == 1) { cargotext = "Morro do Engenho"; }
				if(Player[i][Cargo] == 3)
				{
					SendFormattedMessage(playerid, COR_BRANCO, "** Gerente: %s | %s", Nome(i),cargotext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um gerente online no momento.");
	return 1;
}
CMD:frentes(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Frentes online");
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
	   			new cargotext[40];
				if(Player[i][Faccoes] == 12) { cargotext = "Tres Pontes"; }
                if(Player[i][Faccoes] == 10) { cargotext = "Bateau Mouche"; }
				if(Player[i][Faccoes] == 11) { cargotext = "Cesarão"; }
				if(Player[i][Faccoes] == 9) { cargotext = "Sapo de Camará"; }
				if(Player[i][Faccoes] == 8) { cargotext = "Muquiço"; }
                if(Player[i][Faccoes] == 7) { cargotext = "Vila Aliança"; }
				if(Player[i][Faccoes] == 6) { cargotext = "Morro do Urubu"; }
                if(Player[i][Faccoes] == 5) { cargotext = "Morro do Juramento"; }
				if(Player[i][Faccoes] == 4) { cargotext = "Morro da Primavera"; }
                if(Player[i][Faccoes] == 3) { cargotext = "Antares"; }
				if(Player[i][Faccoes] == 2) { cargotext = "Martins"; }
				if(Player[i][Faccoes] == 1) { cargotext = "Morro do Engenho"; }
				if(Player[i][Cargo] == 4)
				{
					SendFormattedMessage(playerid, COR_BRANCO, "** Frente: %s | %s", Nome(i),cargotext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um frente online no momento.");
	return 1;
}
CMD:vips(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Vips online");
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][Vip] >= 1)
				{
					SendFormattedMessage(playerid, COR_BRANCO, "** Vip: %s | Tempo: [%s]", Nome(i),ConvertToDays(Player[i][Vip]));
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um player vip online no momento.");
	return 1;
}
CMD:admins(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os administradores online");
	new AdmLevel[64], count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
			    if(Player[i][Admin] >= 1)
			    {
					if(Player[i][Admin] == 5) { AdmLevel = "Game Master"; }
					if(Player[i][Admin] == 4) { AdmLevel = "Sub Game Master"; }
					if(Player[i][Admin] == 3) { AdmLevel = "Administrador Fixo"; }
					if(Player[i][Admin] == 2) { AdmLevel = "Administrador Ajudante"; }
					if(Player[i][Admin] == 1) { AdmLevel = "Administrador Temporário"; }

					if(Player[i][Admin] == 4 || Player[i][Admin] == 5)
					{
						SendFormattedMessage(playerid, COR_BRANCO, "Admin: %s [%s]", Nome(i), AdmLevel);
						count++;
					}
					else SendFormattedMessage(playerid, COR_BRANCO, "Admin: %s [%s] [Reports Lidos: %d]", Nome(i), AdmLevel, Player[i][pRpt]);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um administrador online no momento.");
	return 1;
}
CMD:setdj(playerid,params[])
{
	new id, level,string[256];
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_ERRO, "Uso: /setdj [ID] [Level]");
	if(level > 3) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level é 3.");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	format(string,sizeof(string),"AdmCMD: O Administrador %s te setou de DJ %d.",Nome(playerid),level);
	SCM(id,COR_PRINCIPAL,string);
	format(string,sizeof(string),"AdmCMD: Você setou %s de DJ %d.",Nome(id),level);
	SCM(playerid,COR_PRINCIPAL,string);
	Player[id][DJ]=level;
	SalvarDados(id);
	return 1;
}

CMD:setlutador(playerid,params[])
{
	new id, numero,string[256];
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(sscanf(params,"ud",id, numero)) return SCM(playerid, COR_USOCORRETO, "Uso: /setlutador [id] [numero]");
	if(numero > 2) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Lutador é 2.");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	format(string,sizeof(string),"AdmCMD: O Administrador %s te setou de Lutador %d.",Nome(playerid), numero);
	SCM(id,COR_PRINCIPAL,string);
	format(string,sizeof(string),"AdmCMD: Você setou %s de Lutador %d.",Nome(id), numero);
	SCM(playerid,COR_PRINCIPAL,string);
	format(string, sizeof(string), "-UFC-: O Administrador '%s' setou '%s' de Lutador número '%d'.", Nome(playerid), Nome(id), numero);
	SendClientMessageToAll(COR_AMARELO, string);
	Player[id][Lutador]=numero;
	return 1;
}
CMD:eventocinturao(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	SendFormattedMessageToAll(COR_AMARELO,"-UFC-: O Administrador '%s' comunica que hoje tem evento valendo Cinturão.", Nome(playerid));
	CinturaoEVENTO[1] = true;
	return 1;
}
CMD:fechareventocinturao(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(CinturaoEVENTO[1] == false) return SCM(playerid, COR_ERRO, "[FALHA]: O Evento valendo cinturão já esta fechado.");
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Você fechou evento valendo cinturão.");
	CinturaoEVENTO[1] = false;
	return 1;
}
CMD:abrirufc(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(UFC[1] == true) return SCM(playerid, COR_ERRO, "[FALHA]: O evento UFC ja está aberto.");
	UFC[1] = true;
	SendFormattedMessageToAll(COR_AMARELO,"-UFC-: O Administrador '%s' abriu o evento Ultimate Fight Championship.", Nome(playerid));
	SetPlayerPos(playerid, 1099.5134,1601.2949,12.5469);
	SetPlayerInterior(playerid, 0);
	return 1;
}
CMD:fecharufc(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(UFC[1] == false) return SCM(playerid, COR_ERRO, "[FALHA]: O evento UFC ja está fechado.");
	SendFormattedMessageToAll(COR_AMARELO,"-UFC-: O Administrador '%s' fechou o evento Ultimate Fight Championship.", Nome(playerid));
	UFC[1] = false;
	SetTimerEx("@FecharUFC", 500, 0, "i", playerid);
	return 1;
}
CMD:mudarmorro(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	GameTextForPlayer(playerid, "~w~digite: ~r~/menu", 2000, 1);
	return 1;
}
CMD:reparar(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(LimiteReparar[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você só pode usar o /reparar de 120 em 120 segundos.");
	if(GetPlayerMoney(playerid) >= 500)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			RepairVehicle(GetPlayerVehicleID(playerid));
			SCM(playerid, COR_PRINCIPAL, "[INFO]: Seu veículo foi reparado com sucesso.");
			GivePlayerMoney(playerid, -500);
			LimiteReparar[playerid] = 1;
			SetTimerEx("TempoReparar", 120000, false, "i", playerid);
		}
		else
		{
			SCM(playerid, COR_ERRO, "[FALHA]: Você não tem um carro para utilizar este comando.");
			return 1;
		}
	}
	else
	{
		SCM(playerid, COR_ERRO, "[FALHA]: Você não tem dinheiro suficiente, para reparar o carro.");
		return 1;
	}
	return 1;
}
CMD:animlist(playerid)
{
	SCM(playerid,COR_ERRO,"-------------------------------------------[ANIMLIST]---------------------------------------------------");
	SCM(playerid,0xF9FCF7FF,"/bat - /aim - /lay - /chat - /strip - /dance - /hide - /crossarms - /fish - /smoke - /chairsit");
	SCM(playerid,0xF9FCF7FF,"/crack - /wave - /pee - /knife - /rap - /gro - /chant - /box - /cellin - /cellout - /vomit");
	SCM(playerid,0xF9FCF7FF,"/fall - fallback - /cop");
	SCM(playerid,COR_ERRO,"-------------------------------------------------------------------------------------------------------------");
    return 1;
}
/*===================[ANIMES]===================*/
CMD:aim(playerid,params[])
{
 	new style;
	if(sscanf(params,"d",style)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /aim [1/3]");
	if(style > 3) return SCM(playerid, COR_USOCORRETO, "Uso correto: /aim [1/3].");
	if (style == 1)
	{
		LoopingAnim(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1);
	}
	else if (style == 2)
	{
		LoopingAnim(playerid,"PED","Driveby_L",4.0,0,1,1,1,1);
	}
	else if (style == 3)
	{
		LoopingAnim(playerid,"PED","Driveby_R",4.0,0,1,1,1,1);
	}
	return 1;
}
// Bat stance
CMD:bat(playerid) {
	LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
	return 1;
}
// Boxing
CMD:box(playerid) {
	LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
	return 1;
}
// Gogogo
CMD:chant(playerid) {
	LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
	return 1;
}
// Cop stance
CMD:cop(playerid) {
	OnePlayAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
	return 1;
}
// Fight stance
CMD:fstance(playerid) {
	LoopingAnim(playerid,"FIGHT_D","FightD_IDLE",4.0,1,1,1,1,0);
	return 1;
}
CMD:pee(playerid) {
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	return 1;
}
// Knife animations
CMD:knife(playerid,params[])
{
	new style;
	if(sscanf(params,"d",style)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /knife [1/4]");
	if(style > 4) return SCM(playerid, COR_USOCORRETO, "Uso correto:: /knife [1/4].");
	if (style == 1)
	{
		LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
	}
	else if (style == 2)
	{
		LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
	}
	else if (style == 3)
	{
		OnePlayAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
	}
	else if (style == 4)
	{
		LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
	}
	return 1;
}
CMD:handsup(playerid) {
	LoopingAnim(playerid, "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
	return 1;
}
// CELLPHONE IN
CMD:cellin(playerid) {
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	return 1;
}
// CELLPHONE OUT
CMD:cellout(playerid) {
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	return 1;
}
// Arms crossed
CMD:crossarms(playerid) {
	LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
	return 1;
}
// Lay Down
CMD:lay(playerid) {
	LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
	return 1;
}
// Take Cover
CMD:hide(playerid) {
	LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover
	return 1;
}
// Vomit
CMD:vomit(playerid) {
	OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
	return 1;
}
// Eat Burger
CMD:eat(playerid) {
	OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
	return 1;
}
// Wave
CMD:wave(playerid) {
	LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
	return 1;
}
// Crack Dieing
CMD:crack(playerid) {
	LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
	return 1;
}
CMD:smoke(playerid,params[])
{
 	new style;
	if(sscanf(params,"d",style)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /smoke [1/4]");
	if(style > 4) return SCM(playerid, COR_USOCORRETO, "Uso correto: /smoke [1/4].");
 	if (style == 1)
	{
		LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else if (style == 2)
	{
		LoopingAnim(playerid,"SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else if (style == 3)
	{
		LoopingAnim(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else if (style == 4)
	{
		LoopingAnim(playerid,"SMOKING","M_smk_out", 4.0, 1, 0, 0, 0, 0);
	}
	return 1;
}
// Sit
CMD:gro(playerid) {
	LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit
	return 1;
}
// Idle Chat
CMD:chat(playerid) {
	LoopingAnim(playerid,"PED","IDLE_CHAT",4.0,1,0,0,1,1);
	return 1;
}

// ChairSit
CMD:chairsit(playerid) {
	LoopingAnim(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
	return 1;
}
// Fall on the ground
CMD:boquete(playerid) {
	ApplyAnimation(playerid,"PAULNMAC", "wank_in", 3.0, 0, 1, 1, 1, 1);
	return 1;
}
// Fall on the ground
CMD:fall(playerid) {
	LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
	return 1;
}
// Fall
CMD:fallback(playerid) {
	LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
	return 1;
}
// kiss
CMD:kiss(playerid) {
	LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
	return 1;
}
// Rap animations
CMD:rap(playerid,params[])
{
 	new style;
	if(sscanf(params,"d",style)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /rap [1/4]");
	if(style > 4) return SCM(playerid, COR_USOCORRETO, "Uso correto: /rap [1/4].");
 	if (style == 1)
	{
		LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
	}
	else if (style == 2)
	{
		LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
	}
	else if (style == 3)
	{
		LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
	}
	else if (style == 4)
	{
		LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
	}
	return 1;
}
// Strip
CMD:strip(playerid,params[])
{
 	new style;
	if(sscanf(params,"d",style)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /strip [1/7]");
	if(style > 7) return SCM(playerid, COR_USOCORRETO, "Uso correto: /strip [1/7].");
	if (style == 1)
	{
		LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 2)
	{
		LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 3)
	{
		LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 4)
	{
		LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 5)
	{
		LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 6)
	{
		LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 );
	}
	else if (style == 7)
	{
		LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 );
	}
	return 1;
}
CMD:dance(playerid,params[])
{
    new dancestyle;
	if(sscanf(params,"d",dancestyle)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /dance [1-4]");
	if(dancestyle > 4) return SCM(playerid,COR_USOCORRETO,"Uso correto: /dance [1-4]");
	if(dancestyle == 1)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	}
	else if(dancestyle == 2)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	}
	else if(dancestyle == 3)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	}
	else if(dancestyle == 4)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	}
	return 1;
}
/*================[COMANDOS PM]===================*/
CMD:dp(playerid)
{
	new string[80];
	new State = GetPlayerState(playerid);
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital!");
 	if(Player[playerid][PCRJ] >= 1)
	{
		if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
		{
			SetPlayerPos(playerid, 229.6199,159.1863,1003.0234);
			SetPlayerInterior(playerid, 3);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), 179.3871);
		}
		else
		{
			SetPlayerPos(playerid, 229.6199,159.1863,1003.0234);
			SetPlayerInterior(playerid, 3);
			SetPlayerFacingAngle(playerid, 268.4397);
		}
	  	new cargotext2[30];
	  	if(Player[playerid][PCRJ] == 5) { cargotext2 = "Delegado"; }
		if(Player[playerid][PCRJ] == 4) { cargotext2 = "Inspetor"; }
		if(Player[playerid][PCRJ] == 3) { cargotext2 = "Investigador"; }
		if(Player[playerid][PCRJ] == 2) { cargotext2 = "Escrivão"; }
		if(Player[playerid][PCRJ] == 1) { cargotext2 = "Agente"; }
		EmTrabalho[playerid] = 1;
		SetPlayerTeam(playerid,10);
		SetPlayerColor(playerid, COR_PCRJ);
		if(Player[playerid][PCRJ]<=4)
		{
			SetPlayerSkin(playerid, 286);
		}
		else
		{
		    SetPlayerSkin(playerid,281);
		}
	 	if(strfind(Nome(playerid),"[CORE]", false) != -1)
		{
			SetPlayerColor(playerid, 0x2F4F4FFF);
		}
		format(string, sizeof(string), "** O %s da Policia Cívil %s foi para o DP.", cargotext2, Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
	}
 	if(Player[playerid][PMRJ] >= 1)
	{
		if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
		{
			SetPlayerPos(playerid, 1568.1403,-1694.2502,5.8906);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), 179.3871);
		}
		else
		{
			SetPlayerPos(playerid, 1568.1403,-1694.2502,5.8906);
			SetPlayerFacingAngle(playerid, 268.4397);
		}
	  	new cargotext3[30];
		if(Player[playerid][PMRJ] == 5) { cargotext3 = "Coronel"; }
		if(Player[playerid][PMRJ] == 4) { cargotext3 = "Capitão"; }
		if(Player[playerid][PMRJ] == 3) { cargotext3 = "Sargento"; }
		if(Player[playerid][PMRJ] == 2) { cargotext3 = "Soldado"; }
		if(Player[playerid][PMRJ] == 1) { cargotext3 = "Recruta"; }
		EmTrabalho[playerid] = 1;
		SetPlayerColor(playerid, COR_PMRJ);
		SetPlayerSkin(playerid, 284);
		SetPlayerTeam(playerid,11);
		if(strfind(Nome(playerid),"[BOPE]", false) != -1)
		{
			SetPlayerColor(playerid, 0x0d0d0dFF);
			SetPlayerSkin(playerid, 285);
		}
		format(string, sizeof(string), "** O %s da PMRJ %s foi para o batalhão.", cargotext3, Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
	}
	SalvarDados(playerid);
	return 1;
}
CMD:saircamera(playerid)
{
	if(Player[playerid][Camera]==0)return SCM(playerid,COR_ERRO,"[FALHA]: Você precisa está acessando uma camera para usar este comando.");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para usar este comando.");
	TogglePlayerControllable(playerid, 1);
	SetPlayerVirtualWorld(playerid, 0);
	SetCameraBehindPlayer(playerid);
	SetPlayerPos(playerid,256.8570,2036.4297,17.7325);
	Player[playerid][Camera]=0;
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Você saiu do acesso de cameras.");
	return 1;
}
CMD:apreender(playerid, params[])
{
	if(Player[playerid][PMRJ] >= 1 || Player[playerid][PCRJ] >= 1)
	{
		new id,motivo[256+MAX_PLAYER_NAME];
		if(sscanf(params, "us", id,motivo))return SCM(playerid, COR_USOCORRETO, "Uso correto: /apreender [id] [motivo]");
		if (ProxDetectorS(8.0, playerid, id))
		{
			Player[id][TempoPreso] = 300;
			Presidio[id]=1;
			Player[id][Passagens]++;
			SetTimerEx("Spawnar", 1000, 0, "i", id);
			new string[256];
			SendFormattedMessage(id,COR_NEGATIVO,"-GFINFO-: Você foi preso pelo policial %s. | Motivo: %s",Nome(playerid),motivo);
			format(string,sizeof(string),"{FFFFFF}HQ: {0000FF}Todas as unidades policial.");
			SendMessageToCops(-1, string);
 			format(string,sizeof(string),"{FFFFFF}HQ: {0000FF}O policial %s prendeu o traficante %s. | Motivo: %s",Nome(playerid),Nome(id),motivo);
			SendMessageToCops(-1, string);

		}
	} else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");

	return 1;
}
CMD:comandospcrj(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][PCRJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	ComandosPCRJ(playerid);
	return 1;
}
CMD:comandosdj(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][DJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	ComandosDJ(playerid);
	return 1;
}
CMD:comandospm(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][PMRJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	ComandosPMRJ(playerid);
	return 1;
}
CMD:laseron(playerid)
{
	if(!(Player[playerid][PCRJ]>=2 || Player[playerid][PMRJ]>=2))return SCM(playerid,COR_ERRO,"[FALHA]: Acesso restrito as organizações policiais.");
    SetPVarInt(playerid, "laser", 1);
    SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
    return 1;
}

CMD:laseroff(playerid)
{
	if(!(Player[playerid][PCRJ]>=2 || Player[playerid][PMRJ]>=2))return SCM(playerid,COR_ERRO,"[FALHA]: Acesso restrito as organizações policais.");
    SetPVarInt(playerid, "laser", 0);
    RemovePlayerAttachedObject(playerid, 0);
    return 1;
}

CMD:lasercor(playerid,params[])
{
    new tmp[256];
    if(!(Player[playerid][PCRJ]>=2 || Player[playerid][PMRJ]>=2))return SCM(playerid,COR_ERRO,"[FALHA]: Acesso restrito as organizações policais.");
    if(sscanf(params, "s", tmp)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /Lasercor [Vermelho,Azul,Rosa,Laranja,Verde,Amarelo]");
    if (!strcmp(tmp, "Vermelho", true)) SetPVarInt(playerid, "color", 18643);
    else if (!strcmp(tmp, "Azul", true)) SetPVarInt(playerid, "color", 19080);
    else if (!strcmp(tmp, "Rosa", true)) SetPVarInt(playerid, "color", 19081);
    else if (!strcmp(tmp, "Laranja", true)) SetPVarInt(playerid, "color", 19082);
    else if (!strcmp(tmp, "Verde", true)) SetPVarInt(playerid, "color", 19083);
    else if (!strcmp(tmp, "Amarelo", true)) SetPVarInt(playerid, "color", 19084);
    else SCM(playerid, COR_ERRO, "[FALHA] Cor inválida!");
    return 1;
}
CMD:kick(playerid, params[])
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 3 || Player[playerid][PMRJ] >= 4 || Player[playerid][PCRJ] >= 4  || Player[playerid][Reporter] >= 4 || Player[playerid][MotoTaxi] >= 4)
	{
		new id, string[220], motivo[100];
		if(sscanf(params, "us[100]", id,  motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /kick [id] [motivo]");
		if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
		if(Player[id][Admin] >= 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode kickar um administrador!");
		format(string, sizeof(string),"AdmCMD: %s foi kickado do servidor pelo %s %s | Motivo: %s", Nome(id), AccountName(playerid), Nome(playerid), motivo);
		SendClientMessageToAll(COR_NEGATIVO, string);
        SalvarDados(id);
		SetTimerEx("TimerKick", 200, 0, "i", id);
	}
	else
	{
		SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	}
	return 1;
}
CMD:respawn(playerid, params[])
{
	new string[500], id, motivo[500];
    if(!(Player[playerid][Admin] >= 1 || Player[playerid][Cargo] >= 4 || Player[playerid][Lider] >= 1 || Player[playerid][Dono] >= 1)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	if(sscanf(params, "us[300]", id, motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /respawn [id] [motivo]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COR_ERRO, "[FALHA]: Este id está offline.");
	SpawnPlayer(id);
	EmTrabalho[id] = 0;
	NaBoateVip[id] = 0;
	ParticipandoEvento[id] = false;
	TaUFC[playerid] = 0;
	format(string, sizeof(string),"AdmCMD: %s foi respawnado pelo %s %s | Motivo: %s",Nome(id), AccountName(playerid), Nome(playerid), motivo);
	SendClientMessageToAll(COR_NEGATIVO, string);
	new string1[300], string2[300];
	format(string1, 128, "{FF0000}VOCÊ FOI RESPAWNADO\n\n");
	strcat(string2,string1);
	format(string1, sizeof(string1), "{FFFFFF}Nick de quem te respawnou: {FF0000}%s\n", Nome(playerid));
	strcat(string2,string1);
	format(string1, sizeof(string1), "{FFFFFF}Motivo: {FF0000}%s\n",motivo);
	strcat(string2,string1);
	ShowPlayerDialog(id, 666, DIALOG_STYLE_MSGBOX, "{FF0000}» {FFFFFF}VOCÊ FOI RESPAWNADO {FF0000}«", string2, "Fechar", "");
	return 1;
}
CMD:base(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(!(IsPlayerInVehicle(playerid, carPCRJ[23])|| IsPlayerInVehicle(playerid,VehPmrj[23])|| IsPlayerInVehicle(playerid,VehPmrj[24])))return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em um helicoptero.");
	if(!(Player[playerid][PCRJ]>=4 || Player[playerid][PMRJ]>=4))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
    if(Player[playerid][PCRJ]>=4)
    {
   		if(IsPlayerInVehicle(playerid,carPCRJ[23]))
    	{
	    	VehicleObject[6] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	VehicleObject[7] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	AttachObjectToVehicle(VehicleObject[6], carPCRJ[23], 1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000); //Object Model: 1698 |
			AttachObjectToVehicle(VehicleObject[7], carPCRJ[23], 2.014998, 0.674999, -0.109999, 0.000000, -90.449951, 0.000000); //Object Model: 1698 |
	        SCM(playerid,COR_PRINCIPAL,"[INFO]: Você adicionou uma base para que possa carregar um soldado.");
        }
	}
    if(Player[playerid][PMRJ]>=4)
    {
   		if(IsPlayerInVehicle(playerid,VehPmrj[23]))
    	{
	    	VehicleObject[6] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	VehicleObject[7] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	AttachObjectToVehicle(VehicleObject[6], VehPmrj[23], 1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000); //Object Model: 1698 |
			AttachObjectToVehicle(VehicleObject[7], VehPmrj[23], 2.014998, 0.674999, -0.109999, 0.000000, -90.449951, 0.000000); //Object Model: 1698 |
	        SCM(playerid,COR_PRINCIPAL,"[INFO]: Você adicionou uma base para que possa carregar um soldado.");
        }
 		if(IsPlayerInVehicle(playerid,VehPmrj[24]))
    	{
	     	VehicleObject[8] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	VehicleObject[9] = CreateObject(1698,1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000);
	    	AttachObjectToVehicle(VehicleObject[8], VehPmrj[24], 1.244999, 0.654999, -0.644999, 0.000000, 0.000000, 0.000000); //Object Model: 1698 |
			AttachObjectToVehicle(VehicleObject[9], VehPmrj[24], 2.014998, 0.674999, -0.109999, 0.000000, -90.449951, 0.000000); //Object Model: 1698 |
	        SCM(playerid,COR_PRINCIPAL,"[INFO]: Você adicionou uma base para que possa carregar um soldado.");
        }
	}
	return 1;
}
CMD:rtcdp(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][PMRJ] >= 4)
	{
		SetVehicleToRespawn(VehPmrj[1]);
		SetVehicleToRespawn(VehPmrj[2]);
		SetVehicleToRespawn(VehPmrj[3]);
		SetVehicleToRespawn(VehPmrj[4]);
		SetVehicleToRespawn(VehPmrj[5]);
		SetVehicleToRespawn(VehPmrj[6]);
		SetVehicleToRespawn(VehPmrj[7]);
		SetVehicleToRespawn(VehPmrj[8]);
		SetVehicleToRespawn(VehPmrj[9]);
		SetVehicleToRespawn(VehPmrj[10]);
		SetVehicleToRespawn(VehPmrj[11]);
		SetVehicleToRespawn(VehPmrj[12]);
		SetVehicleToRespawn(VehPmrj[13]);
		SetVehicleToRespawn(VehPmrj[14]);
		SetVehicleToRespawn(VehPmrj[15]);
		SetVehicleToRespawn(VehPmrj[16]);
		SetVehicleToRespawn(VehPmrj[17]);
		SetVehicleToRespawn(VehPmrj[18]);
		SetVehicleToRespawn(VehPmrj[19]);
		SetVehicleToRespawn(VehPmrj[20]);
		SetVehicleToRespawn(VehPmrj[21]);
		SetVehicleToRespawn(VehPmrj[22]);
		SetVehicleToRespawn(VehPmrj[23]);
		SetVehicleToRespawn(VehPmrj[24]);
		new string[101];
		format(string, sizeof(string), "{0000FF}[HQ]: Todas as unidades: Polícial %s respawnou todos os carros da PMRJ.", Nome(playerid));
		SendMessageToCops(-1, string);
		return 1;
	}
	if(Player[playerid][PCRJ] >= 4)
	{
		SetVehicleToRespawn(carPCRJ[1]);
		SetVehicleToRespawn(carPCRJ[2]);
		SetVehicleToRespawn(carPCRJ[3]);
		SetVehicleToRespawn(carPCRJ[4]);
		SetVehicleToRespawn(carPCRJ[5]);
		SetVehicleToRespawn(carPCRJ[6]);
		SetVehicleToRespawn(carPCRJ[7]);
		SetVehicleToRespawn(carPCRJ[8]);
		SetVehicleToRespawn(carPCRJ[9]);
		SetVehicleToRespawn(carPCRJ[10]);
		SetVehicleToRespawn(carPCRJ[11]);
		SetVehicleToRespawn(carPCRJ[12]);
		SetVehicleToRespawn(carPCRJ[13]);
		SetVehicleToRespawn(carPCRJ[14]);
		SetVehicleToRespawn(carPCRJ[15]);
		SetVehicleToRespawn(carPCRJ[16]);
		SetVehicleToRespawn(carPCRJ[17]);
		SetVehicleToRespawn(carPCRJ[18]);
		SetVehicleToRespawn(carPCRJ[19]);
		SetVehicleToRespawn(carPCRJ[20]);
		SetVehicleToRespawn(carPCRJ[21]);
		SetVehicleToRespawn(carPCRJ[22]);
		SetVehicleToRespawn(carPCRJ[23]);
		SetVehicleToRespawn(carPCRJ[24]);
		SetVehicleToRespawn(carPCRJ[25]);
		new string[999];
		format(string, sizeof(string), "{0000FF}[HQ]: Todas as unidades: Polícial %s respawnou todos os carros da PCRJ.", Nome(playerid));
		SendMessageToCops(-1, string);
		return 1;
	}
	return 1;
}
CMD:gov(playerid, params[])
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(sscanf(params, "s[999]", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /gov [texto]");
	if(Player[playerid][DelayGov] == true)return SCM(playerid, COR_ERRO, "[FALHA]: Você usou o /gov recentemente, aguarde.");
	if(EmTrabalho[playerid] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	else if(Player[playerid][PCRJ] >= 4)
	{
	    SendClientMessageToAll(-1,"|__________Notícias do Governo__________|");
		SendFormattedMessageToAll(COR_ADMIN, "Oficial da PCRJ | %s: %s", Nome(playerid), params);
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
		Player[playerid][DelayGov] = true;
	}
	else if(Player[playerid][PMRJ] >= 4)
	{
	    SendClientMessageToAll(-1,"|__________Notícias do Governo__________|");
		SendFormattedMessageToAll(COR_ADMIN, "Oficial da PMRJ | %s: %s", Nome(playerid), params);
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
		Player[playerid][DelayGov] = true;
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Somente Lider ou Sub-Lider da Organização pode usar este comando!");
	return 1;
}
CMD:xenonazul(playerid)
{
	AttachXenonToVehicle(GetPlayerVehicleID(playerid), Azul);
	return 1;
}
CMD:desligarxenon(playerid)
{
	DestroyXenon(GetPlayerVehicleID(playerid));
	return 1;
}
CMD:veh(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(VeiculoVeh[playerid] >=1 )return SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um veículo criado, digite '/dcm' para pode criar outro veículo.");
	if(Player[playerid][TempoPreso] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
 	if(Player[playerid][Vip] >= 1)
 	{
		if(VeiculoVeh[playerid]>=1) return SCM(playerid,COR_ERRO,"[FALHA]: Você já tem veiculo criado digite /dcm para deletar seu veiculo.");
		new string[65];
		ShowPlayerDialog(playerid, DIALOG_VEHVIP, DIALOG_STYLE_LIST, "Veiculos", "Sultan\nInfernus\nOnibus\nBmx\nMountain Bike\nFaggio\nSanchez\nQuad\nNRG-500\nIate\nBugre\nBanshee\nSquallo\nJester\nBuffalo", "Selecionar", "Cancelar");
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}digitou /veh.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 60);
	}
	else if(Player[playerid][Admin]>=1 || Player[playerid][PCRJ]>=4 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][PMRJ]>=4 || Player[playerid][Cargo]==4)
	{
		new string[65];
		ShowPlayerDialog(playerid, DIALOG_VEH, DIALOG_STYLE_LIST, "Veiculos", "Sultan\nInfernus\nOnibus\nBmx\nMountain Bike\nFaggio\nSanchez\nQuad\nNRG-500", "Selecionar", "Cancelar");
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}digitou /veh.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 60);
	}
	else SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	return 1;
}
CMD:dcm(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(VeiculoVeh[playerid]<1) return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem veiculo criado digite /veh para criar um.");
	if(Player[playerid][Admin] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][PMRJ]>=4 || Player[playerid][Dono] >= 1 || Player[playerid][Cargo]==4 || Player[playerid][Vip] >= 1 || Player[playerid][PCRJ] >= 4)
	{
	    if(CarroDeSom[playerid]==1)
	    {
		    DestroyObject(ob2[playerid]);
		    DestroyObject(ob3[playerid]);
		    DestroyObject(ob5[playerid]);
		    DestroyObject(ob6[playerid]);
		    DestroyObject(ob7[playerid]);
		    DestroyObject(ob10[playerid]);
		    DestroyObject(ob11[playerid]);
		    DestroyObject(ob12[playerid]);
		    DestroyObject(ob13[playerid]);
		    DestroyObject(ob14[playerid]);
		    DestroyObject(ob15[playerid]);
		    DestroyObject(ob16[playerid]);
		    DestroyObject(ob17[playerid]);
		    DestroyObject(ob18[playerid]);
		    DestroyObject(ob19[playerid]);
		    DestroyObject(ob20[playerid]);
	    	CarroDeSom[playerid]=0;
	    }
    	for(new i=0;i < MAX_GZS;i++)
 		if(GetDistanceBetweenPlayers(playerid, i) <= 70) StopAudioStreamForPlayer(i);
	    Delete3DTextLabel(VehicleLabelFree[VeiculoVeh[playerid]]);
	    DestroyVehicle(VeiculoVeh[playerid]);
	    VeiculoVeh[playerid] = 0;
	   	new string[71];
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}destruiu um veiculo.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 50);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:dc(playerid)
{
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		if(Player[playerid][Admin] >= 1 || Player[playerid][Reporter] >= 2 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] == 4 || Player[playerid][Dono] >= 1 || Player[playerid][PMRJ] >= 4 || Player[playerid][PCRJ] >= 4)
		{
	   		new vehicleid;
			vehicleid = GetPlayerVehicleID(playerid);
   			if(Player[playerid][Admin] >= 1 || Player[playerid][Reporter] >= 2 || Player[playerid][Lider] >= 1 || Player[playerid][PMRJ] >= 4 || Player[playerid][Dono] >= 1 || Player[playerid][Cargo] == 4 || Player[playerid][PCRJ] >= 4)
			{
			    if(Carros(GetPlayerVehicleID(playerid))) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode deletar esse veículo, use /rc!");
			    if(CarroDeSom[playerid]==1)
			    {
				    DestroyObject(ob2[playerid]);
				    DestroyObject(ob3[playerid]);
				    DestroyObject(ob5[playerid]);
				    DestroyObject(ob6[playerid]);
				    DestroyObject(ob7[playerid]);
				    DestroyObject(ob10[playerid]);
				    DestroyObject(ob11[playerid]);
				    DestroyObject(ob12[playerid]);
				    DestroyObject(ob13[playerid]);
				    DestroyObject(ob14[playerid]);
				    DestroyObject(ob15[playerid]);
				    DestroyObject(ob16[playerid]);
				    DestroyObject(ob17[playerid]);
				    DestroyObject(ob18[playerid]);
				    DestroyObject(ob19[playerid]);
				    DestroyObject(ob20[playerid]);
			    	CarroDeSom[playerid]=0;
			    }
				DestroyVehicle(vehicleid);
				VeiculoVeh[playerid]=0;
				new string[70];
				format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}deletou um veículo.", Nome(playerid));
				MensagemLocal(playerid, COR_ROXO, string, 50);
				return 1;
			}
   		}
   		else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não está em um veículo ou não está dirigindo ele.");
	return 1;
}
CMD:br(playerid)
{
    if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(!(Player[playerid][PCRJ] >= 2 || Player[playerid][PMRJ] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 2314.5869,-4.6078,26.7422))return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode criar barricadas no banco!");
	if(Player[playerid][pBarreira] >= 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você já tem barreira criada, use [/rbr] para deletar a barreira.");
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	Player[playerid][pBarreira] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A);
	SetPlayerPos(playerid, X, Y, Z+4);

	new string[70];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou uma barreira.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}

CMD:rbr(playerid)
{
    if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(!(Player[playerid][PCRJ] >= 2 || Player[playerid][PMRJ] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Player[playerid][pBarreira] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem barreira criada!");
	DestroyDynamicObject(Player[playerid][pBarreira]);
	Player[playerid][pBarreira] = 0;
	new string[75];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}deletou uma barreira.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:rbrall(playerid)
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][PCRJ] >= 5 || Player[playerid][PMRJ] >= 5)
	{
		for(new i = 0; i <= HighestID; i++)
		{
			DestroyDynamicObject(Player[i][pBarreira]);
			Player[i][pBarreira] = 0;
		}
		new string[70];
		format(string,sizeof(string),"[HQ]: Todas as barreiras policiais foram retiradas por %s.", Nome(playerid));
		SendMessageToCops(0x228B22FF, string);
	}
	else
	SCM(playerid, COR_ERRO, "[FALHA]: Você precisa ser Sub-Lider ou Líder pra poder usar esse comando!");
	return 1;
}
CMD:appcrj2(playerid)
{
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(Player[playerid][PCRJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	MoveDynamicObject(portaoPCRJ2,2334.43,2443.65,0.0906,10);
	SetTimerEx("FecharPortaoPCRJ2", 5000, 0, "i", playerid);
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
	}
	return 1;
}
CMD:appcrj(playerid)
{
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(Player[playerid][PCRJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	MoveDynamicObject(portaoPCRJ,2237.6,2453.08,1.45,10);
	SetTimerEx("FecharPortaoPCRJ", 5000, 0, "i", playerid);
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
	}
	return 1;
}
CMD:appm(playerid)
{
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(Player[playerid][PMRJ] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	MoveDynamicObject(portaoPMRJ1,1539.4004000,-1628.0000000,1.2000000,10);
	SetTimerEx("FecharPortaoPMRJ1", 5000, 0, "i", playerid);
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
	}
	return 1;
}
CMD:pc(playerid, params[])
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /pc [mensagem]");
	if(Player[playerid][PCRJ] > 0)
	{
		new cargotext[64];
		if(Player[playerid][PCRJ] == 5) { cargotext = "Delegado"; }
		if(Player[playerid][PCRJ] == 4) { cargotext = "Investigador"; }
		if(Player[playerid][PCRJ] == 3) { cargotext = "Inspetor"; }
		if(Player[playerid][PCRJ] == 2) { cargotext = "Escrivão"; }
		if(Player[playerid][PCRJ] == 1) { cargotext = "Agente"; }

		for(new i = 0; i <= HighestID; i ++)
			if(IsPlayerConnected(i))
				if(Player[i][PCRJ] >= 1)
					SendFormattedMessage(i, COR_PCRJ, "[PCRJ RÁDIO] %s %s (ID: %d): %s **", cargotext, Nome(playerid), playerid, params);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:p(playerid, params[])
{
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(sscanf(params, "s", params))return SCM(playerid, COR_USOCORRETO, "Uso correto: /p [mensagem]");
	if(Player[playerid][PMRJ] > 0)
	{
		new cargotext[64], string[200];
		if(Player[playerid][PMRJ] == 5) { cargotext = "Líder"; }
		if(Player[playerid][PMRJ] == 4) { cargotext = "Capitão"; }
		if(Player[playerid][PMRJ] == 3) { cargotext = "Sargento"; }
		if(Player[playerid][PMRJ] == 2) { cargotext = "Soldado"; }
		if(Player[playerid][PMRJ] == 1) { cargotext = "Recruta"; }

		for(new i = 0; i <= HighestID; i ++)
		{
			if(IsPlayerConnected(i))
			{
				if(Player[i][PMRJ] >= 1)
				{
					format(string, sizeof(string),"[PMRJ RÁDIO] %s %s (ID: %d): %s **", cargotext, Nome(playerid), playerid, params);
					SCM(i, COR_PMRJ, string);
				}
			}
		}
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:revistar(playerid, params[])
{
	new id;
	if(Logado{playerid}== false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /revistar [id]");
	if(!(IsPlayerConnected(id))) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	if(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1)
	{
		if (ProxDetectorS(5.0, playerid, id))
		{
			new string[125],dialogrande[260];
			format(string, sizeof(string), "[ ! ] - {ffffff} %s {C798FA}foi revistado pelo policial {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
			MensagemLocal(id, COR_ROXO, string, 60);
			format(string, sizeof(string),"{FFFFFF} Informações do Player:{ABABAB} %s\n",Nome(id)); strcat(dialogrande, string);
			format(string, sizeof(string),"{FFFFFF}Maconha: {ABABAB}%d\n", Player[id][Maconha]); strcat(dialogrande, string);
			format(string, sizeof(string),"{FFFFFF}Cocaina: {ABABAB}%d\n", Player[id][Cocaina]); strcat(dialogrande, string);
			format(string, sizeof(string),"{FFFFFF}Dinheiro: {ABABAB}%d\n", GetPlayerMoney(playerid)); strcat(dialogrande, string);
			format(string, sizeof(string),"{FFFFFF}Passagens pela Policia: {ABABAB}%d\n", Player[id][Passagens]); strcat(dialogrande, string);
			ShowPlayerDialog(playerid, 666, DIALOG_STYLE_MSGBOX, "{C798FA}¤ {ffffff}Revistado", dialogrande, "Fechar", "");
			if(Player[id][Maconha]>=1 || Player[id][Cocaina]>=1)
			{
			    SendFormattedMessage(playerid, COR_PRINCIPAL,"[INFO]: O player %s está com drogas aprenda ele ! [/apreender]",Nome(id));
			    return 1;
			}
			if(Player[id][Maconha]==0 && Player[id][Cocaina]==0)
			{
			    SendFormattedMessage(playerid, COR_PRINCIPAL,"[INFO]: O player %s está limpo libere-o !",Nome(id));
			}
		}
		else SCM(playerid, COR_ERRO, "[FALHA]: Esse player está muito distante de você!");

	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:algemar(playerid,params[])
{
	new id, string[85];
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
 	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Logado{id}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Este jogador não está Logado!");
	if(!(IsPlayerConnected(id))) return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não está Logado.");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(sscanf(params, "u", id))return SCM(playerid, COR_USOCORRETO, "Uso correto: /algemar [id]");
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}algemou {ffffff}%s{C798FA}.", Nome(playerid), Nome(id));
		SCM(i,COR_ROXO,string);
	}
	SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
	GameTextForPlayer(id, "~r~Algemado", 2500, 3);
	return 1;
}
CMD:desalgemar(playerid,params[])
{
	new id, string[110];
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{id}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Este jogador não está Logado!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(sscanf(params, "u", id))return SCM(playerid, COR_USOCORRETO, "Uso correto: /desalgemar [id]");
 	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
	GameTextForPlayer(id, "~r~Desalgemado", 2500, 3);
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}desalgemou {ffffff}%s{C798FA}.", Nome(playerid), Nome(id));
		SCM(i,COR_ROXO,string);
	}
	return 1;
}
CMD:d(playerid, params[])
{
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO,"Uso correto: /d [texto]");
	new cargotext[64];
	if(Player[playerid][PCRJ] >= 1) { cargotext = "PCRJ"; }
	if(Player[playerid][PMRJ] >= 1) { cargotext = "PMRJ"; }
	new string[250];
	format(string, sizeof(string), "{26C3CB}** %s %s (ID:%d): %s, desligo. **", cargotext, Nome(playerid), playerid, params);
	SendMessageToCops(COR_PMRJ, string);
	return 1;
}
CMD:procurados(playerid)
{
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	new count=0;
	new str[106],city[64];
	SCM(playerid, COR_PRINCIPAL, "________________|TODOS OS PROCURADOS ONLINE|________________");
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{i}==true)
			{
				if(Player[i][Procurado] >= 1)
				{
						switch(GetPlayerCity(i))
						{
							case CIDADELS: city = "Los Santos";
							case CIDADESF: city = "San Fiero";
							case CIDADELV: city = "Las Venturas";
						}
						format(str, sizeof(str), "** Procurado: %s | [ID %d] | [Nivel %d] | [Está na cidade de: %s]", Nome(i), i, Player[i][Procurado], city);
						SCM(playerid, COR_BRANCO, str);
						count++;
				}
			}
		}
	}
	if(count == 0)
	{
		SCM(playerid, 0xD8D8D8FF, "Não foi encontrado nenhum procurado!");
	}
	return 1;
}
CMD:su(playerid, params[]) //
{
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	new id,string[108];
	if(!(Player[id][PCRJ]<1 || Player[id][PMRJ]<1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não pode dar nível de procurado para um policial.");
	if(sscanf(params, "us[100]", id, params))return SCM(playerid, COR_USOCORRETO, "Uso correto: /su [id] [crime]");
 	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	SetPlayerWantedLevel(id, GetPlayerWantedLevel(id) + 1);
	Player[id][Procurado] += 1;
	format(string,sizeof(string),"Você foi feito um procurado pelo polícial %s | Crime: %s.", Nome(playerid), params);
	SCM(id, COR_NEGATIVO,string);
	new city[64] = "Não identificado";
	switch(GetPlayerCity(id))
	{
		case CIDADELS: city = "Los Santos";
		case CIDADESF: city = "San Fierro";
		case CIDADELV: city = "Las Venturas";
	}

	format(string,sizeof(string),"HQ: Chamando todas as unidades, denunciante: %s.", Nome(playerid));
	SendMessageToCops(COR_VERDE, string);
	format(string,sizeof(string),"HQ: Crime: %s | Suspeito: %s (ID: %d) | Local: %s.", params, Nome(id), id, city);
	SendMessageToCops(COR_VERDE, string);
	Player[playerid][sutotal]++;
	SalvarDados(id);
	SalvarDados(playerid);
	return 1;
}
CMD:rdrogas(playerid, params[])
{
	new id;
	if(EmTrabalho[playerid] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(sscanf(params, "d", id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /rdrogas [id]");
 	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Player[id][Maconha] >=1 || Player[id][Cocaina]>=1)
	{
		if (ProxDetectorS(5.0, playerid, id))
		{
			Player[id][Maconha] = 0;
			Player[id][Cocaina] = 0;

			SendFormattedMessage(id, COR_PRINCIPAL, "[INFO]: O polícial %s retirou suas drogas.", Nome(playerid) );
			SendFormattedMessage(playerid, COR_PRINCIPAL, "[INFO]: Você retirou as drogas de %s.", Nome(id) );
		}
	}
	else
	{
	    SCM(playerid,COR_ERRO,"[FALHA]: O player não tem drogas.");
	}
	return 1;
}
CMD:pregos(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!(Player[playerid][PCRJ] >= 3 || Player[playerid][PMRJ] >= 3))		 return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
    if(CrieiTapete[playerid] == 1)
	{
		SCM(playerid, COR_ERRO, "[FALHA]: Você já colocou um Tapete de Pregos! Aguarde a remoção automática ou use /dpregos!");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	}
	else
	{
		GetPlayerPos(playerid,TapeteX,TapeteY,TapeteZ);
		if(IsPlayerInAnyVehicle(playerid))
		{
			GetVehicleZAngle(GetPlayerVehicleID(playerid), AnguloTapete);
			new ModeloCOP = GetVehicleModel(GetPlayerVehicleID(playerid));
			if(ModeloCOP == 599 || ModeloCOP == 528 || ModeloCOP == 490)
			{
				TapeteCOP[playerid] = CreateObject(2899, TapeteX,TapeteY,TapeteZ-1.0, 0, 0, AnguloTapete+268.0);
			}
			else if(ModeloCOP == 470 || ModeloCOP == 432)
			{
				TapeteCOP[playerid] = CreateObject(2899, TapeteX,TapeteY,TapeteZ-0.9, 0, 0, AnguloTapete+268.0);
			}
			else if(ModeloCOP == 461 || ModeloCOP == 510 || ModeloCOP == 521 || ModeloCOP == 522 || ModeloCOP == 523)
			{
				TapeteCOP[playerid] = CreateObject(2899, TapeteX,TapeteY,TapeteZ-0.4, 0, 0, AnguloTapete+268.0);
			}
			else
			{
				TapeteCOP[playerid] = CreateObject(2899, TapeteX,TapeteY,TapeteZ-0.6, 0, 0, AnguloTapete+268.0);
			}
			CrieiTapete[playerid] = 1;
			KillTimer(PassandoTapete[playerid]);
			PassandoTapete[playerid] = SetTimer("FurandoPneu",199,1);
			TempoTapete[playerid] = SetTimerEx("DeletarTapete", 30000, 0, "d", playerid);
			GameTextForPlayer(playerid,"~y~Tapete de pregos ~n~~w~foi colocado",5000,1);
			SCM(playerid, COR_PRINCIPAL, "[INFO]: Você colocou um Tapete de Pregos! Ele será removido em 30 segundos ou use /tpregos!");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else
		{
			GetPlayerFacingAngle(playerid, AnguloTapete);
			CrieiTapete[playerid] = 1;
			TapeteCOP[playerid] = CreateObject(2899, TapeteX,TapeteY,TapeteZ-0.9, 0, 0, AnguloTapete+268.0);
			KillTimer(PassandoTapete[playerid]);
			PassandoTapete[playerid] = SetTimer("FurandoPneu",199,1);
			TempoTapete[playerid] = SetTimerEx("DeletarTapete", 30000, 0, "d", playerid);
			GameTextForPlayer(playerid,"~y~Tapete de pregos ~n~~w~foi colocado",5000,1);
			SCM(playerid, COR_PRINCIPAL, "[INFO]: Você colocou um Tapete de Pregos! Ele será removido em 30 segundos ou use /tpregos!");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
	}
	return 1;
}
CMD:dpregos(playerid)
{
    if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!(Player[playerid][PCRJ] >= 3 || Player[playerid][PMRJ] >= 3)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
    if(CrieiTapete[playerid] == 0)
	{
		SCM(playerid,COR_ERRO, "[FALHA]: Você não pôs nenhum Tapete de Pregos!");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	else
	{
		CrieiTapete[playerid] = 0;
		DestroyObject(TapeteCOP[playerid]);
		KillTimer(TempoTapete[playerid]);
		KillTimer(PassandoTapete[playerid]);
		GameTextForPlayer(playerid,"~y~Tapete de pregos ~n~~r~foi removido",5000,1);
		//Evita que os pneus sejam furados depois que o Tapete for retirado!
		TapeteX = 0.000000, TapeteY = 0.000000, TapeteZ = 0.000000;
	}
	return 1;
}
CMD:escudo(playerid)
{
	if(EmTrabalho[playerid]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(!(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Equipamentos[playerid] == 1)
	{
		RemovePlayerAttachedObject(playerid,3);
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você desativou o escudo protetor!");
		Equipamentos[playerid] = 0;
		return 1;
	}
	if(Equipamentos[playerid] == 0)
	{
		SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você ativou o escudo protetor!");
		Equipamentos[playerid] = 1;
		return 1;
	}
	return 1;
}
CMD:infobtl(playerid,params[])
{
	new id,pName[MAX_PLAYER_NAME],stringa[128],stringb[128],stringc[128];
	if(sscanf(params,"u",id)) SCM(playerid,COR_USOCORRETO,"Uso correto: /infobtl [id]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	else    
	{
		GetPlayerName(id, pName, MAX_PLAYER_NAME);
		if(!(Player[id][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
		SCM(playerid, COR_PRINCIPAL, " » ---------------------------------------------------------------------------- «");
		format(stringa,sizeof(stringa),"{00FF00}*** Informações policiais de %s ***",pName);
		SCM(playerid,COR_PRINCIPAL,stringa);
		format(stringb,sizeof(stringb),"{FFFFFF}*** Quantidade de Su's efetuados [%d] ***",Player[id][sutotal]);
		SCM(playerid,COR_PRINCIPAL,stringb);
		format(stringc,sizeof(stringc),"{FFFFFF}*** Total de Suspeitos abatidos [%d] ***",Player[id][suabatidos]);
		SCM(playerid,COR_PRINCIPAL,stringc);
		SCM(playerid, COR_PRINCIPAL, " » ---------------------------------------------------------------------------- «");
	}
	return 1;
}
CMD:rgradeall(playerid)
{
	if(!(Player[playerid][Admin] >= 5 || Player[playerid][Reporter] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	for(new i = 0; i <= HighestID; i++)
	{
		DestroyDynamicObject(Player[i][Grade]);
		Player[i][Grade] = 0;
	}
	new string[128];
	format(string,sizeof(string),"-Info-: Todas as Grades foram retiradas por %s.", Nome(playerid));
	SendClientMessageToAll(0x0000FFFF, string);
	return 1;
}
CMD:rgrade(playerid)
{
    if(Player[playerid][Grade] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não usou /grade!");
	if(!(Player[playerid][Admin] >= 2 || Player[playerid][Reporter] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	DestroyDynamicObject(Player[playerid][Grade]);
	Player[playerid][Grade] = 0;
	new string[75];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}destruiu uma grade.", Nome(playerid));
    MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:grade(playerid)
{
    if(Player[playerid][Grade] >= 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você já usou /grade, use /rgrade para poder usar novamente!");
	if(!(Player[playerid][Admin] >= 2 || Player[playerid][Reporter] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	Player[playerid][Grade] = CreateDynamicObject(971, X, Y, Z+2.6, 0.0, 0.0, A);
	SetPlayerPos(playerid, X-5, Y, Z);
	new string[70];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou uma grade.", Nome(playerid));
    MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:cone(playerid)
{
	if(!(Player[playerid][Reporter] >= 1 || Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(EmTrabalho[playerid] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está trabalhando pra poder usar este comando!");
	if(Player[playerid][Cone] >= 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você já usou /cone, use /rcone para poder usar novamente!");
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	Player[playerid][Cone] = CreateDynamicObject(1237, X, Y, Z-1.0, 0.0, 0.0, A);
	SetPlayerPos(playerid, X, Y, Z+4);

	new string[65];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou um cone.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:rcone(playerid)
{
	if(!(Player[playerid][Reporter] >= 1 || Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Player[playerid][Cone] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não usou /cone!");
	DestroyDynamicObject(Player[playerid][Cone]);
	Player[playerid][Cone] = 0;

	new string[70];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}retirou seu cone.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:rtcone(playerid)
{
	if(Player[playerid][PCRJ] >= 4 || Player[playerid][PMRJ] >= 4 || Player[playerid][Reporter] >= 4)
	{
		for(new i = 0; i <= HighestID; i++)
		{
			if(Player[i][Cone] >= 1)
			{
				DestroyDynamicObject(Player[i][Cone]);
				Player[i][Cone] = 0;
			}
		}
		new string[500];
		format(string,sizeof(string),"[AVISO]: Todos os cones foram retiradas por %s.", Nome(playerid));
		SendMessageToCops(0x228B22FF, string);
	}
	else
	SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão pra poder usar esse comando!");

	return 1;
}
CMD:m(playerid, params[])
{
	if(Player[playerid][PCRJ] >= 1 || Player[playerid][PMRJ] >= 1)
	{
	    new texto[900];
		if(sscanf(params, "s[999]", texto)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /m [texto]");
		if(Logado{playerid} == true)
		{
			for(new i=0; i <= MAX_PLAYERS; i++)
				if(GetDistanceBetweenPlayers(playerid, i) <= 60)
			{
				if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
				{
					new string[900];
					format(string, sizeof(string), "[Policial %s]: %s", Nome(playerid), texto);
					SCM(i,COR_AMARELO,string);
				}
			}
		}
		else
		{
			SCM(playerid, COR_ERRO, "[FALHA]:Você tem que estar logado para usar este comando!");
		}
	}
	return 1;
}
/*================[SISTEMA VIP]===================*/
CMD:cash(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	format(Str, sizeof(Str), "{FFFF00}¤ {ffffff}Meus Cash: %d\n{FFFF00}¤ {FFFFFF}Loja de Cash\n{FFFF00}¤ {FFFFFF}Transferir Cash",Player[playerid][Cash]);
	ShowPlayerDialog(playerid, DIALOG_CASHS, DIALOG_STYLE_LIST, "{ffffff}Informações Cash", Str, "Selecionar", "Cancelar");
	return 1;
}
CMD:darcash(playerid, params[])
{
    new id, cash, string[126];
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
    if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(sscanf(params, "ud", id, cash))return SCM(playerid, COR_USOCORRETO, "Uso correto: /darcash [id] [cash]");
	if(cash < 0) return SCM(playerid, COR_ERRO, "[FALHA]: Digite um numero de cash validos!");
    if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	Player[id][Cash]+=cash;
	format(string, sizeof(string),"[INFO]: Você deu %d de cash para %s.",cash,Nome(id));
	SCM(playerid, COR_PRINCIPAL, string);
    format(string, sizeof(string),"[INFO]: %s deu %d de cash para você.",Nome(playerid),cash);
	SCM(id,COR_PRINCIPAL, string);
	SalvarDados(id);
	return true;
}
CMD:darcasht(playerid, params[])
{
	new cash;
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(!IsPlayerAdmin(playerid)) return SCM(playerid, COR_ERRO,"[FALHA]: Você não está logado na RCON");
	if(sscanf(params, "d", cash)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /darcasht [cash]");
	for(new i = 0 ; i < MAX_PLAYERS; i++)
	{
	    Player[i][Cash]+= cash;
	    SalvarDados(i);
	}
 	SendFormattedMessageToAll(COR_PRINCIPAL,"O Administrador %s deu %d de cash para todos do servidor.", Nome(playerid),cash);
	printf("[DAR CASH TODOS]: AdmCMD: O Administrador %s deu %d de cash para todos do servidor.", Nome(playerid), cash);
	return 1;
}
CMD:setvip(playerid, params[])
{
    new id, days;
    if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
	if(sscanf(params, "ud", id, days))return SCM(playerid, COR_USOCORRETO, "Uso correto: /setvip [id] [dias]");
	if(days < 0) return SCM(playerid, COR_ERRO, "[FALHA]: Digite um numero de dias validos!");
    if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
    Player[id][Vip] = ConvertDays(days);
    new string[85];
    format(string, sizeof(string), "{33AAFF}-GFInfo-: Você deu %d dias de Vip para %s.", days, Nome(id));
    SCM(playerid, COR_PRINCIPAL, string);
    format(string, sizeof(string), "{33AAFF}-GFInfo-: Você recebeu %d dias de Vip do administrador %s.", days, Nome(playerid));
    SCM(id, COR_PRINCIPAL, string);
	SendFormattedMessageToAll(-1, "{F4A460}AdmCMD: O Administrador %s setou %s de vip. | Dias: %d", Nome(playerid), Nome(id), days);
    format(string, sizeof(string), PegarVip(id), Nome(id));
    DOF2_CreateFile(PegarVip(id));
    DOF2_SetInt(PegarVip(id), "Dias", Player[id][Vip]);
    DOF2_SaveFile();
    SalvarDados(id);
	return true;
}
CMD:equipar(playerid)
{
	if(Player[playerid][Vip] < 1) return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando");
	{
	    if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você está preso!");
		if(Player[playerid][EquiparVIP] == 1)
		{
			SCM(playerid,COR_ERRO,"[FALHA]: Ainda não deu o tempo para equipar novamente!");
			return 1;
		}
		ResetPlayerWeapons(playerid);
		SCM(playerid,COR_PRINCIPAL,"[INFO]: Você se equipou com sucesso");
		GivePlayerWeapon(playerid,31,300);
		GivePlayerWeapon(playerid,29,300);
		GivePlayerWeapon(playerid,25,300);
		GivePlayerWeapon(playerid,34,300);
		GivePlayerWeapon(playerid,16,4);
		GivePlayerWeapon(playerid,4,1);
		GivePlayerWeapon(playerid,24,9999999);
		Player[playerid][EquiparVIP] = 1;
		SetTimerEx("Equipar",5*60*1000,false,"d",playerid);
	}
	return 1;
}
CMD:jetpack(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você está preso");
	if(Player[playerid][Admin]>=1 || Player[playerid][Vip]>=1 || Player[playerid][Reporter]>=2 || Player[playerid][Lider]>=1 || Player[playerid][DJ]>=2)
	{
		SetPlayerSpecialAction(playerid, 2);
		new string[70];
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou um jetpack.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 50);
	}
	else
	{
 		SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	}
	return 1;
}
CMD:blindar(playerid)
{
	if(Player[playerid][Vip] >= 1)
	{
		if(GetPlayerMoney(playerid) >= 900)
		{
			SetVehicleHealth(GetPlayerVehicleID(playerid), 99999999);
			GivePlayerMoney(playerid, -900);
			SCM(playerid, COR_PRINCIPAL, "[INFO]: Você fez seu veiculo de um blindado!");
		}
		else
		{
			SCM(playerid, COR_ERRO, "[FALHA]: Você não tem dinheiro suficiente para usar este comando!");
		}
	}
	else
	{
		SCM(playerid, COR_ERRO, "[FALHA]: Você não é um membro vip para usar este este comando!");
	}
	return 1;
}
CMD:carrodesom(playerid)
{
	if(Player[playerid][Vip]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Comando restrito para membros VIP.");
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(VeiculoVeh[playerid] >=1 )return SCM(playerid, COR_ERRO,"[FALHA]: Você já tem um veículo criado, digite '/dcm' para pode criar outro veículo.");
	if(Player[playerid][TempoPreso] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	new string[80];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou um carro de som VIP.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 60);
	GetPlayerPos(playerid, X, Y, Z);
	VeiculoVeh[playerid]=1;
	CarroDeSom[playerid]=1;
	GetPlayerFacingAngle(playerid, A);
	VeiculoVeh[playerid] = CreateVehicle(554, X, Y, Z, A, -1, -1, 30000);
	PutPlayerInVehicle(playerid, VeiculoVeh[playerid], 0);
	
	ob2[playerid]= CreateObject(1793, -0.45210, -3.56210, -0.29220,   0.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob2[playerid], 0, 11301, "carshow_sfse", "ws_carpark2", 0xFF4F4F4F);
	ob3[playerid]= CreateObject(1961, -0.37950, -1.15080, 0.37990,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob3[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER2");
	ob5[playerid]= CreateObject(1944, 0.48330, -1.70080, 0.34810,   90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob5[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob6[playerid]= CreateObject(1944, 0.04330, -1.70080, 0.34810,   90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob6[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob7[playerid]= CreateObject(1944, -0.39670, -1.70080, 0.34810,   90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob7[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob11[playerid]= CreateObject(1961, 0.42388, -1.19945, 0.37990,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob11[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER2");
	ob12[playerid]= CreateObject(1961, -0.37040, -2.21100, 0.37990,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob12[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER2");
	ob13[playerid]= CreateObject(1961, 0.41050, -2.20910, 0.37990,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob13[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER2");
	ob14[playerid]= CreateObject(2263, -0.60740, -3.64590, -0.26170,   0.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob14[playerid], 3, 14385, "trailerkb", "tr_wood1");
	SetObjectMaterialText(ob14[playerid], "Ì", 0, OBJECT_MATERIAL_SIZE_64x64, "Wingdings", 100, 1, 0xfff0f0f0, 0, 1);
	SetObjectMaterial(ob14[playerid], 1, 8409, "gnhotel1", "gnhotelwall02_128", 1);
	ob15[playerid]= CreateObject(2263, 0.63620, -3.65090, -0.26170,   0.00000, 0.00000, 0.00000);
	SetObjectMaterialText(ob15[playerid], "Ì", 0, OBJECT_MATERIAL_SIZE_64x64, "Wingdings", 100, 1, 0xfff0f0f0, 0, 1);
	SetObjectMaterial(ob15[playerid], 1, 8409, "gnhotel1", "gnhotelwall02_128", 1);
	ob16[playerid]= CreateObject(2263, 0.01410, -3.65250, -0.26170,   0.00000, 0.00000, 0.00000);
	SetObjectMaterialText(ob16[playerid], "Ì", 0, OBJECT_MATERIAL_SIZE_64x64, "Wingdings", 100, 1, 0xfff0f0f0, 0, 1);
	SetObjectMaterial(ob16[playerid], 1, 8409, "gnhotel1", "gnhotelwall02_128", 1);
	ob17[playerid]= CreateObject(1945, -0.38050, -2.99620, 0.40810,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob17[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob18[playerid]= CreateObject(1945, -0.06050, -2.99620, 0.40810,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob18[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob19[playerid]= CreateObject(1945, 0.23950, -2.99620, 0.40810,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob19[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	ob20[playerid]= CreateObject(1945, 0.53950, -2.99620, 0.40810,   -90.00000, 0.00000, 0.00000);
	SetObjectMaterial(ob20[playerid], 0, 2231, "cj_hi_fi2", "CJ_SPEAKER3");
	AttachObjectToVehicle(ob2[playerid], GetPlayerVehicleID(playerid),  -0.45210, -3.88210, -0.29220,  0.0, 0.0, 0.0);//1793
	AttachObjectToVehicle(ob3[playerid], GetPlayerVehicleID(playerid),-0.37950, -1.15080, 0.37990,   -90.0, 0.0, 0.0);//1961
	AttachObjectToVehicle(ob5[playerid], GetPlayerVehicleID(playerid), 0.48330, -1.70080, 0.34810,   90.0, 0.0, 0.0);//1844
	AttachObjectToVehicle(ob6[playerid], GetPlayerVehicleID(playerid),0.04330, -1.70080, 0.34810,   90.0, 0.0, 0.0);//1844
	AttachObjectToVehicle(ob7[playerid], GetPlayerVehicleID(playerid),-0.39670, -1.70080, 0.34810,   90.0, 0.0, 0.0);//1844
	AttachObjectToVehicle(ob11[playerid], GetPlayerVehicleID(playerid),0.42388, -1.19945, 0.37990,   -90.0, 0.0, 0.0);//1961
	AttachObjectToVehicle(ob12[playerid], GetPlayerVehicleID(playerid),-0.37040, -2.21100, 0.37990,   -90.0, 0.0, 0.0);//1961
	AttachObjectToVehicle(ob13[playerid], GetPlayerVehicleID(playerid),0.41050, -2.20910, 0.37990,   -90.0, 0.0, 0.0);//1961
	AttachObjectToVehicle(ob14[playerid], GetPlayerVehicleID(playerid),-0.60740, -3.64590, -0.26170,   0.0, 0.0, 0.0);//2633
	AttachObjectToVehicle(ob15[playerid], GetPlayerVehicleID(playerid),0.63620, -3.65090, -0.26170,   0.0, 0.0, 0.0);//2263
	AttachObjectToVehicle(ob16[playerid], GetPlayerVehicleID(playerid),0.01410, -3.65250, -0.26170,   0.0, 0.0, 0.0);//2263
	AttachObjectToVehicle(ob17[playerid], GetPlayerVehicleID(playerid),-0.38050, -2.99620, 0.40810,   -90.0, 0.0, 0.0);//1945
	AttachObjectToVehicle(ob18[playerid], GetPlayerVehicleID(playerid),-0.06050, -2.99620, 0.40810,   -90.0, 0.0, 0.0);//1945
	AttachObjectToVehicle(ob19[playerid], GetPlayerVehicleID(playerid),0.23950, -2.99620, 0.40810,   -90.0, 0.0, 0.0);//1945
	AttachObjectToVehicle(ob20[playerid], GetPlayerVehicleID(playerid),0.53950, -2.99620, 0.40810,   -90.0, 0.0, 0.0);//1945
	ChangeVehicleColor(VeiculoVeh[playerid],6,0);
	return 1;
}
CMD:tunar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(Player[playerid][Vip]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um membro vip.");
        ShowPlayerDialog(playerid, DIALOG_TUNAR, DIALOG_STYLE_LIST, "Escolha", "Pintar\nRodas\nSuspencao Hidraulica\nNitro\nBlindar", "Selecionar", "Cancelar");
	}
	else
	{
		SCM(playerid,COR_ERRO,"[FALHA]: Você não está em um veículo para usar este comando.");
	}
	return 1;
}
// ============================= [ COMANDOS HELPER ] =========================== //
CMD:comandoshelper(playerid)
{
	new dialogrande[350];
	if(Player[playerid][pHelper] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Level 1]: {FFFFFF}/h, /ah, /sairhelper, /helper, /aphelper, /asayhelper, /vidat, /coletet\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Continuação Level 1]: {FFFFFF}/avaliar, /helpers, /rduvida, /atender, \n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Level 2]: {FFFFFF}/ir\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Level 3]: {FFFFFF}/kick, /tr\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Level 4]: {FFFFFF}/rtchlp\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00F6F6}[Level 5]: {FFFFFF}/sethelper, /infohelper\n");
	ShowPlayerDialog(playerid, 100+200, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos Helper {0000EE}«", dialogrande, "OK", "");
	return 1;
}
CMD:sethelper(playerid,params[])
{
	new id, level, string[120];
	if(Player[playerid][pHelper] >=5 || Player[playerid][Admin] >= 5)
	{
		if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /sethelper [id] [level]");
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
		if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
		if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level é 5.");
		
	 	new cargotext[50];
		if(Player[playerid][pHelper] == 5) { cargotext = "Líder Helper"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }

		format(string,sizeof(string), "{33AAFF}-GFInfo-: O %s %s setou seu level de Helper para %d.", cargotext, Nome(playerid), level);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string), "{33AAFF}-GFInfo-: Você mudou o level de Helper da conta de %s (id: %d) para %d.", Nome(id), id, level);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][pHelper]=level;
		SalvarDados(id);
		format(string, sizeof(string),"AdmCMD O %s %s mudou o level de Helper da conta de %s para %d.", cargotext, Nome(playerid), Nome(id), level);
		MensagemHelperToAdmin(string);
	}
	else
	{
		SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:helper(playerid)
{
	if(Player[playerid][pHelper] >= 1)
	{
	    new string[51];
		if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está na cadeia!");
		SetPlayerPos(playerid, -1723.8881,1018.2818,17.5859);
		SetPlayerFacingAngle(playerid, 88.9975);
		SetPlayerSkin(playerid, 164);
		SetPlayerColor(playerid, COR_HELPER);
		SetPlayerHealth(playerid, 999);
		SetPlayerArmour(playerid, 999);
		EmTrabalho[playerid] = true;
		format(string, sizeof(string), "O Helper %s está em trabalho.", Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
	}
	else
	{
		SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão!");
	}
	return 1;
}
CMD:helpers(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Helpers online");
	new cargotext[64];
	new statustext[20];
	new count = 0;
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][pHelper] >= 1)
				{
					if(Player[i][pHelper] == 5) { cargotext = "Líder Helper"; }
					if(Player[i][pHelper] == 4) { cargotext = "Sub Líder Helper"; }
					if(Player[i][pHelper] == 3) { cargotext = "Mestre em Atendimentos"; }
					if(Player[i][pHelper] == 2) { cargotext = "Discípulo dos Atendimentos"; }
					if(Player[i][pHelper] == 1) { cargotext = "Iniciante em Atendimentos"; }
    				if(EmTrabalho[playerid] == 0) { statustext = "Jogando"; }
	    			if(EmTrabalho[playerid] == 1) { statustext = "Ajudando"; }
					SendFormattedMessage(playerid, COR_BRANCO, "Helper %s [Cargo: %s] [Status: %s] [Atendimentos: %d]", Nome(i), cargotext, statustext, Atendimentos[i]);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nenhum helper online no momento.");
	return 1;
}
CMD:aphelper(playerid)
{
	if(Player[playerid][pHelper] < 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão!");
	for(new i=0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 10)
	{
		MoveDynamicObject(portaohelper1, -1770.4000244141, 974.40002441406, 25.60000038147, 5.0); // Coordenada do Portão Aberto
		MoveDynamicObject(portaohelper2, -1770.6999511719, 995.5, 25.60000038147, 5.0); // Coordenada do Portão Aberto
		SCM(i,0xA6A0A8FF, "** Portão aberto irá fechar em 5 segundos.");
		SetTimerEx("FecharPortaoHLP", 5000, 0, "i", playerid);
	}
	return 1;
}
CMD:asayhelper(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][DelayAsay] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você usou o asay recentemente, aguarde.");
	if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você tem que estar trabalhando para usar este comando!");
	if(Player[playerid][pHelper] >= 1)
	{
	    new string[118];
		SendClientMessageToAll(COR_BRANCO, "|________________Helper Avisa________________|");
		format(string, sizeof(string),"Helper %s: Dúvidas? Use '/duvida' ou '/chamar helper', e para reportar alguém, use /reportar.", Nome(playerid));
		SendClientMessageToAll(COR_HELPER, string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:sairhelper(playerid)
{
    if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está no modo helper para sair dele!");
	if(Player[playerid][pHelper] >= 1)
    {
        new string[70];
	    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	    if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso!");
	    if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode usar este comando agora!");
		SpawnPlayer(playerid);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 0);
		EmTrabalho[playerid] = 0;
		format(string,sizeof(string), "O Helper %s saiu do modo trabalho.", Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:h(playerid, params[])
{
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /h [mensagem]");
 	if(Player[playerid][pHelper] >= 1)
	{
		new cargotext[64], string[200];
  		if(Player[playerid][pHelper] == 5) { cargotext = "Líder"; }
  		if(Player[playerid][pHelper] == 4) { cargotext = "Sub-Líder"; }
  		if(Player[playerid][pHelper] == 3) { cargotext = "Mestre em Atendimentos"; }
  		if(Player[playerid][pHelper] == 2) { cargotext = "Discípulo dos Atendimentos"; }
  		if(Player[playerid][pHelper] == 1) { cargotext = "Iniciante em Atendimentos"; }

		format(string, sizeof(string),"[CHAT HELPER] %s %s (ID: %d): %s **", cargotext, Nome(playerid), playerid, params);
        MensagemHelper(string);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:ah(playerid, params[])
{
	if(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 1)
	{
		if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /ah [texto]");

		new cargotext[60];
		if(Player[playerid][pHelper] == 5) { cargotext = "Líder Helper"; }
		if(Player[playerid][pHelper] == 4) { cargotext = "Sub Líder"; }
		if(Player[playerid][pHelper] == 3) { cargotext = "Mestre em Atendimentos"; }
		if(Player[playerid][pHelper] == 2) { cargotext = "Discípulo dos Atendimentos"; }
		if(Player[playerid][pHelper] == 1) { cargotext = "Iniciante em Atendimentos"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }
		if(Player[playerid][Admin] == 4) { cargotext = "Sub Game Master"; }
		if(Player[playerid][Admin] == 3) { cargotext = "Administrador Fixo"; }
		if(Player[playerid][Admin] == 2) { cargotext = "Administrador Ajudante"; }
		if(Player[playerid][Admin] == 1) { cargotext = "Administrador Tempórario"; }
		
		new string[130];
		format(string, sizeof(string), "[CHAT HELPER E ADM] %s %s: %s **", cargotext, Nome(playerid), params);
		SendMessageToAdminsAndHelper(0xFFD5FFAA, string);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:duvida(playerid, params[])
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA]: Voce precisa esta logado pra usa esse comando");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /duvida [texto]");
	new string[999];
	format(string, sizeof(string), "[DÚVIDA DE %s] (ID: %d): %s", Nome(playerid), playerid, params);
	SendMessageToAdminsAndHelper(0x00FFFFFF, string);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Sua duvida foi enviada para os Helpers on-line, aguarde para ser respondido!");
	return 1;
}
CMD:relato(playerid, params[])
{
    new string2[999],string[999];
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA]: Voce precisa esta logado pra usa esse comando");
	if(sscanf(params, "s[999]", string2)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /relato [texto]");
	if(DelayRelato[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você acabou de relatar, portanto aguarde 30 segundos para que você possa relatar novamente.");
	format(string, sizeof(string), "-Relato-: %s (ID: %d): %s", Nome(playerid), playerid, string2);
	SendMessageToAdminsAndHelper(0x00FFFFFF, string);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Seu relato foi enviado para os Admins e Helpers on-line, aguarde para ser respondido!");
	DelayRelato[playerid] = 1;
	SetTimerEx("TimerRelato", 30000, 0, "i", playerid);
	return 1;
}
CMD:rduvida(playerid, params[])
{
	new id, msg[50], str[120];
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][pHelper] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	if(sscanf(params,"us", id, msg)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /rduvida [id] [mensagem]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	format(str, sizeof(str),"[DUVIDA] Sua duvida foi respondida pelo helper %s: %s ", Nome(playerid), msg);
	SCM(id, COR_PRINCIPAL, str);
	format(str, sizeof(str),"[DUVIDA] Você acaba de responder a duvida de %s", Nome(id));
	SCM(playerid, COR_PRINCIPAL,str);
	return true;
}
CMD:rtchlp(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][pHelper] >= 4)
	{
		SetVehicleToRespawn(VehHelper[1]);
		SetVehicleToRespawn(VehHelper[2]);
		SetVehicleToRespawn(VehHelper[3]);
		SetVehicleToRespawn(VehHelper[4]);
		SetVehicleToRespawn(VehHelper[5]);
		SetVehicleToRespawn(VehHelper[6]);
		SetVehicleToRespawn(VehHelper[7]);
		SetVehicleToRespawn(VehHelper[8]);
		SetVehicleToRespawn(VehHelper[9]);
		SetVehicleToRespawn(VehHelper[10]);
		SetVehicleToRespawn(VehHelper[11]);
		SetVehicleToRespawn(VehHelper[12]);
		SetVehicleToRespawn(VehHelper[13]);
		SetVehicleToRespawn(VehHelper[14]);
		SetVehicleToRespawn(VehHelper[15]);
		SetVehicleToRespawn(VehHelper[16]);
		new string[101];
		format(string, sizeof(string), "[HQ HELPER]: O Helper %s respawnou todos os carros da Helper.", Nome(playerid));
		SendMessageToAdminsAndHelper(COR_HELPER, string);
	}
	return 1;
}
CMD:avaliar(playerid, params[])
{
	new id, dialogrande[999];
	if(sscanf(params, "u", id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /avaliar [id]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você tem que estár logado");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está trabalhando");
	if(DelayHelper[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Aguarde para poder usar este comando novamente");

	if(Player[playerid][pHelper] >= 1)
	{
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este player não está logado!");
		if(DelayHelper[playerid] == 0)
		{
		    if(id == playerid) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode avaliar a sí mesmo!");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{60B9D6}Atenção!\n");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}o Helper {00F6F6}%s{ffffff}, lhe pediu para que você avalie o seu trabalho", Nome(id));
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}como um helper, para que o mesmo evolua de nível e possa\n");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}se tornar talvez um administrador do jogo algum dia\n");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}e para isto ele precisa que você responda corretamente\n");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}e com sinceridade o que você achou da atuação do mesmo como um helper.\n\n");
			format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Você acha que este Helper te ajudou em algo? Clique na sua rResposta!\n");
			ShowPlayerDialog(playerid, DIALOG_AVALIAR,DIALOG_STYLE_MSGBOX, "Avaliação do Helper", dialogrande, "Sim", "Nao");
			IDHELPER[id] = playerid;
			IDHELPER[playerid] = id;
			DelayHelper[playerid] = 1;
			SetTimerEx("TimerHelper", 300000, 0, "i", playerid);
		}
	}
	else return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:chamar(playerid,params[])
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /chamar [helper/reporter/mtx]");
	new string[127];
	if(strcmp(params, "helper", true)==0)
	{
		if(Player[playerid][FilaHLP] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você já chamou um helper, aguarde, use '/sairfila helper' para sair da fila caso queira.");

		Senha++;
		Player[playerid][FilaHLP] = Senha;
		format(string, sizeof(string),"[FILA HELPER] Você pegou sua senha [%d], aguarde para ser atendido por um Helper.", Player[playerid][FilaHLP]);
		SCM(playerid, COR_PRINCIPAL, string);
		
		SCM(playerid, COR_PRINCIPAL, "[FILA HELPER] Para ver o progresso da fila, use /fila helper.");
		SCM(playerid, COR_PRINCIPAL, "[FILA HELPER] Caso deseje sair da fila, use /sairfila helper.");

		format(string, sizeof(string), "[FILA HELPER] O jogador %s está na fila para ser atendido [Senha: %d] [ID: %d] (/atender).", Nome(playerid), Player[playerid][FilaHLP], playerid);
		MensagemHelper(string);
	}
    else if(strcmp(params, "reporter", true)==0)
	{
		if(Player[playerid][FilaRGF] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você já chamou um repórter, aguarde, use '/sairfila reporter' para sair da fila caso queira.");

		SenhaRGF++;
		Player[playerid][FilaRGF] = SenhaRGF;

		format(string, sizeof(string),"[FILA REPÓRTER] Você pegou sua senha [%d], aguarde para ser atendido por um repórter.", Player[playerid][FilaRGF]);
		SCM(playerid, COR_REPORTER, string);

		SCM(playerid, COR_REPORTER, "[FILA REPÓRTER]Para ver o progresso da fila, use /fila reporter.");
		SCM(playerid, COR_REPORTER, "[FILA REPÓRTER] Caso deseje sair da fila, use /sairfila reporter.");

		format(string, sizeof(string), "[FILA DE REPORTÁGEM] O jogador %s está na fila para ser atendido [Senha: %d] [ID: %d] (/atender).", Nome(playerid), Player[playerid][FilaRGF], playerid);
	    SendMessageToReporter(COR_REPORTER, string);
	}
    else if(strcmp(params, "mtx", true)==0)
	{
		if(Player[playerid][FilaMTX] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você já chamou um moto táxi, aguarde, use '/sairfila reporter' para sair da fila caso queira.");

		SenhaMTX++;
		Player[playerid][FilaMTX] = SenhaMTX;

		format(string, sizeof(string),"[FILA MOTO-TÁXI] Você pegou sua senha [%d], aguarde para ser atendido por um moto táxi.", Player[playerid][FilaMTX]);
		SCM(playerid, COR_MTX, string);

		SCM(playerid, COR_MTX, "[FILA MOTO-TÁXI] Para ver o progresso da fila, use /fila mtx.");
		SCM(playerid, COR_MTX, "[FILA MOTO-TÁXI] Caso deseje sair da fila, use /sairfila mtx.");

		format(string, sizeof(string), "[FILA DE MOTO-TÁXI] O jogador %s está na fila para ser atendido [Senha: %d] [ID: %d] (/atender).", Nome(playerid), Player[playerid][FilaMTX], playerid);
	    SendMessageToMotoTaxi(COR_MTX, string);
	}
	else return SCM(playerid, COR_USOCORRETO, "Uso correto: /chamar [helper/reporte/mtx]");
	return 1;
}
CMD:fila(playerid,params[])
{
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /fila [helper/reporter/mtx]");
	new cont = 0, string[80];

    if(strcmp(params, "reporter", true)==0)
    {
        SCM(playerid, COR_REPORTER, "** Fila para ser atendido (Repórter):");
	    for(new i = 0; i <= HighestID; i ++)
		{
			if(IsPlayerConnected(i))
			{
				if(Player[i][FilaRGF] >= 1)
				{
				    format(string, sizeof(string), "%d. %s (ID: %d)", Player[i][FilaRGF], Nome(i), i);
					SCM(playerid, COR_BRANCO, string);
					cont++;
				}

			}
		}
		if(cont == 0) SCM(playerid, COR_BRANCO, "Não tem ninguém na fila.");
	}
	else if(strcmp(params, "helper", true)==0)
	{
		SCM(playerid, COR_BRANCO, "{00FFFF}** Fila para ser atendido (Helper):");
		for(new i = 0; i <= HighestID; i ++)
		{
			if(IsPlayerConnected(i))
			{
				if(Player[i][FilaHLP] >= 1)
				{
					format(string, sizeof(string),"%d. %s (ID: %d)", Player[i][FilaHLP], Nome(i), i);
					SCM(playerid, COR_BRANCO, string);
					cont++;
				}
			}
		}
		if(cont == 0) SCM(playerid, COR_BRANCO, "Não tem ninguém na fila.");
	}
	else if(strcmp(params, "mtx", true)==0)
	{
		SCM(playerid, COR_BRANCO, "{00FF26}** Fila para ser atendido (Moto Táxi):");
		for(new i = 0; i <= HighestID; i ++)
		{
			if(IsPlayerConnected(i))
			{
				if(Player[i][FilaMTX] >= 1)
				{
					format(string, sizeof(string),"%d. %s (ID: %d)", Player[i][FilaMTX], Nome(i), i);
					SCM(playerid, COR_BRANCO, string);
					cont++;
				}
			}
		}
		if(cont == 0) SCM(playerid, COR_BRANCO, "Não tem ninguém na fila.");
	}
	else return SCM(playerid, COR_USOCORRETO, "Uso correto: /fila [helper/reporter/mtx]");
	return 1;
}
CMD:sairfila(playerid, params[])
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /sairfila [helper/reporter/mtx]");

	if(strcmp(params, "helper", true)==0)
	{
		if(Player[playerid][FilaHLP] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está na fila Helper!");
		Player[playerid][FilaHLP] = 0;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Você saiu da fila Helper!");
	}

    else if(strcmp(params, "reporter", true)==0)
	{
		if(Player[playerid][FilaRGF] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está na fila Repórter!");
 	    Player[playerid][FilaRGF] = 0;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Você saiu da fila Repórter!");
	}
    else if(strcmp(params, "mtx", true)==0)
	{
		if(Player[playerid][FilaMTX] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está na fila Repórter!");
 	    Player[playerid][FilaMTX] = 0;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Você saiu da fila Moto Táxi!");
	}
	else return SCM(playerid, COR_USOCORRETO, "Uso correto: /sairfila [helper/reporter/mtx]");
	return 1;
}
CMD:atender(playerid, params[])
{
	new id, tipo[32], string[126];
	if(sscanf(params, "s[32]u", tipo, id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /atender [helper/reporter/mtx] [id]");
    if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(!strcmp(tipo, "helper", true))
    {
		if(Player[id][FilaHLP] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está na fila!");
		if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho!");
		if(id == playerid) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode atender a sí mesmo!");
		format(string, sizeof(string), "O Helper {FFFFFF}%s {00F6F6}está atendendo o player {FFFFFF}%s{00F6F6}.", Nome(playerid), Nome(id));
		SendClientMessageToAll(COR_HELPER, string);
		Atendimentos[playerid]++;
		new vehicleid = GetPlayerVehicleID(playerid), State = GetPlayerState(playerid), Float:Pos[3], Interior, world;
		GetPlayerPos(id, Pos[0], Pos[1], Pos[2]);
		Interior = GetPlayerInterior(id);
		SetPlayerInterior(playerid, Interior);
		SetPlayerVirtualWorld(playerid, world);

		if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
		{
			SetVehiclePos(GetPlayerVehicleID(playerid), Pos[0], Pos[1], Pos[2]);
			PutPlayerInVehicle(playerid, vehicleid, 0);
		}
		else
		{
			SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		}
		Player[playerid][atendimentoshelper]++;
		Player[id][FilaHLP] = 0;
		Senha--;
		format(string, sizeof(string), "[FILA HELPER]: Você foi atendido pelo Helper %s.", Nome(playerid));
		SCM(id, COR_PRINCIPAL, string);
		format(string, sizeof(string), "[FILA HELPER]: Você atendeu o jogador %s.", Nome(id));
		SCM(playerid, COR_PRINCIPAL, string);

	}
	if(!strcmp(tipo, "reporter", true))
	{
		if(Player[playerid][Reporter] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
		if(Player[id][FilaRGF] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está na fila!");
		if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho!");
		if(id == playerid) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode atender a sí mesmo!");
		format(string, sizeof(string), "O Repórter {FFFFFF}%s {FF9900}está atendendo o player {FFFFFF}%s{FF9900}.", Nome(playerid), Nome(id));
		SendClientMessageToAll(COR_REPORTER, string);

		new vehicleid = GetPlayerVehicleID(playerid), State = GetPlayerState(playerid), Float:Pos[3], Interior, world;
		world = GetPlayerVirtualWorld(id);
		SetPlayerVirtualWorld(playerid, world);
		GetPlayerPos(id, Pos[0], Pos[1], Pos[2]);
		Interior = GetPlayerInterior(id);
		SetPlayerInterior(playerid, Interior);

		if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
		{
			SetVehiclePos(GetPlayerVehicleID(playerid), Pos[0], Pos[1], Pos[2]);
			PutPlayerInVehicle(playerid, vehicleid, 0);
		}
		else
		{
			SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		}

		Player[id][FilaRGF] = 0;
		SenhaRGF--;
		format(string, sizeof(string), "[FILA REPÓRTER]: Você foi atendido pelo Repórter %s.", Nome(playerid));
		SCM(id, COR_REPORTER, string);
		format(string, sizeof(string), "[FILA REPÓRTER]: Você atendeu o jogador %s", Nome(id));
		SCM(playerid, COR_REPORTER, string);
	}
	if(!strcmp(tipo, "mtx", true))
	{ 
		if(Player[playerid][MotoTaxi] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
		if(Player[id][FilaMTX] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está na fila!");
		if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho!");
		if(id == playerid) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode atender a sí mesmo!");
		format(string, sizeof(string), "O Moto-Táxi {FFFFFF}%s {00FF26}está atendendo o player {FFFFFF}%s{00FF26}.", Nome(playerid), Nome(id));
		SendClientMessageToAll(COR_MTX, string);
		ShowPlayerArrowPointingTo(playerid, id);
		CP[playerid] = 2;
		Player[id][FilaMTX] = 0;
		SenhaMTX--;
		format(string, sizeof(string), "[FILA MOTO-TÁXI]: Você foi atendido pelo Moto Táxi %s, aguarde ele vir te buscar.", Nome(playerid));
		SCM(id, COR_MTX, string);
		format(string, sizeof(string), "[FILA MOTO-TÁXI]: Você atendeu o jogador %s, siga a seta vermelha no mapa e vá busca-lo.", Nome(id));
		SCM(playerid, COR_MTX, string);
	}
	return 1;
}
// ================================ [ COMANDOS REPÓRTER ] ====================== //
CMD:setreporter(playerid,params[])
{
	new id, level,string[256];
	if(Player[playerid][Reporter]>=5 || Player[playerid][Admin]>=4)
	{
	 	new cargotext[50];
		if(Player[playerid][Reporter] == 5) { cargotext = "Líder Reporter"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }
		if(Player[playerid][Admin] == 4) { cargotext = "Sub Game Master"; }
		if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setreporter [id] [level]");
		if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
		if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level é 5.");
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
		format(string,sizeof(string),"{33AAFF}-GFInfo-: O %s %s te setou de Reporter level %d.",cargotext,Nome(playerid),level);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}-GFInfo-: Você setou %s de Reporter level %d.",Nome(id),level);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Reporter]=level;
		SalvarDados(id);
		format(string, sizeof(string),"{33AAFF}-GFInfo-: O %s %s setou %s de Reporter Level %d.", cargotext,Nome(playerid), Nome(id), level);
		MensagemReporter(string);
		printf("[SET Reporter]: AdmCMD: O %s %s setou %s de Reporter Level %d.", cargotext,Nome(playerid), Nome(id),level);
	}
	else
	{
	SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:r(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string))return SCM(playerid, COR_USOCORRETO, "Uso correto: /r [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(Player[playerid][Reporter]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um reporter para acessar este comando.");
	new cargotext[500];
	if(Player[playerid][Reporter] == 5) { cargotext = "Coordenador"; }
	if(Player[playerid][Reporter] == 4) { cargotext = "Diretor"; }
	if(Player[playerid][Reporter] == 3) { cargotext = "Repórter Global"; }
	if(Player[playerid][Reporter] == 2) { cargotext = "Repórter Local"; }
	if(Player[playerid][Reporter] == 1) { cargotext = "Jornalista"; }
	format(string, sizeof(string),"{FF9900}[CHAT REPÓRTER]: %s %s: %s ", cargotext, Nome(playerid), string);
	MensagemReporter(string);
	return 1;
}
CMD:asayreporter(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][DelayAsay] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você usou o asay recentemente, aguarde.");
	if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você tem que estar trabalhando para usar este comando!");
	if(Player[playerid][Reporter] >= 1)
	{
	    new string[120];
		SendClientMessageToAll(COR_BRANCO, "|________________Repórteres GF________________|");
		format(string, sizeof(string),"Reporter %s: Precisando de Filmagens ? Use '{FFFFFF}/chamar reporter{FF9900}' e aguarde ser atendido.", Nome(playerid));
		SendClientMessageToAll(COR_REPORTER, string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:jogar(playerid)
{
	if(Player[playerid][Reporter] < 1 && Player[playerid][PMRJ] < 1 && Player[playerid][PCRJ] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho!");
	GetPlayerPos(playerid, Player[playerid][LastPos][0], Player[playerid][LastPos][1], Player[playerid][LastPos][2]);
	SetTimerEx("Jogar", 5000, false, "i", playerid);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Aguarde sem se mover.");
	return 1;
}
CMD:reporter(playerid)
{
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[playerid][Reporter] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	new string[55];
	ResetPlayerWeapons(playerid);
	SetPlayerPos(playerid, 261.3987,1712.5823+1,-10.5440);
	SetPlayerFacingAngle(playerid, 269.7691);
	SetPlayerColor(playerid, COR_REPORTER);
	GivePlayerWeapon(playerid, 43, 10000);
	GivePlayerWeapon(playerid, 10, 1);
	SetPlayerHealth(playerid, 999);
	SetPlayerArmour(playerid, 999);
	SetPlayerSkin(playerid, 187);
	EmTrabalho[playerid] = 1;
	format(string,sizeof(string),"O Repórter %s está em trabalho.", Nome(playerid));
	SendClientMessageToAll(COR_NEGATIVO, string);
	return 1;
}
CMD:comandosreporter(playerid)
{
	new dialogrande[340];
	if(Player[playerid][Reporter] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF8000}[Level 1]: {FFFFFF}/reporter - /ocupado - /livre - /asayreporter - /noticias - /r - /atender - /jogar\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF8000}[Level 2]: {FFFFFF}/jetpack - /rc - /grade - /rgrade - /cone - /rcone\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF8000}[Level 3]: {FFFFFF}/ir\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF8000}[Level 4]: {FFFFFF}/tr - /kick\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF8000}[Level 5]: {FFFFFF}/setreporter - /rtgrade - /rtcone\n");
	ShowPlayerDialog(playerid, 100+100, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos Repórter {0000EE}«", dialogrande, "OK", "");
	return 1;
}
CMD:noticias(playerid, params[])
{
    new string[999];
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /noticias [texto]");
	if(EmTrabalho[playerid] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você tem que estar trabalhando para usar este comando!");
	if(Player[playerid][Reporter] >= 1)
	{
		format(string, sizeof(string), "Repórter %s: %s", Nome(playerid), string);
		SendClientMessageToAll(COR_REPORTER, string);
	}
	else return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	return 1;
}
CMD:reporteres(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Reporteres online");
	new cargotext[64], statustext[30];
	new count=0;
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][Reporter] >= 1)
				{
					if(Player[i][Reporter] == 1) { cargotext = "Jornaleiro"; }
					if(Player[i][Reporter] == 2) { cargotext = "Repórter Global"; }
					if(Player[i][Reporter] == 3) { cargotext = "Repórter Global"; }
					if(Player[i][Reporter] == 4) { cargotext = "Diretor"; }
					if(Player[i][Reporter] == 5) { cargotext = "Coordenador"; }
 					if(EmTrabalho[playerid] == 0) { statustext = "Jogando"; }
	    			if(EmTrabalho[playerid] == 1) { statustext = "Trabalhando"; }
					SendFormattedMessage(playerid, COR_BRANCO, "%s [Cargo: %s] [Status: %s]", Nome(i), cargotext, statustext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um Repórter online no momento.");
	return 1;
}
CMD:mototaxis(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Moto-Táxi online");
	new cargotext[64], statustext[30];
	new count=0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][MotoTaxi] >= 1)
				{
					if(Player[playerid][MotoTaxi] == 5) { cargotext = "Líder"; }
					if(Player[playerid][MotoTaxi] == 4) { cargotext = "Sub Líder"; }
					if(Player[playerid][MotoTaxi] == 3) { cargotext = "Fiscal"; }
					if(Player[playerid][MotoTaxi] == 2) { cargotext = "Membro Fixo"; }
					if(Player[playerid][MotoTaxi] == 1) { cargotext = "Membro Temp"; }
 					if(EmTrabalho[playerid] == 0) { statustext = "Jogando"; }
	    			if(EmTrabalho[playerid] == 1) { statustext = "Trabalhando"; }
					SendFormattedMessage(playerid, COR_BRANCO, "%s [Cargo: %s] [Status: %s]", Nome(i), cargotext, statustext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nem um Repórter online no momento.");
	return 1;
}
/*================[COMANDOS DJ]===================*/
CMD:radio(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	ShowPlayerDialog(playerid, DIALOG_RADIO, DIALOG_STYLE_LIST, "{0000EE}¤ {FFFFFF}Radio GTA Facções","Ligar Radio\nDesligar","Selecionar","Cancelar");
	return 1;
}
CMD:expulsardobaile(playerid,params[])
{
	new motivo[256+MAX_PLAYER_NAME], string[125],id;
    if(EmTrabalho[playerid] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho.");
	if(Player[playerid][DJ] < 2)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	if(sscanf(params,"us",id,motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /expulsardobaile [id] [motivo]");
	if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
    if(!(IsPlayerConnected(id))) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
 	format(string, sizeof(string), "{FF0000}Você foi expulso do baile\n{FF0000}Motivo: {FFFFFF}%s\n{FF0000}DJ: {FFFFFF}%s", motivo,Nome(playerid));
    ShowPlayerDialog(id, 2421, DIALOG_STYLE_MSGBOX, "## AVISO ##", string, "Ok", "");
	if(GetDistanceBetweenPlayers(playerid,id) <= 100)
	{
		SpawnPlayer(id);
		SetPlayerHealth(id, 100);
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}foi expulso do baile pelo DJ {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 60);
	}
	else
	{
		SCM(playerid, COR_ERRO,"[FALHA]: O player não está no baile.");
	}
	return 1;
}
CMD:djs(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	SCM(playerid, 0xADFF2FFF, "** Todos os Dj's online");
	new cargotext[64];
	new statustext[20];
	new count = 0;
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Logado{playerid} == true)
			{
				if(Player[i][DJ] >= 1)
				{
					if(Player[i][DJ] == 3) { cargotext = "Líder DJ"; }
					if(Player[i][DJ] == 2) { cargotext = "DJ de Boate"; }
					if(Player[i][DJ] == 1) { cargotext = "DJ de Favela"; }
    				if(EmTrabalho[playerid] == 0) { statustext = "Jogando"; }
	    			if(EmTrabalho[playerid] == 1) { statustext = "Tocando"; }
					SendFormattedMessage(playerid, COR_BRANCO, "DJ %s [Cargo: %s] [Status: %s]", Nome(i), cargotext, statustext);
					count++;
				}
			}
		}
	}
	if(count == 0) return SCM(playerid, COR_BRANCO, "** Não tem nenhum DJ online no momento.");
	return 1;
}
CMD:asaydj(playerid, params[])
{
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    if(Player[playerid][DJ] <= 0) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão");
    if(EmTrabalho[playerid] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho.");
	if(sscanf(params, "s[999]", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /asaydj [texto]");

	SendFormattedMessageToAll(COR_DJ, "[RADIO GF] %s: %s",  Nome(playerid), params);
	return 1;
}
// =============== [ COMANDOS MOTO-TÁXI ] ====================================== //
CMD:setmtx(playerid,params[])
{
	new id, level,string[256];
	if(Player[playerid][MotoTaxi]>=5 || Player[playerid][Admin]>=4)
	{
	 	new cargotext[50];
		if(Player[playerid][MotoTaxi] == 5) { cargotext = "Líder Moto Táxi"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }
		if(Player[playerid][Admin] == 4) { cargotext = "Sub Game Master"; }
		if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setmtx [id] [level]");
		if(!IsPlayerConnected(id))return SCM(playerid, COR_ERRO,"[FALHA]: Jogador não conectado.");
		if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level é 5.");
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
		format(string,sizeof(string),"{33AAFF}-GFInfo-: O %s %s te setou de Moto Táxi level %d.",cargotext,Nome(playerid),level);
		SCM(id, COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}-GFInfo-: Você setou %s de Moto Táxi level %d.",Nome(id),level);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][MotoTaxi]=level;
		SalvarDados(id);
		format(string, sizeof(string),"-GFInfo-: O %s %s setou %s de Moto Táxi Level %d.", cargotext, Nome(playerid), Nome(id), level);
		SendMessageToMotoTaxi(0xFFBD9DFF, string);
		printf("[SET Moto Táxi]: AdmCMD: O %s %s setou %s de Moto Táxi Level %d.", cargotext, Nome(playerid), Nome(id),level);
	}
	else
	{
	SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:comandosmtx(playerid)
{
	new dialogrande[340];
	if(Player[playerid][MotoTaxi] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00FF26}[Level 1]: {FFFFFF}/trabalhar -  /sairtrabalho - /mtaxi - /asaymtx - /t - /atender - /apmtx\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00FF26}[Level 2]: {FFFFFF}/rc\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00FF26}[Level 3]: {FFFFFF}/ir\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00FF26}[Level 4]: {FFFFFF}/tr - /kick\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{00FF26}[Level 5]: {FFFFFF}/setmtx\n");
	ShowPlayerDialog(playerid, 100+100, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos Moto-Táxi {0000EE}«", dialogrande, "OK", "");
	return 1;
}
CMD:trabalhar(playerid)
{
	if(Player[playerid][MotoTaxi] >=1 )
	{
	    new string[200];
		SetPlayerHealth(playerid, 9999);
		SetPlayerArmour(playerid, 9999);
		SetPlayerSkin(playerid, 261);
		EmTrabalho[playerid] = 1;
		SetPlayerColor(playerid, COR_MTX);
		SalvarDados(playerid);
		format(string,sizeof(string),"** O Moto Taxi %s Entrou em modo trabalho.", Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
		SetPlayerPos(playerid, 1530.2074,-1478.7550,9.5000);
		SetPlayerFacingAngle(playerid, 1.7125);
		SetPlayerInterior(playerid,0);
	}
	else return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	return 1;
}
CMD:sairtrabalho(playerid)
{
	if(EmTrabalho[playerid] == 0)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em trabalho.");
	if(Player[playerid][DJ] >= 1 || Player[playerid][MotoTaxi] >= 1)
	{
		SetPlayerHealth(playerid, 100);
		SpawnPlayer(playerid);
		EmTrabalho[playerid] = 0;
		new string[999];
		if(Player[playerid][MotoTaxi] >= 1)
		{
			format(string,sizeof(string),"** O Moto Taxi %s saiu do modo trabalho.", Nome(playerid));
			SendClientMessageToAll(COR_NEGATIVO, string);
		}
	}
	return 1;
}
CMD:mtaxi(playerid,params[])
{
	new id;
	if(!(EmTrabalho[playerid]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho use /trabalhar.");
	if(!(Player[playerid][MotoTaxi] == 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não é Moto Taxi!");
	if(sscanf(params, "u", id))return SCM(playerid, COR_USOCORRETO, "Uso correto: /mtaxi [id]");
    new VehicleID;
    VehicleID = GetPlayerVehicleID(playerid);
    new modelo;
    modelo = GetVehicleModel(VehicleID);
    if(modelo != 461)
	{
		SCM(playerid, COR_ERRO, "[FALHA]: Você não está em um véiculo moto táxi!");
		return 1;
	}
	if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(id) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SCM(id, COR_PRINCIPAL, "[INFO]: O Moto Taxi ligou o taximêtro, 20$ cada km.");
		GivePlayerMoney(playerid, 000);
		GivePlayerMoney(id, 000);
		Taximetro[id][0] = 1;
		Taximetro[id][1] = playerid;
		return 1;
	}
	else
	{
		SCM(playerid, COR_ERRO, "[FALHA]: O passageiro não está dentro da sua Moto ou você está fora.");
	}
	return 1;
}
CMD:asaymtx(playerid)
{
	if(!(EmTrabalho[playerid]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho use /trabalhar.");
	if(Player[playerid][MotoTaxi] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é moto taxi!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	SendClientMessageToAll(-1, "|________________Moto Taxi________________|");
	SendFormattedMessageToAll(COR_MTX, "Moto Taxi %s: Precisa de Moto Taxi ? Use '{FFFFFF}/chamar mtx{00FF26}' e aguarde ser atendido.", Nome(playerid),playerid);
	return 1;
}
CMD:t(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string))return SCM(playerid, COR_USOCORRETO, "Uso correto: /t [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(Player[playerid][MotoTaxi]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um Moto Táxi para acessar este comando.");
	new cargotext[500];
	if(Player[playerid][MotoTaxi] == 5) { cargotext = "Líder"; }
	if(Player[playerid][MotoTaxi] == 4) { cargotext = "Sub Líder"; }
	if(Player[playerid][MotoTaxi] == 3) { cargotext = "Fiscal"; }
	if(Player[playerid][MotoTaxi] == 2) { cargotext = "Membro Fixo"; }
	if(Player[playerid][MotoTaxi] == 1) { cargotext = "Membro Temp"; }
	format(string, sizeof(string),"[CHAT MOTO-TÁXI]: %s %s: %s ", cargotext, Nome(playerid), string);
	SendMessageToMotoTaxi(COR_MTX, string);
	return 1;
}
CMD:rmtx(playerid)
{
	if(!(EmTrabalho[playerid]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho use /trabalhar.");
	if(!(Player[playerid][MotoTaxi]==1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um moto taxista.");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para usar este comando.");
	SetVehicleToRespawn(VehMTX[1]);
	SetVehicleToRespawn(VehMTX[2]);
	SetVehicleToRespawn(VehMTX[3]);
	SetVehicleToRespawn(VehMTX[4]);
	SetVehicleToRespawn(VehMTX[5]);
	SetVehicleToRespawn(VehMTX[6]);
	SetVehicleToRespawn(VehMTX[7]);
	SetVehicleToRespawn(VehMTX[8]);
	SetVehicleToRespawn(VehMTX[9]);
	SetVehicleToRespawn(VehMTX[10]);
	SetVehicleToRespawn(VehMTX[11]);
	SetVehicleToRespawn(VehMTX[12]);
	SetVehicleToRespawn(VehMTX[13]);
	SetVehicleToRespawn(VehMTX[14]);
	SetVehicleToRespawn(VehMTX[15]);
	SetVehicleToRespawn(VehMTX[16]);
	SetVehicleToRespawn(VehMTX[17]);
	SetVehicleToRespawn(VehMTX[18]);
	SetVehicleToRespawn(VehMTX[19]);
	SetVehicleToRespawn(VehMTX[20]);
	SetVehicleToRespawn(VehMTX[21]);
	SetVehicleToRespawn(VehMTX[22]);
	SetVehicleToRespawn(VehMTX[23]);
	SetVehicleToRespawn(VehMTX[24]);
	SetVehicleToRespawn(VehMTX[25]);
	SetVehicleToRespawn(VehMTX[26]);
	SetVehicleToRespawn(VehMTX[27]);
	SetVehicleToRespawn(VehMTX[28]);
	SetVehicleToRespawn(VehMTX[29]);
	SetVehicleToRespawn(VehMTX[30]);
	SetVehicleToRespawn(VehMTX[31]);
	SetVehicleToRespawn(VehMTX[32]);
	SetVehicleToRespawn(VehMTX[33]);
	SetVehicleToRespawn(VehMTX[34]);
	SetVehicleToRespawn(VehMTX[35]);
	SetVehicleToRespawn(VehMTX[36]);
	SetVehicleToRespawn(VehMTX[37]);
	SetVehicleToRespawn(VehMTX[38]);
	SetVehicleToRespawn(VehMTX[39]);
	SetVehicleToRespawn(VehMTX[40]);
	SetVehicleToRespawn(VehMTX[41]);
	SetVehicleToRespawn(VehMTX[42]);
	SetVehicleToRespawn(VehMTX[43]);
	SetVehicleToRespawn(VehMTX[44]);
	SetVehicleToRespawn(VehMTX[45]);
	SetVehicleToRespawn(VehMTX[46]);
	SetVehicleToRespawn(VehMTX[47]);
	SetVehicleToRespawn(VehMTX[48]);
	SetVehicleToRespawn(VehMTX[49]);
	SetVehicleToRespawn(VehMTX[50]);
	SetVehicleToRespawn(VehMTX[51]);
	SetVehicleToRespawn(VehMTX[52]);
	SetVehicleToRespawn(VehMTX[53]);
	SetVehicleToRespawn(VehMTX[54]);
	SetVehicleToRespawn(VehMTX[55]);
	SetVehicleToRespawn(VehMTX[56]);
	SetVehicleToRespawn(VehMTX[57]);
	SetVehicleToRespawn(VehMTX[58]);
	SetVehicleToRespawn(VehMTX[59]);
	SetVehicleToRespawn(VehMTX[60]);
	SetVehicleToRespawn(VehMTX[61]);
	SetVehicleToRespawn(VehMTX[62]);
	SetVehicleToRespawn(VehMTX[63]);
	SetVehicleToRespawn(VehMTX[64]);
	SetVehicleToRespawn(VehMTX[65]);
	SetVehicleToRespawn(VehMTX[66]);
	SetVehicleToRespawn(VehMTX[67]);
	SetVehicleToRespawn(VehMTX[68]);
	SetVehicleToRespawn(VehMTX[69]);
	SetVehicleToRespawn(VehMTX[70]);
	SetVehicleToRespawn(VehMTX[71]);
	SetVehicleToRespawn(VehMTX[72]);
	SetVehicleToRespawn(VehMTX[73]);
	SetVehicleToRespawn(VehMTX[74]);
    SetVehicleToRespawn(VehMTX[75]);
    SetVehicleToRespawn(VehMTX[76]);
    SetVehicleToRespawn(VehMTX[77]);
    SetVehicleToRespawn(VehMTX[78]);
    SetVehicleToRespawn(VehMTX[79]);
    SetVehicleToRespawn(VehMTX[80]);
    SetVehicleToRespawn(VehMTX[81]);
    SetVehicleToRespawn(VehMTX[82]);
	SendFormattedMessageToAll(COR_MTX,"[MTX]: Todas as motos do moto taxi foram respawnadas por %s.",Nome(playerid));
	return 1;
}
CMD:apmtx(playerid)
{
	if(EmTrabalho[playerid] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está em trabalho [/dp].");
	if(Player[playerid][MotoTaxi] < 1)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	MoveDynamicObject(portaomtx, 1534.8000488281, -1451.5999755859, 8.8999996185303, 10);
	SetTimerEx("FecharPortaoMTX", 5000, 0, "i", playerid);
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 20)
	{
		SCM(i, COR_PORTAO, "** Portão aberto irá fechar em 5 segundos.");
	}
	return 1;
}
/*================[COMANDOS ADMIN]===================*/
CMD:setpcrj(playerid,params[])
{
	new id, level,string[128];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Admin] >= 4 || Player[playerid][PCRJ]>=5)
	{
		new cargotext[50];
		if(Player[playerid][PCRJ] == 5) { cargotext = "Delegado"; }
		if(Player[playerid][PCRJ] == 4) { cargotext = "Investigador"; }
		if(Player[playerid][PCRJ] == 3) { cargotext = "Inspetor"; }
		if(Player[playerid][PCRJ] == 2) { cargotext = "Escrivão"; }
		if(Player[playerid][PCRJ] == 1) { cargotext = "Agente"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }
		if(Player[playerid][Admin] == 4) { cargotext = "Sub Game Master"; }

		if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setpcrj [id] [level]");
		if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level a ser setado é 5.");
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
    	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");

		if(level >= 1)
		{
			format(string,sizeof(string),"PCRJCmd: O %s %s te setou de Level %d da Policia Cívil.",cargotext, Nome(playerid),level);
			SCM(id,0xA9A9A9FF,string);

			format(string,sizeof(string),"PCRJCmd: Você setou %s de Level %d da Policia Cívil.",Nome(id),level);
			SCM(playerid,0xA9A9A9FF,string);

			Player[id][PCRJ] = level;
			Player[id][Lider]=0;
			Player[id][Cargo]=0;
			Player[id][Dono]=0;
			Player[id][PMRJ]=0;
			Player[id][pHelper]=0;
			Player[id][DJ] = 0;
			Player[id][Faccoes] = 13;
			SalvarDados(id);

			format(string, sizeof(string),"PCRJCmd: O %s %s setou %s de Level %d da Policia Cívil.", cargotext, Nome(playerid), Nome(id), level);
			MensagemAdmin(string);

			format(string, sizeof(string),"PCRJCmd: O %s %s setou %s de Level %d da Policia Cívil.", cargotext, Nome(playerid), Nome(id), level);
			MensagemPCRJ(string);

			printf("[SET PCRJ]: PCRJCmd: O %s %s setou %s de Level %d da Policia Cívil.", cargotext, Nome(playerid), Nome(id), level);
		}
		if(level == 0)
		{
			Player[id][PCRJ] = 0;
			SalvarDados(id);

			format(string,sizeof(string),"PCRJCmd: O %s %s te desetou de Policia Cívil.",cargotext, Nome(playerid));
			SCM(id,0xA9A9A9FF,string);

			format(string,sizeof(string),"PCRJCmd: Você desetou %s de Policia Cívil.",Nome(id));
			SCM(playerid,0xA9A9A9FF,string);

			format(string, sizeof(string),"PCRJCmd: O %s %s desetou %s de Policia Cívil.", cargotext, Nome(playerid), Nome(id));
			MensagemAdmin(string);

			format(string, sizeof(string),"PCRJCmd: O %s %s desetou %s de Policia Cívil.", cargotext, Nome(playerid), Nome(id));
			MensagemPCRJ(string);

			printf("[SET PCRJ]: PCRJCmd: O %s %s desetou %s de Policia Cívil.", cargotext, Nome(playerid), Nome(id));
		}
	}
	else
	{
		SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:setpm(playerid,params[])
{
	new id, level, string[128];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Admin]>=4 || Player[playerid][PMRJ]>=5)
	{
	    new cargotext[50];
		if(Player[playerid][PMRJ] == 5) { cargotext = "Coronel"; }
		if(Player[playerid][PMRJ] == 4) { cargotext = "Capitão"; }
		if(Player[playerid][PMRJ] == 3) { cargotext = "Sargento"; }
		if(Player[playerid][PMRJ] == 2) { cargotext = "Soldado"; }
		if(Player[playerid][PMRJ] == 1) { cargotext = "Recruta"; }
		if(Player[playerid][Admin] == 5) { cargotext = "Game Master"; }
		if(Player[playerid][Admin] == 4) { cargotext = "Sub Game Master"; }

		if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setpm [id] [level]");
		if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level a ser setado é 5.");
		if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");

		if(!IsPlayerConnected(id))return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");

		if(level >= 1)
		{
			format(string,sizeof(string),"-PMRJ-: O %s %s te setou de Level %d da PMRJ .",cargotext, Nome(playerid),level);
			SCM(id,COR_PMRJ,string);

			format(string,sizeof(string),"-PMRJ-: Você setou %s de Level %d da PMRJ.",Nome(id),level);
			SCM(playerid,COR_PMRJ,string);

			Player[id][PMRJ]=level;
			Player[id][Lider]=0;
			Player[id][Cargo]=0;
			Player[id][Dono]=0;
			Player[id][PCRJ]=0;
			Player[id][pHelper]=0;
			Player[id][DJ] = 0;
			Player[id][Faccoes] = 13;
			SalvarDados(id);

			format(string, sizeof(string),"{3A5FCD}-PMRJ-: O %s %s setou %s de Level %d da PMRJ.", cargotext, Nome(playerid), Nome(id), level);
			MensagemAdmin(string);

			format(string, 128,"{3A5FCD}-PMRJ-: O %s %s setou %s de Level %d da PMRJ.", cargotext, Nome(playerid), Nome(id), level);
			MensagemPmrj(string);
			printf("[SET PMRJ]: -PMRJ-: O %s %s setou %s de Level %d da PMRJ.", cargotext, Nome(playerid), Nome(id), level);
		}
		if(level == 0)
		{
		    Player[id][PMRJ] = 0;
		    SalvarDados(id);
		    
			format(string,sizeof(string),"-PMRJ-: O %s %s te desetou.",cargotext, Nome(playerid));
			SCM(id,COR_PMRJ,string);

			format(string,sizeof(string),"-PMRJ-: Você desetou %s de PMRJ.",Nome(id));
			SCM(playerid,COR_PMRJ,string);

			format(string, sizeof(string),"{3A5FCD}-PMRJ-: O %s %s desetou %s de PMRJ.", cargotext, Nome(playerid));
			MensagemAdmin(string);

			format(string, sizeof(string),"{3A5FCD}-PMRJ-: O %s %s desetou %s de PMRJ.", cargotext, Nome(playerid), Nome(id));
			MensagemPmrj(string);
			printf("[SET PMRJ]: -PMRJ-: O %s %s desetou %s de PMRJ.", cargotext, Nome(playerid), Nome(id));
		}
	}
	else
	{
		SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:dararmat(playerid, params[])
{
	new Arma; new Ballas; new gunname[500];
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
    if(sscanf(params, "dd", Arma, Ballas)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /dararmat [id] [balas]");
    GetWeaponName(Arma,gunname,sizeof(gunname));
	if(Arma < 1 || Arma > 46) return SCM(playerid, COR_ERRO, "[FALHA]: ID das armas apenas de 1 a 46.");
	for(new i = 0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 50)
	if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	{
		GivePlayerWeapon(i, Arma, Ballas);
		GetWeaponName(Arma, gunname, sizeof(gunname));
		SendFormattedMessage(i, COR_ROXO, "[ ! ] - {ffffff}%s {C798FA}deu uma %s com %d balas para todos ao redor dele!", Nome(playerid), gunname, Ballas);
 	}
	return 1;
}
CMD:dararma(playerid, params[])
{
	new Arma; new Ballas; new id; new gunname[500];
	if(!IsPlayerAdmin(playerid))return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado na RCON");
    if(sscanf(params, "udd", id, Arma, Ballas)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /dararma [id] [arma] [balas]");
    if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este id não está logado!");
    GetWeaponName(Arma,gunname,sizeof(gunname));
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Arma < 1 || Arma > 46) return SCM(playerid, COR_BRANCO, "{8000FF}[FALHA] ID das armas apenas de 1 a 46.");
	GivePlayerWeapon(id, Arma, Ballas);
	GetWeaponName(Arma, gunname, sizeof(gunname));
	SendFormattedMessage(playerid,COR_PRINCIPAL,"[INFO]: Você deu uma %s, para %s com %d balas.",gunname,Nome(id),Ballas);
	SendFormattedMessage(id,COR_PRINCIPAL,"[INFO]: O Game Master %s, deu uma '%s' com %d balas para você.",Nome(playerid),gunname,Ballas);
 	printf("[INFO]: Você deu uma %s, para %s com %d balas.",gunname,Nome(id),Ballas);
	return 1;
}
CMD:olhar(playerid, params[])  // exemplo de comando com 1 parâmetro
{
	if(Player[playerid][Admin] < 1) return 0;
	else
	{
		new tmp[256], idx, specid;
		tmp = strtok(params, idx);
		if(sscanf(tmp, "u", specid)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /olhar [id/off]");
		if(strcmp(tmp, "off", true)==0)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING )
			{
				StopSpectate(playerid);
				return 1;
			}
			else
			{
				return SCM(playerid, COR_ERRO, "[FALHA]: Você não está olhando ninguém.");
			}
		}
		if(!IsNumeric(params)) specid = ReturnPlayerID(params);
		else
		specid = strval(params);

		if(!IsPlayerConnected(specid))
		{
			SCM(playerid, COR_ERRO, "[FALHA]: Jogador não encontrado.");
			return 1;
		}
		if(Player[specid][BlockOlhar] == true) return SCM(playerid, COR_ERRO,"[FALHA]: Este player está com o olhar bloqueado");
		else if(specid == playerid)
		{
			SCM(playerid, COR_ERRO, "[FALHA]: ID Inválido.");
			return 1;
		}
		else if(GetPlayerState(specid) == PLAYER_STATE_SPECTATING && Player[specid][gSpectateID] != INVALID_PLAYER_ID)
		{
			SCM(playerid, COR_ERRO, "[FALHA]: Jogador escolhido já está espectando alguém.");
			return 1;
		}
		else if(GetPlayerState(specid) != 1 && GetPlayerState(specid) != 2 && GetPlayerState(specid) != 3)
		{
			SCM(playerid, COR_ERRO, "[FALHA]: O jogador não está jogando.");
			return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
		{
			SaveVariables(playerid);
			SCM(playerid, COR_NEGATIVO, "-GFInfo-: Você entrou no modo espectador, para sair digite /olhar off.");
		}
		StartSpectate(playerid, specid);
	}
	return 1;
}
CMD:bir(playerid)
{
	if(Player[playerid][Admin] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][BlockIR] == false)
	{
		Player[playerid][BlockIR] = true;
		SCM(playerid, COR_PRINCIPAL, "AdmCMD: IR bloqueado com sucesso para ativá-lo novamente digite /air.");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu IR já está bloqueado!");
	return 1;
}

CMD:btr(playerid)
{
	if(Player[playerid][Admin] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][BlockTR] == false)
	{
		Player[playerid][BlockTR] = true;
		SCM(playerid, COR_PRINCIPAL, "AdmCMD: Trazer bloqueado com sucesso para ativá-lo novamente digite /atr.");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu Trazer já está bloqueado!");
	return 1;
}
CMD:air(playerid)
{
	if(Player[playerid][Admin] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][BlockIR] == true)
	{
		Player[playerid][BlockIR] = false;
		SCM(playerid, COR_PRINCIPAL, "AdmCMD: Ir desbloqueado com sucesso.");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu Ir já está desbloqueado !");
	return 1;
}
CMD:atr(playerid)
{
	if(Player[playerid][Admin] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][BlockTR] == true)
	{
		Player[playerid][BlockTR] = false;
		SCM(playerid, COR_PRINCIPAL, "AdmCMD: Trazer desbloqueado com sucesso.");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu Trazer já está desbloqueado !");
	return 1;
}
CMD:rtc(playerid)
{
	if(Player[playerid][Admin] < 5) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	ResetarCarros(playerid);
	return 1;
}
CMD:dtc(playerid)
{
	new string[90];
    if(Logado{playerid} == false) return SCM(playerid,COR_ERRO,"[FALHA]: É preciso logar para executar este comando.");
	if(!(Player[playerid][Admin] >= 4)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	new AdmLevel[50];
	if(Player[playerid][Admin] == 5) { AdmLevel = "Game Master"; }
	if(Player[playerid][Admin] == 4) { AdmLevel = "Sub Game Master"; }
	if(Player[playerid][Admin] == 3) { AdmLevel = "Administrador Fixo"; }
	if(Player[playerid][Admin] == 2) { AdmLevel = "Administrador Ajudante"; }
	if(Player[playerid][Admin] == 1) { AdmLevel = "Administrador Temporário"; }
    for(new x = 0; x < sizeof(VeiculoVeh); x++)
    {
    	if(!(IsPlayerInVehicle(x,VeiculoVeh[x])))
    	{
        	DestroyVehicle(VeiculoVeh[x]);
        	VeiculoVeh[x] = 0;
        }
    }
    format(string, sizeof(string), "-GFInfo-: O %s %s destruiu todos os veículos criados.", AdmLevel, Nome(playerid));
    SendClientMessageToAll(COR_NEGATIVO, string);
	return 1;
}
CMD:presos(playerid)
{
	SCM(playerid, 0xADFF2FFF, "** Todos os presos online:");
	new admtext[64], count=0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
 		if(Presidio[i] >= 1) { admtext = "Presídio"; }
     	if(PresoADM[i]>= 1) { admtext = "Preso pelo Admin"; }
		if(IsPlayerConnected(i))
		{
			if(PresoADM[i] == 1 || Presidio[i] == 1)
			{
				new string[128];
				new pname[24];
				GetPlayerName(i, pname, 24);
				format(string, sizeof(string), "Preso %s [Preso em: %s] [Tempo restante: %s]", pname, admtext, Convert(Player[i][TempoPreso]) );
				SCM(playerid, COR_BRANCO, string);
				count++;
			}
		}
	}
	if(count == 0)
	{
		SCM(playerid, COR_BRANCO, "Não tem nenhum preso on-line agora!");
	}
	return 1;
}
CMD:soltar(playerid, params[])
{
	new id, motivo[128];
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA]: É preciso logar para executar este comando");
    if(sscanf(params, "us", id, motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /soltar [id] [motivo]");
    if(Logado{id} == false) return SCM(playerid, COR_ERRO,"[FALHA]: É preciso logar para executar este comando");
    if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
    if(PresoADM[id] == 0) return SCM(playerid, COR_ERRO, "[FALHA] Este jogador não está preso.");
    if(!(Player[playerid][Admin] >= 1)) return SCM(playerid, COR_BRANCO, "[FALHA]: Você não tem permissão para usar este comando.");
	new AdmLevel[256];
	if(Player[playerid][Admin] == 5) { AdmLevel = "Game Master"; }
	if(Player[playerid][Admin] == 4) { AdmLevel = "Sub Game Master"; }
	if(Player[playerid][Admin] == 3) { AdmLevel = "Administrador Fixo"; }
	if(Player[playerid][Admin] == 2) { AdmLevel = "Administrador Ajudante"; }
	if(Player[playerid][Admin] == 1) { AdmLevel = "Administrador Temporário"; }
	Player[id][TempoPreso] = 0;
	PresoADM[id] = 1;
    new string2[200];
    format(string2, sizeof(string2), "-GFInfo-: O %s foi solto pelo %s %s. | Motivo: %s", Nome(id), AdmLevel,Nome(playerid), motivo);
	SendClientMessageToAll(COR_NEGATIVO, string2);
	return 1;
}
CMD:prender(playerid, params[])
{
	new id, motivo[128], tempo;
 	if(sscanf(params, "uds", id, tempo, motivo)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /prender [id] [tempo] [motivo] ");
 	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
 	if(!(Player[playerid][Admin] >= 1)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(tempo >= 61) return SCM(playerid, COR_ERRO, "[FALHA]: O maximo de tempo preso é 60 minutos");
 	if(PresoADM[id] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Este player ja está na cadeia.");
 	if(tempo == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Para soltar alguém use /soltar [id].");
	new AdmLevel[256];
	if(Player[playerid][Admin] == 5) { AdmLevel = "Game Master"; }
	if(Player[playerid][Admin] == 4) { AdmLevel = "Sub Game Master"; }
	if(Player[playerid][Admin] == 3) { AdmLevel = "Administrador Fixo"; }
	if(Player[playerid][Admin] == 2) { AdmLevel = "Administrador Ajudante"; }
	if(Player[playerid][Admin] == 1) { AdmLevel = "Administrador Temporário"; }
 	Player[id][TempoPreso] = 60*tempo;
	SetPlayerPos(id, 197.3364,174.0059,1003.0234);
	SetPlayerInterior(id, 3);
    ResetPlayerWeapons(id);
    PresoADM[id] = 1;
    reduzirTempo(id);
    EmTrabalho[id] = 0;
    NaBoateVip[id] = 0;
    NoPuteiro[id] = 0;
    NoQuarto2[id]=0;
    SalvarDados(id);
    new string2[200];
	format(string2, sizeof(string2), "-GFInfo-: %s foi preso pelo %s %s por %d minutos. | Motivo: %s", Nome(id), AdmLevel, Nome(playerid), tempo, motivo);
	SendClientMessageToAll(COR_NEGATIVO, string2);
	new string[200], string1[200];
	format(string, 128, "{FF0000}VOCÊ FOI PRESO, MOTIVO: {FF0000}%s\n\n",motivo);
	strcat(string1,string);
	format(string, sizeof(string), "{FFFFFF}Nick de quem te prendeu: {FF0000}%s\n", Nome(playerid));
	strcat(string1,string);
	format(string, sizeof(string), "{FFFFFF}Tempo Preso: {FF0000}%d minuto(s)\n", tempo);
	strcat(string1,string);
	ShowPlayerDialog(id, 7561, DIALOG_STYLE_MSGBOX, "{FF0000}» {FFFFFF}VOCÊ FOI PRESO {FF0000}«", string1, "Fechar", "");
	return 1;
}
CMD:apm(playerid)
{
    if(Player[playerid][Admin]<3)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][BlockPM] == true)
	{
		Player[playerid][BlockPM] = false;
		SCM(playerid, COR_PRINCIPAL, "[INFO]: Menssagem privada desbloqueada com sucesso");
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu PM ja está desbloqueado!");
	return 1;
}
CMD:bpm(playerid, params[])
{
	if(Player[playerid][Admin]<3)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(sscanf(params, "s", Mtv)) return SCM(playerid, COR_USOCORRETO,"Uso correto: /bpm [motivo]");
	if(Player[playerid][BlockPM] == false)
	{
	    new string[126];
		Player[playerid][BlockPM] = true;
		format(string, sizeof(string),"[INFO]: Menssagem privada bloqueada com sucesso, motivo: '%s'.", Mtv);
		SCM(playerid, COR_PRINCIPAL, string);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Seu PM já está bloqueado, para desbloquear digite /apm!");
	return 1;
}
CMD:tempban(playerid, params[])
{
    new id, dias, reason[60], string[150];
    if(Player[playerid][Admin] < 1) return SCM(playerid, COR_ERRO, "[FLAHA]: Você não tem permissão para usar esse comando!");
	if(sscanf(params, "uds[60]", id, dias, reason)) return SCM(playerid, COR_USOCORRETO,"Uso correto: /ban [id ou nick] [dias] [motivo]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Player não conectado.");
	format(string, sizeof(string), "AdmCMD: O %s %s baniu %s por %d dias. | Motivo: %s", AccountName(playerid), Nome(playerid), Nome(id), dias, reason);
	SendClientMessageToAll(COR_NEGATIVO, string);
	BanExtend(playerid, id, reason, dias);
	SetTimerEx("TimerKick", 200, 0, "i", id);
    return true;
}
CMD:desban(playerid, params[])
{
    if(Player[playerid][Admin] < 4) return SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar esse comando!");
    if(!strlen(params)) return SCM(playerid, COR_USOCORRETO,"Uso correto: /desban [nick ou ip]");

	new Query[128];
    format(Query, sizeof(Query),"SELECT * FROM `banlist` WHERE (`Name`='%s' OR `IP`='%s') LIMIT 1", params, params);
    new Cache:result = mysql_query(conectDB, Query, true);

    if(cache_get_row_count(conectDB) > 0)
    {
        format(Query, sizeof(Query),"DELETE FROM `banlist` WHERE(`Name`='%s' OR `IP`='%s')", params, params);
        mysql_tquery(conectDB, Query);
	    new Str1[999];
	    format(Str1, sizeof(Str1),"{FFBD9D}-OpenServ- O %s %s desbaniu %s.", AccountName(playerid), Nome(playerid), params);
	    MensagemAdmin(Str1);
    }
    else SendFormattedMessage(playerid, COR_ERRO,"[FALHA]: Não foi possivel encontrar \"%s\" no banco de dados.", params);
    cache_delete(result);
	return true;
}
CMD:armas(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][Admin] < 3)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	ShowPlayerDialog(playerid, DIALOG_ARMAS, DIALOG_STYLE_LIST, "{FFFFFF}Armas - {0000EE}GF", "Cacetete\nFaca\nSoco Ingles\nTaco de beisebol\nPá\nKatana\nSerra elétrica\nVibrador Roxo\nVibrador Pequeno\nVibrador Largo\nFlores\nBomba de gás\nShotgun\nSawn-off Shotgun\nAK-K7\nMP5\nSpray\nExtintor\nCâmera\nParaquedas", "Pegar", "Cancelar");
	return 1;
}
CMD:criar(playerid)
{
	if(Player[playerid][Admin] < 2) return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um administrador para criar uma enquete!");
	if(EnqueteAberta == true) return SCM(playerid,COR_ERRO,"[FALHA]: No momento já existe uma enquete aberta");
 	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	ShowPlayerDialog(playerid,DIALOG_EN,DIALOG_STYLE_INPUT,"Criar Enquete","Por favor digite sua pergunta para enquete","Criar","Cancelar");
	return 1;
}
CMD:nao(playerid)
{
	if(PlayerVotou[playerid] == 1) return SCM(playerid,COR_ERRO,"[FALHA]: Você já votou!");
	if(EnqueteAberta == false) return SCM(playerid,COR_ERRO,"[FALHA]: Nenhuma enquete está aberta!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	TotalDeVotosNao++;
	PlayerVotou[playerid] = 1;
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Obrigado por participar da enquete! Sua resposta: Não");
	return 1;
}

CMD:sim(playerid)
{
	if(PlayerVotou[playerid] == 1) return SCM(playerid,COR_ERRO,"[FALHA]: Você já votou!");
	if(EnqueteAberta == false) return SCM(playerid,COR_ERRO,"[FALHA]: Nenhuma enquete está aberta!");
 	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	TotalDeVotosSim++;
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Obrigado por participar da enquete! Sua resposta: Sim");
	PlayerVotou[playerid] = 1;
	return 1;
}
CMD:fechar(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][Admin] < 2)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um administrador para criar uma enquete!");
	if(EnqueteAberta == false)return SCM(playerid,COR_ERRO,"[FALHA]: No momento já existe uma enquete aberta");
	SendClientMessageToAll(-1, " ");
	SendClientMessageToAll(COR_PRINCIPAL, "-------------------------------------------------------------------------------");
	SendFormattedMessageToAll(COR_REPORTER, "O Administrador %s acaba de fechar uma enquete.", Nome(playerid));
	SendFormattedMessageToAll(COR_BRANCO, "A pergunta foi: %s", NomeEnquete);
	SendFormattedMessageToAll(COR_PRINCIPAL, "Resultado: Sim [%d] | Não [%d] | Votos [%d].", TotalDeVotosSim, TotalDeVotosNao, (TotalDeVotosSim + TotalDeVotosNao));
	if(TotalDeVotosSim > TotalDeVotosNao) SendClientMessageToAll(COR_PRINCIPAL, "A Maioria Concorda");
	if(TotalDeVotosNao > TotalDeVotosSim) SendClientMessageToAll(COR_PRINCIPAL, "A Maioria Discorda");
	if(TotalDeVotosNao == TotalDeVotosSim) SendClientMessageToAll(COR_PRINCIPAL, "Empate");
	SendClientMessageToAll(COR_PRINCIPAL, "-------------------------------------------------------------------------------");
	TotalDeVotosSim = 0;
	TotalDeVotosNao = 0;
	EnqueteAberta = false;
	for(new i; i <= HighestID; i++)
		if(PlayerVotou[i] == 1)
	{
		PlayerVotou[i] = 0;
	}
	return 1;
}
CMD:dt(playerid)
{
	new string[80];
	if(!(Player[playerid][Admin] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	for(new i = 0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 50)
	if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	{
		ResetPlayerWeapons(i);
		format(string, sizeof(string),"[ ! ] - {ffffff}%s {C798FA}desarmou todos ao seu redor.", Nome(playerid));
		SCM(i, COR_ROXO, string);
 	}
	return 1;
}
CMD:desarmar(playerid, params[])
{
	new id, string[70];
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /desarmar [id]");
	if(!(Player[playerid][Admin] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Logado{id}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador não está logado!");
	ResetPlayerWeapons(id);
	format(string, sizeof(string), "[INFO]: Você desarmou %s.", Nome(id));
	SCM(playerid, COR_PRINCIPAL, string);
	format(string, sizeof(string), "[INFO]: O Administrador %s te desarmou.", Nome(playerid));
	SCM(id, COR_PRINCIPAL, string);
	return 1;
}
CMD:supertapa(playerid, params[])
{
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /supertapa [id]");
	if(Player[playerid][Admin] < 2)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Logado{id}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador não está logado!");
	new Float: px, Float: py, Float: pz,string[120];
    GetPlayerPos(id, px, py, pz);
	SetPlayerPos(id, px, py, pz+90);
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}levou um super tapa de {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
	MensagemLocal(id, COR_ROXO, string, 60);
	return 1;
}
CMD:coletetvidat(playerid)
{
	if(!(Player[playerid][Admin] >= 1 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] == 4 || Player[playerid][PCRJ] >= 4 || Player[playerid][PMRJ] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Evento == 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você não pode fazer isto, pois esta em um evento");
	for(new i = 0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 50)
	if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	{
	    new string[95];
		SetPlayerArmour(i, 100);
		SetPlayerHealth(i, 100);
		format(string, sizeof(string),"[ ! ] - {ffffff}%s {C798FA}deu colete e vida para todos perto dele.", Nome(playerid));
		SCM(i, COR_ROXO, string);
	}
	return 1;
}
CMD:coletet(playerid)
{
	if(!(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 1 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] == 4 || Player[playerid][PCRJ] >= 4 || Player[playerid][PMRJ] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Evento == 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você não pode fazer isto, pois esta em um evento");
	for(new i = 0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 50)
	if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	{
	    new string[85];
		SetPlayerArmour(i, 100);
		format(string, sizeof(string),"[ ! ] - {ffffff}%s {C798FA}deu colete para todos perto dele.", Nome(playerid));
		SCM(i, COR_ROXO, string);
	}
	return 1;
}
CMD:vidat(playerid)
{
	if(!(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 1 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] == 4 || Player[playerid][PCRJ] >= 4 || Player[playerid][PMRJ] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Evento == 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você não pode fazer isto, pois esta em um evento");
	for(new i = 0; i <= HighestID; i++)
	if(GetDistanceBetweenPlayers(playerid, i) <= 50)
	if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	{
	    new string[85];
		SetPlayerHealth(i, 100);
		format(string, sizeof(string),"[ ! ] - {ffffff}%s {C798FA}deu vida para todos perto dele.", Nome(playerid));
		SCM(i, COR_ROXO, string);
	}
	return 1;
}
CMD:acessorio(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
    if(!(Player[playerid][Admin] >= 5))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COR_ERRO, "[FALHA]: Você precisa sair do veículo!");
    ShowBrinquedos(playerid);
	return 1;
}
CMD:tiraracessorio(playerid)
{
    for(new i=0; i< MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
    SendClientMessage(playerid, COR_PRINCIPAL, "[INFO]: Seu acessório foi removido com sucesso!");
    return 1;
}
CMD:cnn(playerid, params[])
{
	if(!(Player[playerid][Admin] >= 1 || Player[playerid][Cargo] >= 4 || Player[playerid][Lider] >= 1 || Player[playerid][Dono] >= 1 || Player[playerid][PCRJ] >= 4 || Player[playerid][PMRJ] >= 4))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params, "s", params)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /cnn [mensagem]");
	new string[70];
	format(string, sizeof(string), "~b~%s: ~w~%s", Nome(playerid), params);
	for(new i = 0; i <= HighestID; i++)
	{
		if(GetDistanceBetweenPlayers(playerid, i) <= 50)
		{
			if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
			{
				if(IsPlayerConnected(i))
				{
					GameTextForPlayer(i, string, 5000, 5);
				}
			}
		}
	}
	return 1;
}
CMD:pinfo(playerid, params[])
{
	new id, text[40];
	if(Player[playerid][Admin] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para este comando");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /pinfo [id]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");

	new ammo = GetPlayerAmmo(id);
	new Float:health;
	new ip[24];
	new Float:armour;
	new ping = GetPlayerPing(id);
	new money = GetPlayerMoney(id);
	new level = GetPlayerScore(id);

    GetPlayerHealth(id,health);
	GetPlayerArmour(id,armour);
	GetPlayerIp(id, ip, sizeof ip);
	
	if(Player[id][Vip] >= 1) text = "Sim";
	else text = "Não";
	SendFormattedMessage(playerid, COR_BRANCO,"|{0000FF}__________ {FFFFFF}Informações de %s {0000FF}__________{FFFFFF}|", Nome(id));
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}IP: {FFFFFF}%s", ip);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Level: {FFFFFF}%d", level);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Vida: {FFFFFF}%.1f", health);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Colete: {FFFFFF}%.1f", armour);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Munição da arma na mão: {FFFFFF}%d", ammo);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Ping: {FFFFFF}%d", ping);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Dinheiro: {FFFFFF}%d", money);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Cash: {FFFFFF}%d", Player[id][Cash]);
	SendFormattedMessage(playerid, COR_BRANCO,"{0000FF}Vip: {FFFFFF}%s", text);
	return 1;
}
CMD:clima(playerid, params[])
{
	new id;
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][Admin] < 5) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para esse comando");
	if(sscanf(params,"d",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /clima [id]");
    SetWeather(id);
	SendFormattedMessageToAll(COR_BRANCO, "AdmCMD: O Administrador %s mudou o clima para o id %d.", Nome(playerid), id);
	return 1;
}
CMD:tempo(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(Player[playerid][Admin] < 5)return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	ShowPlayerDialog(playerid, DIALOG_TEMPO, DIALOG_STYLE_LIST, "Escolha o horario:", "1Hora\n2Horas \n3Horas \n4Horas \n5Horas \n6Horas \n7Horas \n8Horas \n9Horas \n10Horas \n11Horas \n12Horas \n13Horas \n14Horas \n15Horas \n16Horas \n17Horas \n18Horas \n19Horas \n20Horas \n21Horas \n22Horas \n23Horas \n24Horas\nTempo Automático", "OK", "Cancelar");
	return 1;
}
CMD:setlider(playerid,params[])
{
	new id, level,string[256];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(!IsPlayerAdmin(playerid)) return SCM(playerid,COR_ERRO, "[FALHA]: Você tem que está logado na rcon para utilizar esse comando.");
	if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setlider [id] [level]");
	if(level > 1) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level a ser setado é 1.");
	if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	new cargotext[30];
	if(Player[id][Faccoes] == 12) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 11) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 10) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 9) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 8) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 7) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 6) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 5) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 4) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 3) { cargotext = "CMD" ; }
	if(Player[id][Faccoes] == 2) { cargotext = "CMD" ; }
	if(Player[id][Faccoes] == 1) { cargotext = "CMD"; }
	if(level >=1)
	{
		format(string,sizeof(string),"{33AAFF}AdmCMD: O Administrador %s te setou de Líder %s.",Nome(playerid),cargotext);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}AdmCMD: Você setou %s de Líder %s.",Nome(id),cargotext);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Lider] = level;
		SalvarDados(id);
		format(string, sizeof(string),"{FFBD9D}AdmCMD: O Administrador %s setou %s de Líder %s.", Nome(playerid), Nome(id), cargotext);
		MensagemAdmin(string);
		printf("[SET LIDER]: AdmCMD: O Administrador %s setou %s de Líder %s.", Nome(playerid), Nome(id),cargotext);
	}
	if(level == 0)
	{
		format(string,sizeof(string),"AdmCMD: O Administrador %s te desetou de Líder %s.",Nome(playerid),cargotext);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"AdmCMD: Você desetou %s de Líder %s.",Nome(id),cargotext);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Lider]=level;
		SalvarDados(id);
		format(string, 128,"{FFBD9D}AdmCMD: O Administrador %s desetou %s de Líder %s.", Nome(playerid), Nome(id), cargotext);
		MensagemAdmin(string);
		printf("[SET LIDER]: AdmCMD: O Administrador %s desetou %s de Líder %s.", Nome(playerid), Nome(id),cargotext);
	}
	return 1;
}
CMD:setdono(playerid,params[])
{
	new id, level,string[256];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Lider]<1) return SCM(playerid,COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setdono [id] [level]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(level > 1) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level a ser setado é 1.");
	if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	new cargotext[80],favela[80];
	if(Player[id][Faccoes] == 12) { favela = "Tres Pontes"; }
	if(Player[id][Faccoes] == 10) { favela = "Bateau Mouche"; }
	if(Player[id][Faccoes] == 11) { favela = "Cesarão"; }
	if(Player[id][Faccoes] == 9) { favela = "Sapo de Camará"; }
	if(Player[id][Faccoes] == 8) { favela = "Muquiço"; }
	if(Player[id][Faccoes] == 7) { favela = "Vila Aliança"; }
	if(Player[id][Faccoes] == 6) { favela = "Morro do Urubu"; }
	if(Player[id][Faccoes] == 5) { favela = "Morro do Juramento"; }
	if(Player[id][Faccoes] == 4) { favela = "Morro da Primavera"; }
	if(Player[id][Faccoes] == 3) { favela = "Antares"; }
	if(Player[id][Faccoes] == 2) { favela = "Martins"; }
	if(Player[id][Faccoes] == 1) { favela = "Morro do Engenho"; }
	
	if(Player[id][Faccoes] == 12) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 11) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 10) { cargotext = "MLC"; }
	if(Player[id][Faccoes] == 9) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 8) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 7) { cargotext = "3CP"; }
	if(Player[id][Faccoes] == 6) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 5) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 4) { cargotext = "LLL"; }
	if(Player[id][Faccoes] == 3) { cargotext = "CMD" ; }
	if(Player[id][Faccoes] == 2) { cargotext = "CMD" ; }
	if(Player[id][Faccoes] == 1) { cargotext = "CMD"; }
	if(level >=1)
	{
		if(Player[id][Dono]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player já está setado de dono.");
		format(string,sizeof(string),"{33AAFF}-GFInfo-: O Líder %s do %s te setou de dono. | %s",Nome(playerid),cargotext,favela);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}-GFInfo-: Você setou %s da facção %s de dono. | %s",Nome(id),cargotext, favela);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Dono]=level;
		SalvarDados(id);
		format(string, 128,"{FFBD9D}-GFInfo-: O Líder %s do %s setou %s de dono. | %s", Nome(playerid), cargotext, Nome(id),favela);
		MensagemAdmin(string);
		printf("[SET DONO]: -GFInfo-: O Líder %s do %s setou %s de dono. | %s", Nome(playerid), Nome(id),cargotext);
	}
	if(level ==0)
	{
		if(Player[id][Dono]==0)return SCM(playerid,COR_ERRO,"[FALHA]: Este player não está setado de dono.");
		format(string,sizeof(string),"{33AAFF}-GFInfo-: O Líder %s do %s te desetou de dono. | %s",Nome(playerid),cargotext,favela);
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}-GFInfo-: Você desetou %s da facção %s de dono. | %s",Nome(id),cargotext, favela);
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Dono]=level;
		SalvarDados(id);
		format(string, 128,"{FFBD9D}-GFInfo-: O Líder %s do %s desetou %s de dono. | %s", Nome(playerid), cargotext, Nome(id),favela);
		MensagemAdmin(string);
		printf("[SET DONO]: -GFInfo-: O Líder %s do %s desetou %s de dono. | %s", Nome(playerid), Nome(id),cargotext);
	}
	return 1;
}
CMD:setcargo(playerid, params[])
{
	new id, level; new cargo [40];
    if(Logado{playerid} == false) return SCM(playerid,COR_ERRO,"[FALHA]: Você não está logado para utilizar este comando.");
    if(Player[playerid][Dono] < 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	if(sscanf(params, "ud", id, level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setcargo [id] [level]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COR_ERRO, "[FALHA] Jogador não conectado");
    if(level > 4) return SCM(playerid, COR_ERRO, "[FALHA] O Máximo De Level a se dar é 4");
    if(!(Player[id][Faccoes] == Player[playerid][Faccoes]))return SCM(playerid,COR_ERRO,"[FALHA]: Este player não é de sua favela.");
	new cargo2[30];
    if(Player[playerid][Dono]==1){cargo2 = "Dono do Morro";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 1){cargo2 = "Líder CMD";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 2){cargo2 = "Líder CMD";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 3){cargo2 = "Líder CMD";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 4){cargo2 = "Líder LLL";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 5){cargo2 = "Líder LLL";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 6){cargo2 = "Líder LLL";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 7){cargo2 = "Líder 3CP";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 8){cargo2 = "Líder 3CP";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 9){cargo2 = "Líder 3CP";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 10){cargo2 = "Líder MLC";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 11){cargo2 = "Líder MLC";}
    if(Player[playerid][Lider]==1 && Player[playerid][Faccoes] == 12){cargo2 = "Líder MLC";}
    if(level >=1)
    {
        if(level == 1 && GetPlayerScore(id) < 20) return SCM(playerid, COR_ERRO,"[FALHA]: O Score minimo de setagem de Fogueteiro é 20");
        if(level == 2 && GetPlayerScore(id) < 40) return SCM(playerid, COR_ERRO,"[FALHA]: O Score minimo de setagem de Vapor é 40");
        if(level == 3 && GetPlayerScore(id) < 100) return SCM(playerid, COR_ERRO,"[FALHA]: O Score minimo de setagem de Gerente é 100");
        if(level == 4 && GetPlayerScore(id) < 150) return SCM(playerid, COR_ERRO,"[FALHA]: O Score minimo de setagem de Frente é 150");
		if(level == 1){cargo = "Fogueteiro";}
		else if (level == 2){cargo = "Vapor";}
		else if (level == 3){cargo = "Gerente";}
		else if (level == 4){cargo = "Frente";}
		Player[id][Cargo]=level;
		SalvarDados(id);
		SalvarDados(playerid);
		SendFormattedMessage(playerid,COR_PRINCIPAL,"{33AAFF}-GFInfo-: Você setou %s de %s.",Nome(id), cargo);
		SendFormattedMessage(id,COR_PRINCIPAL,"{33AAFF}-GFInfo-: Você foi setado de %s pelo %s %s.",cargo, cargo2,Nome(playerid));
	}
    if(level ==0)
    {
		if(level == 1){cargo = "Fogueteiro";}
		else if (level == 2){cargo = "Vapor";}
		else if (level == 3){cargo = "Gerente";}
		else if (level == 4){cargo = "Frente";}
		Player[id][Cargo]=level;
		SalvarDados(id);
		SalvarDados(playerid);
		SendFormattedMessage(playerid,COR_PRINCIPAL,"{33AAFF}-GFInfo-: Você retirou o cargo do %s.",Nome(id));
		SendFormattedMessage(id,COR_PRINCIPAL,"{33AAFF}-GFInfo-: Você foi desetado pelo %s %s.", cargo2,Nome(playerid));
	}
    return 1;
}
CMD:setadmin(playerid,params[])
{
	new id, level, string[256];
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!IsPlayerAdmin(playerid)) return SCM(playerid,COR_ERRO, "[FALHA]: Você tem que está logado na rcon para utilizar esse comando.");
	if(sscanf(params,"ud",id,level)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /setadmin [id] [level]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(level > 5) return SCM(playerid, COR_ERRO, "[FALHA]: Máximo de Level a ser setado é 5.");
	if(Logado{id} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Este jogador não está Logado.");
	new AdmLevel[40];
	if(Player[playerid][Admin] == 5) { AdmLevel = "Game Master"; }
	if(Player[playerid][Admin] == 4) { AdmLevel = "Sub Game Master"; }
	if(Player[playerid][Admin] == 3) { AdmLevel = "Administrador Fixo"; }
	if(Player[playerid][Admin] == 2) { AdmLevel = "Administrador Ajudante"; }
	if(Player[playerid][Admin] == 1) { AdmLevel = "Administrador Temporário"; }
	if(level>=1)
	{
		format(string,sizeof(string),"{33AAFF}AdmCMD: O %s %s te setou de administrador level %d.",AdmLevel,Nome(playerid),level);
		SCM(id, COR_PRINCIPAL,string);
		format(string,sizeof(string),"{33AAFF}AdmCMD: Você setou %s de administrador level %d.",Nome(id),level);
		SCM(playerid, COR_PRINCIPAL,string);
		Player[id][Admin] = level;
		format(string, sizeof(string),"AdmCMD: %s foi promovido a nível %d de Administrador pelo %s.", Nome(id), level, Nome(playerid));
		MensagemAdmin(string);
		SalvarDados(id);
		
		printf("[SET ADMIN]: O %s %s setou %s de Administrador Level %d.", AdmLevel, Nome(playerid), Nome(id),level);
	}
	if(level==0)
	{
		format(string,sizeof(string),"[INFO]: O %s %s te desetou de administrador.",AdmLevel,Nome(playerid));
		SCM(id,COR_PRINCIPAL,string);
		format(string,sizeof(string),"[INFO]: Você retirou o administrador do player %s.",Nome(id));
		SCM(playerid,COR_PRINCIPAL,string);
		Player[id][Admin]=level;
		format(string, sizeof(string),"AdmCMD O %s %s desetou %s de Administrador.", AdmLevel,Nome(playerid), Nome(id));
		MensagemAdmin(string);
		SalvarDados(id);
		printf("[SET ADMIN]: O %s %s desetou %s de Administrador.", AdmLevel,Nome(playerid), Nome(id));
	}
	return 1;
}

CMD:at(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][Admin] >= 1)
	{
		SendClientMessageToAll(-1, "|________________Administração Avisa________________|");
		SendFormattedMessageToAll(COR_INFO, "Administrador %s: Viu Algo de Ilegal no Servidor? Use /reportar [id] [motivo]", Nome(playerid));
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:comandosadmin(playerid)
{
	if(Logado{playerid} == false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Admin] < 1)return SCM(playerid, COR_ERRO,"[FALHA]: Você não é um administrador para acessar este comando.");
    ComandosAdmin(playerid);
	return 1;
}
CMD:comandosdono(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Dono]==1))return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
    ComandosDono(playerid);
	return 1;
}
CMD:fogos(playerid)
{
    if(Player[playerid][Fogos] == 0) return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem fogos para soltar.");
    if(!(Player[playerid][Cargo] == 1)) return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
    animation[playerid] = 1;
    new strfo[75], Float: Pos[3];
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);

    StopLoopingAnim(playerid);
    LoopingAnim(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

    GameTextForPlayer(playerid, "~r~ Soltando rojao..", 2000, 1);
    Player[playerid][Fogos]--;

    SetTimerEx("PararAnimacoesAtivas", 2000, false, "d", playerid);
    for(new i=0;i < MAX_GZS;i++)
        if(GetDistanceBetweenPlayers(playerid, i) <= 200) PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/u/81837784/fogos.mp3", Pos[0], Pos[1], Pos[2], 200.0, 1);

    format(strfo, sizeof(strfo), "[ ! ] - {ffffff}%s {C798FA}está acendendo fogos.", Nome(playerid));
    MensagemLocal(playerid, COR_ROXO, strfo, 30);
    return 1;
}
CMD:brfrente(playerid)
{
	if(Player[playerid][BarreiraFrente] >= 1) return SCM(playerid, COR_ERRO,"[FALHA]: Você já usou /brfrente, use /rbrfrente para poder usar novamente!");
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 2314.5869,-4.6078,26.7422))return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode criar barricadas no banco!");
	if(Player[playerid][Cargo] == 4 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1)
	{
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		Player[playerid][BarreiraFrente] = CreateObject(3578, X, Y, Z, 0.0, 0.0, A);
		SetPlayerPos(playerid, X, Y, Z+4);
		new string[75];
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}criou uma barreira.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 50);
	}
	else
	SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:rbrfrente(playerid)
{
	if(Player[playerid][BarreiraFrente] == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você não usou /brfrente!");
	if(Player[playerid][Cargo] == 4 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1)
	{
		DestroyObject(Player[playerid][BarreiraFrente]);
		Player[playerid][BarreiraFrente] = 0;
		new string[75];
		format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}destruiu uma barreira.", Nome(playerid));
		MensagemLocal(playerid, COR_ROXO, string, 50);
	}
	return 1;
}
CMD:rbrallfrente(playerid)
{
	if(Player[playerid][Admin] >= 5)
	{
		for(new i = 0; i <= HighestID; i++)
		{
			DestroyObject(Player[i][BarreiraFrente]);
			Player[i][BarreiraFrente] = 0;
		}
		new string[128];
		format(string,sizeof(string),"[AVISO]: Todas as barreiras de frente foram retiradas por %s.", Nome(playerid));
		SendClientMessageToAll(0x0000FFFF, string);
	}
	else
	SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");
	return 1;
}
CMD:comandosfogueteiro(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Cargo]==1))return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
    ComandosFogueteiro(playerid);
	return 1;
}
CMD:comandosfrente(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Cargo]==4))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	ComandosFrente(playerid);
	return 1;
}

CMD:comandosgerente(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Cargo]==3))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	ComandosGerente(playerid);
	return 1;
}
CMD:comandosvapor(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Cargo]==2))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando.");
	ComandosVapor(playerid);
	return 1;
}
CMD:usarcocaina(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Cocaina]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem cocaina para cheirar.");
	new Float:colete = 0;
	GetPlayerArmour(playerid, colete);
	SetPlayerArmour(playerid, 2.0 + colete);
	Player[playerid][Cocaina]--;
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
	SetPlayerWeather(playerid,784877);
	SetTimerEx("EfeitoDrogas", 60000, 0, "i", playerid);
    new string[75];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}está cheirando cocaina.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO,string, 20);
	return 1;
}
CMD:usarmaconha(playerid)
{
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Player[playerid][Maconha]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem maconha para usar.");
	new Float:colete = 0;
	GetPlayerArmour(playerid, colete);
	SetPlayerArmour(playerid, 2.0 + colete);
	Player[playerid][Maconha]--;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	SetPlayerWeather(playerid,9);
	SetTimerEx("EfeitoDrogas", 60000, 0, "i", playerid);
    new string[75];
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}está fumando maconha.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 20);
	return 1;
}
CMD:pegardrogas(playerid)
{
        new tipo;
        new f = MAX_OBJ+1;
        new pegou; pegou = 5;
        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
        for(new a = 0; a < MAX_OBJ; a++)
        {
                if(IsPlayerInRangeOfPoint(playerid, 1.0, iDrogaData[a][OPOS][0], iDrogaData[a][OPOS][1], iDrogaData[a][OPOS][2]))
                {
                f = a;
                pegou = 10;
                break;
            }
        }
        if(f > MAX_OBJ) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode pegar, pois não tem nada no chao.");
        tipo = iDrogaData[f][DDATA][0];
        if(pegou == 10)
        {
                if(tipo == 1)
                {
                        pegou = 5;
                        DestroyObject(iDrogaData[f][OID]);
                        Delete3DTextLabel(iDrogaData[f][TID]);
                        GivePlayerCocaina(playerid, iDrogaData[f][DDATA][1]);
                        SCM(playerid, COR_PRINCIPAL, "[INFO]: Você pegou a cocaina que havia no chão.");
                }
                if(tipo == 2)
                {
                        pegou = 5;
                        DestroyObject(iDrogaData[f][OID]);
                        Delete3DTextLabel(iDrogaData[f][TID]);
                        GivePlayerMaconha(playerid, iDrogaData[f][DDATA][1]);
                        SCM(playerid, COR_PRINCIPAL, "[INFO]: Você pegou a maconha que havia no chão.");
                }
        }
        return 1;
}
CMD:esconderdrogas(playerid, params [])
{
    new _String[128];
    new tipo, quant;
    new f = MAX_OBJ+1;
	if(sscanf(params, "dd", tipo, quant)) return SCM(playerid, COR_ERRO, "[FALHA]: /esconderdrogas [1(Cocaina)/2(Maconha)] [quantidade]");
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
    for(new a = 0; a < MAX_OBJ; a++)
    {
        if(iDrogaData[a][OPOS][0] == 0.0)
        {
            f = a;
            break;
        }
    }
    if(f > MAX_OBJ) return SCM(playerid, COR_ERRO, "[FALHA]: O maximo de itens no chao foi atingido, por favor relate a um administrador.");
	if(tipo == 1)
    {
        if(Player[playerid][Cocaina] >= quant)
        {
            GetPlayerPos(playerid, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2]);
            iDrogaData[f][OID] = CreateObject(1580, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2]-1, 0.0, 0.0, 0.0);
            format(_String, sizeof(_String), "<Cocaina>\nQuantidade: %d\n</>", quant);
            iDrogaData[f][TID] = Create3DTextLabel(_String, -1, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2], 3.0, 0, 0);
            SCM(playerid, COR_PRINCIPAL, "[INFO]: Você largou um pacote de cocaina.");
            RemovePlayerCocaina(playerid, quant);
            iDrogaData[f][DDATA][0] = tipo;
            iDrogaData[f][DDATA][1] = quant;
        }
    }
	else if(tipo == 2)
    {
        if(Player[playerid][Maconha] >= quant)
        {
            GetPlayerPos(playerid, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2]);
            iDrogaData[f][OID] = CreateObject(1580, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2]-1, 0.0, 0.0, 0.0);
            format(_String, sizeof(_String), "<Maconha>\nQuantidade: %d\n</>", quant);
            iDrogaData[f][TID] = Create3DTextLabel(_String, -1, iDrogaData[f][OPOS][0], iDrogaData[f][OPOS][1], iDrogaData[f][OPOS][2], 3.0, 0, 0);
            SCM(playerid, COR_PRINCIPAL, "[INFO]: Você largou um pacote de maconha");
            RemovePlayerMaconha(playerid, quant);
            iDrogaData[f][DDATA][0] = tipo;
            iDrogaData[f][DDATA][1] = quant;
        }
    }
    return 1;
}
CMD:vendermaconha(playerid, params[])
{
    if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    if(IsPlayerConnected(playerid))
	{
	    new playa, money, needed, tmp[264], idx, giveplayer[MAX_PLAYER_NAME+1], sendername[MAX_PLAYER_NAME+1], string[264];
	    if(Player[playerid][Cargo] != 2){ SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");	return 1;}
		tmp = strtok(params, idx);
		if(!strlen(tmp)){ SCM(playerid, COR_ERRO, "Uso correto: /vendermaconha [id/nome] [quantia] [preço]."); return 1;}
		playa = ReturnUser(tmp);
		tmp = strtok(params, idx);
		if(!strlen(tmp)) { return 1; }
		needed = strval(tmp);
		if(needed < 1 || needed > 100) { SCM(playerid, COR_ERRO, "[FALHA]: Número máximo de maconha vendida por vêz é de 100."); return 1; }
		tmp = strtok(params, idx);
		if(!strlen(tmp)) { return 1; }
		money = strval(tmp);
		if(money < 1 || money > 100) { SCM(playerid, COR_ERRO, "[FALHA]: Preço minímo de 1 a máximo 100."); return 1; }
		if(needed > Player[playerid][Maconha]) { SCM(playerid, COR_ERRO, "[FALHA]: Você não possui essa quantidade de maconha com você!"); return 1; }
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
				if (ProxDetectorS(8.0, playerid, playa))
				{
				    if(playa == playerid)
				    {
				        SCM(playerid, COR_ERRO, "[FALHA]: Você não pode vender para sí mesmo!");
				        return 1;
				    }
				    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "[INFO]: Você ofereceu a %s %d gramas de Maconha por R$%d .", giveplayer, needed, money);
					SCM(playerid, COR_PRINCIPAL, string);
					format(string, sizeof(string), "[INFO]: Vapor %s te ofereceu %d gramas de Maconha por R$%d, para comprar use [/AceitarMaconha].", sendername, needed, money);
					SCM(playa, COR_PRINCIPAL, string);
					MaconhaOffer[playa] = playerid;
					MaconhaPrice[playa] = money;
					MaconhaGram[playa] = needed;
				}
				else
				{
				    SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador está longe de você!");
				}
			}
		}
		else
		{
		    SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador não está on-line!");
		}
	}
	return 1;
}
CMD:vendercocaina(playerid, params[])
{
    if(Logado{playerid}==false)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
    if(IsPlayerConnected(playerid))
	{
	    new playa, money, needed, tmp[264], idx, giveplayer[MAX_PLAYER_NAME+1], sendername[MAX_PLAYER_NAME+1], string[264];
	    if(Player[playerid][Cargo] != 2){ SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando.");	return 1;}
		tmp = strtok(params, idx);
		if(!strlen(tmp)){ SCM(playerid, COR_USOCORRETO, "Uso correto: /vendercocaina [id/nome] [quantia] [preço]."); return 1;}
		playa = ReturnUser(tmp);
		tmp = strtok(params, idx);
		if(!strlen(tmp)) { return 1; }
		needed = strval(tmp);
		if(needed < 1 || needed > 100) { SCM(playerid, COR_ERRO, "[FALHA]: Número máximo de Cocaina vendida por vêz é de 100."); return 1; }
		tmp = strtok(params, idx);
		if(!strlen(tmp)) { return 1; }
		money = strval(tmp);
		if(money < 1 || money > 100) { SCM(playerid, COR_ERRO, "[FALHA]: Preço minímo de 1 a máximo 100."); return 1; }
		if(needed > Player[playerid][Cocaina]) { SCM(playerid, COR_ERRO, "[FALHA]: Você não possui essa quantidade de Cocaina com você!"); return 1; }
		if(IsPlayerConnected(playa))
		{
		    if(playa != INVALID_PLAYER_ID)
		    {
				if (ProxDetectorS(8.0, playerid, playa))
				{
				    if(playa == playerid)
				    {
				        SCM(playerid, COR_ERRO, "[FALHA]: Você não pode vender para sí mesmo!");
				        return 1;
				    }
				    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
				    format(string, sizeof(string), "[INFO]: Você ofereceu a %s %d gramas de Cocaina por R$%d .", giveplayer, needed, money);
					SCM(playerid, COR_PRINCIPAL, string);
					format(string, sizeof(string), "[INFO]: Vapor %s te ofereceu %d gramas de Cocaina por R$%d, para comprar use [/AceitarCocaina].", sendername, needed, money);
					SCM(playa, COR_PRINCIPAL, string);
					CocainaOffer[playa] = playerid;
					CocainaPrice[playa] = money;
					CocainaGram[playa] = needed;
				}
				else
				{
				    SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador está longe de você!");
				}
			}
		}
		else
		{
		    SCM(playerid, COR_ERRO, "[FALHA]: Esse jogador não está on-line!");
		}
	}
	return 1;
}
CMD:aceitar(playerid, params[])
{

    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");

    new x_job[128], idx, string[128], giveplayer[MAX_PLAYER_NAME+1], sendername[MAX_PLAYER_NAME+1];
	x_job = strtok(params, idx);
	if(!strlen(x_job)) {
		SCM(playerid, COR_USOCORRETO, "Uso correto: /aceitar [maconha/cocaina]");
		return 1;
	}
	if(strcmp(x_job,"maconha",true) == 0)
	{
	    if(MaconhaOffer[playerid] < 999)
	    {
	        if(GetPlayerMoney(playerid) > MaconhaPrice[playerid])
		    {
		        if(IsPlayerConnected(MaconhaOffer[playerid]))
		        {
		            if(GetPlayerMoney(playerid)<MaconhaPrice[playerid])return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar maconha.");
		            GetPlayerName(MaconhaOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[INFO]: Você comprou %d gramas de Maconha por R$%d do Vapor %s.",MaconhaGram[playerid],MaconhaPrice[playerid],giveplayer);
					SCM(playerid, COR_PRINCIPAL, string);
					format(string, sizeof(string), "[INFO]: %s comprou seus %d gramas de Maconha por R$%d.",sendername,MaconhaGram[playerid],MaconhaPrice[playerid]);
					SCM(MaconhaOffer[playerid], COR_PRINCIPAL, string);
					GivePlayerMoney(playerid, -MaconhaPrice[playerid]);
					GivePlayerMoney(MaconhaOffer[playerid], MaconhaPrice[playerid]);
					Player[playerid][Maconha] += MaconhaGram[playerid];
					Player[MaconhaOffer[playerid]][Maconha] -= MaconhaGram[playerid];
		            MaconhaOffer[playerid] = 999;
					MaconhaPrice[playerid] = 0;
					MaconhaGram[playerid] = 0;
					return 1;
				}
			}
			else
			{
			    SCM(playerid, COR_ERRO, "[FALHA]: Você não tem dinheiro o suficiente!");
			    return 1;
			}
	    }
	    else
	    {
	        SCM(playerid, COR_ERRO, "[FALHA]: Ninguem te ofereceu Maconha!");
	        return 1;
	    }
	}
	else if(strcmp(x_job,"cocaina",true) == 0)
	{
		if(CocainaOffer[playerid] < 999)
		{
			if(GetPlayerMoney(playerid) > CocainaPrice[playerid])
			{
				if(IsPlayerConnected(CocainaOffer[playerid]))
				{
					if(GetPlayerMoney(playerid)<CocainaPrice[playerid])return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem dinheiro suficiente para comprar cocaina.");
					GetPlayerName(CocainaOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[INFO]: Você comprou %d pó de Cocaina por R$%d do Traficante %s.",CocainaGram[playerid],CocainaPrice[playerid],giveplayer);
					SCM(playerid, COR_PRINCIPAL, string);
					format(string, sizeof(string), "[INFO]: %s comprou seus %d pó de Cocaina por R$%d.",sendername,CocainaGram[playerid],CocainaPrice[playerid]);
					SCM(CocainaOffer[playerid], COR_PRINCIPAL, string);
					GivePlayerMoney(playerid, -CocainaPrice[playerid]);
					GivePlayerMoney(CocainaOffer[playerid], CocainaPrice[playerid]);
					Player[playerid][Cocaina] += CocainaGram[playerid];
					Player[CocainaOffer[playerid]][Cocaina] -= CocainaGram[playerid];
				    CocainaOffer[playerid] = 999;
					CocainaPrice[playerid] = 0;
					CocainaGram[playerid] = 0;
					return 1;
				}
			}
			else
			{
			    SCM(playerid, COR_ERRO, "[FALHA]: Você não tem dinheiro o suficiente!");
			    return 1;
			}
		}
	}
	return 1;
}

CMD:a(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string))return SCM(playerid, COR_USOCORRETO, "Uso correto: /a [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(Player[playerid][Admin]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um administrador para acessar este comando.");
	format(string, sizeof(string),"{FF00FF}[CHAT ADMIN]: %s: %s ", Nome(playerid), string);
	MensagemAdmin(string);
	return 1;
}
CMD:g(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /g [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(!(Player[playerid][Cargo] == 3))return SCM(playerid,COR_ERRO,"[FALHA]: Você não é tem permissão.");
	format(string, sizeof(string),"{00FF00}[CHAT GERENTE]: %s: %s ", Nome(playerid), string);
	MensagemGerente(string);
	return 1;
}
CMD:dj(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /f [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(!(Player[playerid][DJ]>=1))return SCM(playerid, COR_ERRO,"[FALHA]: Você não é um DJ para acessar este comando.");
	format(string, sizeof(string),"{A020F0}[CHAT DJ]: %s: %s ", Nome(playerid), string);
	MensagemDJ(string);
	return 1;
}
CMD:f(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /f [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(!(Player[playerid][Cargo]==4))return SCM(playerid, COR_ERRO,"[FALHA]: Você não é um administrador para acessar este comando.");
	format(string, sizeof(string),"{00FF00}[CHAT FRENTE]: %s: %s ", Nome(playerid), string);
	MensagemFrente(string);
	return 1;
}
CMD:v(playerid,params[])
{
	new string[999];
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /v [texto]");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado.");
	if(Player[playerid][Vip] < 1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não é um membro vip para acessar este comando.");
	format(string, sizeof(string),"{00FFFF}[CHAT VIP]: %s: %s ", Nome(playerid), string);
	MensagemVip(string);
	return 1;
}
CMD:asay(playerid, params[])
{
	new string[999];
	if(Player[playerid][DelayAsay] == true)return SCM(playerid, COR_ERRO, "[FALHA]: Você usou o Asay recentemente, aguarde.");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(sscanf(params, "s[999]", string)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /asay [texto]");
	if(Player[playerid][Admin] >= 1)
	{
		SendFormattedMessageToAll(COR_ADMIN, "* Administrador %s: %s", Nome(playerid), string);
	}
	else if(Player[playerid][Lider] >= 1)
	{
		SendFormattedMessageToAll(0x9400D3FF, "[GLOBAL LÍDER FACÇÃO] {FFFFFF}%s>> {9400D3}%s", Nome(playerid), string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else if(Player[playerid][Dono] >= 1)
	{
		SendFormattedMessageToAll(0x9400D3FF, "[GLOBAL DONO DE MORRO] {FFFFFF}%s>> {9400D3}%s", Nome(playerid), string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else if(Player[playerid][Cargo] == 4)
	{
		SendFormattedMessageToAll(0x00A60096, "[GLOBAL FRENTE] {FFFFFF}%s>> {00A600}%s", Nome(playerid), string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else if(Player[playerid][Cargo] == 3)
	{
		SendFormattedMessageToAll(0x00A60096, "[GLOBAL GERENTE] {FF0000}%s>> {00A600}%s", Nome(playerid), string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else if(Player[playerid][Vip] >= 1)
	{
		SendFormattedMessageToAll(0xEEC900FF, "[GLOBAL VIP] {ffffff}%s>> {EEC900}%s", Nome(playerid), string);
		Player[playerid][DelayAsay] = true;
		SetTimerEx("TempoAsay", 5000, 0, "i", playerid);
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:tapa(playerid, params[])
{
    if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!(Player[playerid][Admin] >=1 || Player[playerid][Reporter] >=1 || Player[playerid][Cargo]==4 || Player[playerid][Lider] >= 1 || Player[playerid][Dono] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	new Float:health, id, Float:pos[3],string[112];
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /tapa [id]");
	if(!IsPlayerConnected(id))return SCM(playerid, COR_ERRO, "[FALHA]: ID inválido!");
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
 	if(Player[id][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está preso.");
	if(Player[id][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Este id está no hospital.");

	GetPlayerHealth(id, health);
	SetPlayerHealth(id, health-5);
	GetPlayerPos(id, pos[0], pos[1], pos[2]);
	SetPlayerPos(id, pos[0], pos[1], pos[2]+5);
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}levou um tapa de {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
	MensagemLocal(id, COR_ROXO, string, 60);
	return 1;
}
CMD:trazertodos(playerid)
{
	if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da arena UFC, e não pode puxar ninguém.");
    if(Player[playerid][TempoPreso] >= 1 || Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isso agora!");
	if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isto agora.");
	if(Player[playerid][Lider] >= 1 ||  Player[playerid][Dono]>=1 ||  Player[playerid][Cargo]>=4)
	{
		new favela[80],string[170];
		if(Player[playerid][Faccoes] == 12) { favela = "Tres Pontes"; }
		if(Player[playerid][Faccoes] == 10) { favela = "Bateau Mouche"; }
		if(Player[playerid][Faccoes] == 11) { favela = "Cesarão"; }
		if(Player[playerid][Faccoes] == 9) { favela = "Sapo de Camará"; }
		if(Player[playerid][Faccoes] == 8) { favela = "Muquiço"; }
		if(Player[playerid][Faccoes] == 7) { favela = "Vila Aliança"; }
		if(Player[playerid][Faccoes] == 6) { favela = "Morro do Urubu"; }
		if(Player[playerid][Faccoes] == 5) { favela = "Morro do Juramento"; }
		if(Player[playerid][Faccoes] == 4) { favela = "Morro da Primavera"; }
		if(Player[playerid][Faccoes] == 3) { favela = "Antares"; }
		if(Player[playerid][Faccoes] == 2) { favela = "Martins"; }
		if(Player[playerid][Faccoes] == 1) { favela = "Morro do Engenho"; }
		
		
    	for(new i = 0; i <  MAX_PLAYERS; i++)
    	{
	  		if(Player[i][Faccoes] == Player[playerid][Faccoes])
	        {
	            if(NoPuteiro[i] < 1)
	            {
		            if(!VerificarRival(i))return SCM(playerid, COR_ERRO, "[FALHA]: Alguns players não vinheram, pois estavão perto de membros de facções rivais.");
	    			if(Player[i][TempoPreso] >= 1 || EmTrabalho[i] >= 1 || Player[i][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Alguns players não vinheram pois estão em trabalho, no hospital ou preso.");
	    			new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
		         	SetPlayerInterior(i, GetPlayerInterior(playerid));
		          	SetPlayerPos(i, x, y, z);
					format(string, sizeof(string), "[ ! ] - {ffffff}O %s %s {C798FA}puxou todos da favela {ffffff}%s {C798FA}até ele.", AccountName(playerid), Nome(playerid), favela);
					MensagemLocal(playerid, COR_ROXO, string, 20);
	          	}
	        }
    	}
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	return 1;
}
CMD:trazerpmrjs(playerid)
{
	if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da arena UFC, e não pode puxar ninguém.");
    if(Player[playerid][TempoPreso] >= 1 || Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isso agora!");
	if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isto agora.");
	if(Player[playerid][PMRJ] >= 5)
	{
		new Float:x, Float:y, Float:z;
    	GetPlayerPos(playerid, x, y, z);
    	for(new i = 0; i < MAX_PLAYERS; i++)
    	{
  			if(Player[i][PMRJ])
        	{
	        	SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
	         	SetPlayerInterior(i, GetPlayerInterior(playerid));
	          	SetPlayerPos(i, x, y, z);
	          	new string[140];
				format(string, sizeof(string), "[ ! ] - {ffffff}O %s %s {C798FA}puxou todos da {ffffff}Policia Militar {C798FA}até ele.", AccountName(playerid), Nome(playerid));
				SCM(i, COR_ROXO, string);
        	}
    	}
	}
	else return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
 	return 1;
}
CMD:trazerpcrjs(playerid)
{
    if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da arena UFC, e não pode puxar ninguém.");
    if(Player[playerid][TempoPreso] >= 1 || Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isso agora!");
	if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode fazer isto agora.");
	if(Player[playerid][PCRJ] >= 5)
	{
		new Float:x, Float:y, Float:z;
    	GetPlayerPos(playerid, x, y, z);
    	for(new i = 0; i < MAX_PLAYERS; i++)
    	{
  			if(Player[i][PCRJ])
        	{
	        	SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
	         	SetPlayerInterior(i, GetPlayerInterior(playerid));
	          	SetPlayerPos(i, x, y, z);
	          	new string[140];
				format(string, sizeof(string), "[ ! ] - {ffffff}O %s %s {C798FA}puxou todos da {ffffff}Policia Cívil {C798FA}até ele.", AccountName(playerid), Nome(playerid));
				SCM(i, COR_ROXO, string);
        	}
    	}
	}
	else return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
 	return 1;
}
CMD:trazer(playerid, params[])
{
	new id,Float:plocx,Float:plocy,Float:plocz;
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /trazer [id]");
    if(Logado{playerid} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Logado{id} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Este player não está logado.");
	if(!IsPlayerConnected(id))return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da arena UFC, e não pode puxar ninguém.");
	if(Player[id][TempoPreso] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: O player está preso.");
	if(Player[playerid][TempoPreso] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[id][Lutador] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: O player está no meio de uma luta!");
	if(Presidio[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está preso.");
	if(Presidio[id]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está preso.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital.");
	if(NoPuteiro[id]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está no puteiro.");
	if(Player[id][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Este id está no hospital.");
	if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode trazer este player para boate vip");
	if(NaBoateVip[id] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está na boate VIP");
	if(NoPuteiro[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não pode trazer alguém ao puteiro.");
	if(Player[id][CityAdmin] == true) return SCM(playerid, COR_ERRO,"[FALHA]: Este id está na cidade dos administradores");
	if(OculpadoRGF[id]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está oculpado trabalhando como RGF!");
	if(ParticipandoEvento[id] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está participando de um evento.");
	if(GetPlayerState(id) == PLAYER_STATE_SPECTATING && Player[id][gSpectateID] != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Jogador escolhido está de /olhar em alguém.");
	if(GetPlayerInterior(playerid) > 0)
	if(IsPlayerInAnyVehicle(id))return SCM(playerid, COR_ERRO, "[FALHA]: O player que você quer puxar está em um veículo, não se pode trazer veículos à interiores.");
	if(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 3 || Player[playerid][DJ] >= 2 || Player[playerid][PCRJ] >= 2 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] >= 3 || Player[playerid][PMRJ] >= 2 || Player[playerid][Reporter] >= 3)
	{
		if(Player[id][BlockTR] == false)
		{
			new str[130];
			format(str, sizeof(str), "{C798FA}[ ! ] - {ffffff}%s {C798FA}foi puxado por {ffffff}%s.", Nome(id), Nome(playerid));
			MensagemLocal(playerid, COR_ROXO, str, 50);

			format(str, sizeof(str), "{C798FA}[ ! ] - {ffffff}%s {C798FA}puxou {ffffff}%s.", Nome(playerid), Nome(id));
			MensagemLocal(id, COR_ROXO, str, 50);

			GetPlayerPos(playerid, plocx, plocy, plocz);

			new intid = GetPlayerInterior(playerid);
			SetPlayerInterior(id,intid);

			new world = GetPlayerVirtualWorld(playerid);
			SetPlayerVirtualWorld(id, world);

			if (GetPlayerState(id) == 2)
			{
				new tmpcar = GetPlayerVehicleID(id);
				SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
			}
			else
			{
				SetPlayerPos(id,plocx,plocy+2, plocz);
			}
		}
		else SCM(playerid,COR_ERRO,"[FALHA]: Este player está com o trazer bloqueado.");
	}
	else
	{
	    SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:tr(playerid, params[])
{
	new id,Float:plocx,Float:plocy,Float:plocz;
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /trazer [id]");
    if(Logado{playerid} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Logado{id} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Este player não está logado.");
	if(!IsPlayerConnected(id))return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(TaUFC[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está dentro da arena UFC, e não pode puxar ninguém.");
	if(Player[id][TempoPreso] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: O player está preso.");
	if(Player[playerid][TempoPreso] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[id][Lutador] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: O player está no meio de uma luta!");
	if(Presidio[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você está preso.");
	if(Presidio[id]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está preso.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital.");
	if(NoPuteiro[id]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está no puteiro.");
	if(Player[id][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Este id está no hospital.");
	if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você não pode trazer este player para boate vip");
	if(NaBoateVip[id] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está na boate VIP");
	if(NoPuteiro[playerid]>=1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não pode trazer alguém ao puteiro.");
	if(Player[id][CityAdmin] == true) return SCM(playerid, COR_ERRO,"[FALHA]: Este id está na cidade dos administradores");
	if(OculpadoRGF[id]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está oculpado trabalhando como RGF!");
	if(ParticipandoEvento[id] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está participando de um evento.");
	if(GetPlayerState(id) == PLAYER_STATE_SPECTATING && Player[id][gSpectateID] != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Jogador escolhido está de /olhar em alguém.");
	if(GetPlayerInterior(playerid) > 0)
	if(IsPlayerInAnyVehicle(id))return SCM(playerid, COR_ERRO, "[FALHA]: O player que você quer puxar está em um veículo, não se pode trazer veículos à interiores.");

	if(Player[playerid][Admin] >= 1 || Player[playerid][DJ] >= 2 || Player[playerid][PMRJ] >= 2 || Player[playerid][PCRJ] >= 2 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] >= 3 || Player[playerid][Reporter] >= 3 || Player[playerid][pHelper] >= 3  || Player[playerid][MotoTaxi] >= 4 )
	{
		if(Player[id][BlockTR] == false)
		{
			new str[130];
			format(str, sizeof(str), "{C798FA}[ ! ] - {ffffff}%s {C798FA}foi puxado por {ffffff}%s.", Nome(id), Nome(playerid));
			MensagemLocal(playerid, COR_ROXO, str, 50);
			format(str, sizeof(str), "{C798FA}[ ! ] - {ffffff}%s {C798FA}puxou {ffffff}%s.", Nome(playerid), Nome(id));
			MensagemLocal(id, COR_ROXO, str, 50);

			GetPlayerPos(playerid, plocx, plocy, plocz);

			new intid = GetPlayerInterior(playerid);
			SetPlayerInterior(id,intid);

			new world = GetPlayerVirtualWorld(playerid);
			SetPlayerVirtualWorld(id, world);

			if (GetPlayerState(id) == 2)
			{
				new tmpcar = GetPlayerVehicleID(id);
				SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
			}
			else
			{
				SetPlayerPos(id,plocx,plocy+2, plocz);
			}
		}
		else SCM(playerid,COR_ERRO,"[FALHA]: Este player está com o trazer bloqueado.");
	}
	else
	{
	    SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	}
	return 1;
}
CMD:ocupado(playerid)
{
	if(!(Player[playerid][Reporter]>=1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	SCM(playerid,COR_REPORTER,"-RGFInfo-: Você entrou em modo ocupado, para entrar em modo livre digite, /livre!");
	OculpadoRGF[playerid]=1;
	return 1;
}
CMD:livre(playerid)
{
	if(!(Player[playerid][Reporter]>=1))return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	SCM(playerid,COR_REPORTER,"-RGFInfo-: Você entrou em modo livre, para entrar em modo ocupado digite /ocupado!");
	OculpadoRGF[playerid]=0;
	return 1;
}
CMD:ir(playerid, params[])
{
    new Float:x,Float:y,Float:z,id,intid = GetPlayerInterior(id), world = GetPlayerVirtualWorld(id), string[110],tmpcar = GetPlayerVehicleID(playerid);
	if(sscanf(params,"u",id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /ir [id]");
    if(Logado{playerid} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(Logado{id} == false)return SCM(playerid, COR_ERRO,"[FALHA]: Este player não está logado.");
	if(!IsPlayerConnected(id)) return SCM(playerid,COR_ERRO,"[FALHA]: Player não conectado.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital.");
	if(Player[id][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Este id está no hospital.");
    if(Player[id][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA] Este player está preso.");
    if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
    if(NoPuteiro[id]==1)return SCM(playerid,COR_ERRO,"[FALHA]: Não é permitido da /ir em player que esteje no puteiro.");
	if(NoPuteiro[playerid] == 1)return SCM(playerid, COR_ERRO,"[FALHA]: Não é permitido da /ir no puteiro.");
	if(Player[id][Lutador] > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está no meio de uma luta!");
    if(NaBoateVip[id] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está na boate VIP");
    if(NaBoateVip[playerid] == 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está na boate VIP");
    if(ParticipandoEvento[playerid] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está participando de um evento, para sair digite '/sairevento'");
    if(ParticipandoEvento[id] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Este player está participando de um evento.");
    if(Player[id][CityAdmin] == true) return SCM(playerid, COR_ERRO,"[FALHA]: Este id está na cidade dos administradores");
    if(Player[playerid][CityAdmin] == true) return SCM(playerid, COR_ERRO,"[FALHA]: Você está na cidade dos administradores");
	if(TaUFC[id] >= 1)return SCM(playerid,COR_ERRO,"[FALHA]: Este player está dentro da arena UFC.");
    if(TaUFC[playerid] >= 1)return SCM(playerid, COR_ERRO,"[FALHA]: Você está dentro da Arena UFC.");
	if(GetPlayerState(id) == PLAYER_STATE_SPECTATING && Player[id][gSpectateID] != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Jogador escolhido está de /olhar em alguém.");

    if(!(Player[playerid][Admin] >= 1 || Player[playerid][pHelper] >= 2 || Player[playerid][MotoTaxi] >= 3 || Player[playerid][PMRJ] >= 3 || Player[playerid][Reporter] >= 2 || Player[playerid][Dono] >= 1 || Player[playerid][Lider] >= 1 || Player[playerid][Cargo] >= 3 || Player[playerid][PCRJ]>= 3 || Player[playerid][DJ]>=1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	if(Player[id][BlockIR] == false)
	{
		format(string, sizeof(string), "{C798FA}[ ! ] - {ffffff}%s {C798FA}foi até {ffffff}%s.", Nome(playerid), Nome(id));
		MensagemLocal(playerid, COR_ROXO, string, 60);
		format(string, sizeof(string), "{C798FA}[ ! ] - {ffffff}%s {C798FA}veio até {ffffff}%s.", Nome(playerid), Nome(id));
		MensagemLocal(id, COR_ROXO, string, 60);
		GetPlayerPos(id, x, y, z);
		if(!(IsPlayerConnected(id))) return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não está Logado.");
		if (GetPlayerState(playerid) == 2)
		{
			SetVehiclePos(tmpcar, x, y+4, z);
		}
		else
		{
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, world);
			SetPlayerPos(playerid, x,y+2, z);
		}
	}
	else
	{
		SCM(playerid,COR_ERRO,"[FALHA]: Este player está com o ir bloqueado.");
	}
	return 1;
}
CMD:colete(playerid, params[])
{
    if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	new id, colete, str[115];
	if(sscanf(params,"ud",id,colete)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /colete [id] [quantidade]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(!(Player[playerid][Admin] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	format(str, sizeof(str), "[ ! ] - {ffffff}%s {C798FA}deu colete para {ffffff}%s{C798FA}.", Nome(playerid), Nome(id));
	MensagemLocal(playerid, COR_ROXO, str, 50);
	SetPlayerArmour(id,colete);
	return 1;
}
CMD:vida(playerid, params[])
{
    if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	new id, health, str[110];
	if(sscanf(params,"ud",id,health)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /vida [id] [quantidade]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
	if(!(Player[playerid][Admin] >= 1))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	format(str, sizeof(str), "[ ! ] - {ffffff}%s {C798FA}deu vida para {ffffff}%s{C798FA}.", Nome(playerid), Nome(id));
	MensagemLocal(playerid, COR_ROXO, str, 50);
	SetPlayerHealth(id,health);
	return 1;
}
CMD:rc(playerid)
{
    if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em um veículo ou não está dirigindo ele.");
	if(!(Player[playerid][PCRJ] >= 3 || Player[playerid][Cargo] == 4 || Player[playerid][Lider] >= 1 || Player[playerid][Dono] >= 1 || Player[playerid][PMRJ] >= 3 || Player[playerid][Admin] >= 1 || Player[playerid][Reporter] >= 1 || Player[playerid][MotoTaxi] >= 2))return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão para usar este comando!");
	new vehicleid, string[75];
	vehicleid = GetPlayerVehicleID(playerid);
	SetVehicleToRespawn(vehicleid);
	format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}respawnou um veiculo.", Nome(playerid));
	MensagemLocal(playerid, COR_ROXO, string, 50);
	return 1;
}
CMD:congelar(playerid, params[])
{
  new id, string[115];
  if(sscanf(params, "u", id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /congelar [id]");
  if(Player[playerid][Admin] < 2) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
  if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
  if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
  TogglePlayerControllable(id, 0);
  format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}foi congelado pelo {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
  MensagemLocal(id, COR_ROXO, string, 60);
  return 1;
}

CMD:descongelar(playerid, params[])
{
    new id, string[120];
	if(Player[playerid][Admin] < 2) return SCM(playerid, COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado para utilizar este comando!");
	if(sscanf(params, "u", id)) return SCM(playerid, COR_USOCORRETO, "Uso correto: /congelar [id]");
	if(!IsPlayerConnected(id) && id != INVALID_PLAYER_ID)return SCM(playerid,COR_ERRO,"[FALHA]: Jogador não conectado.");
    TogglePlayerControllable(id, 1);
    format(string, sizeof(string), "[ ! ] - {ffffff}%s {C798FA}foi descongelado pelo {ffffff}%s{C798FA}.", Nome(id), Nome(playerid));
    MensagemLocal(id, COR_ROXO, string, 60);
    return 1;
}
CMD:slap(playerid,params[])
{
	if(Player[playerid][Admin]<1)return SCM(playerid,COR_ERRO,"[FALHA]: Você não tem permissão para usar este comando!");
	new id,cont=0,str[256];
	if(sscanf(params,"u",id))return SCM(playerid, COR_USOCORRETO,"Uso correto: /slap [id]");
	for(new i = 0; i <= HighestID; i ++)
	if(IsPlayerConnected(i))
	if(Logado{playerid} == true)
	if(SlapPlayer[i][Slapping] == true)
	cont++;
	if(cont > 0) return SCM(playerid, COR_ERRO, "[FALHA]: Já está ocorrendo teste de slap neste momento, tente novamente.");
	else if(Player[id][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: O player está no hospital.");
	if(SlapPlayer[id][Slapping]==true) return SCM(playerid,COR_ERRO,"[FALHA]: Jogador já está sendo testado.");
	else
	{
		SlapPlayer[id][Slapping]=true;
		SlapPlayer[id][TickCount] = GetTickCount();
		SlapPlayer[id][SInt]=GetPlayerInterior(id);
		GetPlayerPos(id,SlapPlayer[id][SposX],SlapPlayer[id][SposY],SlapPlayer[id][SposZ]);
		GetPlayerFacingAngle(id,SlapPlayer[id][SposA]);
		GetPlayerHealth(id,SlapPlayer[id][SHl]),GetPlayerArmour(id,SlapPlayer[id][SAr]);
		if(SlapPlayer[id][SHl]>100.0) return SCM(playerid, COR_ERRO, "[FALHA]: Jogador tem mais de 100 de hp.");
		else if(SlapPlayer[id][SAr]>100.0) return SCM(playerid, COR_ERRO, "[FALHA]: Jogador tem mais de 100 de armour.");
		else
		{
			SetPlayerInterior(id,14);
			SetPlayerPos(id,-23.8798,-2506.6497,36.6484);
			SetPlayerVelocity(id,0.0,0.0,0.0);
			SetPlayerHealth(id,100.0),SetPlayerArmour(id,100.0);
			GameTextForPlayer(playerid, "~g~ Fique parado!", 1000, 5);
			SetTimerEx("CheckTeleport",500,false,"dd",playerid,id);
		}
		format(str,128,"AdmCMD: Você deu um slap no jogador %s (id: %d).",Nome(id), id);
		SCM(playerid, COR_PRINCIPAL, str);

		format(str, 128,"AdmCMD: O Admin %s Realizou Um Teste De Slap Em %s.", Nome(playerid), Nome(id));
		MensagemAdmin(str);

		format(str, sizeof(str), "%s deu slap em %s.", Nome(playerid), Nome(id));
		SendFormattedMessage(id, COR_PRINCIPAL, "O Admin %s Realizou Um Teste De Slap Em %s.", Nome(playerid), Nome(id));
	}
	return 1;
}
// ==================== [ SISTEMA EVENTOS ] ======================== //
CMD:criarevento(playerid)
{
	if(!IsPlayerAdmin(playerid)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital.");
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && Player[playerid][gSpectateID] != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Você está de /olhar em alguém.");
	ShowPlayerDialog(playerid, DIALOG_EVENTOS_1, DIALOG_STYLE_TABLIST_HEADERS, "{0000FF}Eventos GF {FFFFFF}- Escolha o evento desejado:", "Evento\t\nBriga nas alturas\nSurf", "Criar", "Cancelar");
	return 1;
}
CMD:fecharevento(playerid)
{
	if(!IsPlayerAdmin(playerid)) return SCM(playerid, COR_ERRO, "[FALHA]: Somente admins rcon pode usar este comando!");
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		TogglePlayerControllable(i, 1);
		if(Evento == 1)
		{
 			SendFormattedMessageToAll(COR_LARANJA, "[EVENTO GF] Um evento acabou de ser fechado por {FFFFFF}%s. {FF7100}'%d' players participaram.", Nome(playerid), EntrouEvento);
 			SendClientMessageToAll(COR_LARANJA, "[EVENTO GF] O vencedor será anunciado em alguns minutos, aguarde.");
			SCM(playerid, COR_PRINCIPAL,"[INFO]: Um evento foi fechado, ao evento encerrar não se esqueça de ultilizar /resultadoevento.");
			EntrouEvento = 0;
			Evento = 0;
			TipoEvento = 0;
		}
	}
	return 1;
}
CMD:irevento(playerid)
{
    if(Evento == 0) return SCM(playerid, COR_ERRO, "[FALHA]: Nenhum evento aberto!");
	if(Player[playerid][TempoPreso] >= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Você está preso.");
	if(Player[playerid][InHospital] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você está no hospital.");
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && Player[playerid][gSpectateID] != INVALID_PLAYER_ID) return SCM(playerid, COR_ERRO, "[FALHA]: Você está de /olhar em alguém.");
	if(ParticipandoEvento[playerid] == true) return SCM(playerid, COR_ERRO, "[FALHA]: Você já está participando de um evento");
	// ========= [ SE O EVENTO FOR BRIGA NAS ALTURAS ] =========== //
    if(TipoEvento == 1)
    {
        SCM(playerid, COR_PRINCIPAL, "[INFO]: Você está participando do evento 'Briga nas Alturas', seu objetivo é sobreviver sem cair ou morrer em cima do morro.");
        SetPlayerPos(playerid, -182.1520,1874.6494,114.2432);
        TogglePlayerControllable(playerid, 0);
        EntrouEvento++;
        Evento = 1;
        ParticipandoEvento[playerid] = true;
        SetPlayerArmour(playerid, 100);
        SetPlayerHealth(playerid, 100);
    }
    if(TipoEvento == 2)
    {
        SCM(playerid, COR_PRINCIPAL, "[INFO]: Você está participando do evento 'Surf', seu objetivo é ficar em cima do avião durante as manobras.");
        SetPlayerPos(playerid, -1687.1284,-163.0989,17.0703);
        EntrouEvento++;
        Evento = 1;
        ParticipandoEvento[playerid] = true;
    }
	return 1;
}
CMD:sairevento(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA] É preciso logar para executar este comando");
	if(ParticipandoEvento[playerid] == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está em um evento");
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Você saiu do evento.");

	SpawnPlayer(playerid);
	ParticipandoEvento[playerid] = false;
	return 1;
}
CMD:resultadoevento(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA]: É preciso logar para executar este comando");
	if(!IsPlayerAdmin(playerid)) return SCM(playerid, COR_ERRO, "[FALHA]: Você não tem permissão!");
	new string[128], string1[128];
	format(string, -1, "{FFFFFF}Coloque o ID do {FFD700}Ganhador {FFFFFF}do evento:\n");
	strcat(string1,string);
	ShowPlayerDialog(playerid, DIALOG_EVENTO_RESULTADO1, DIALOG_STYLE_INPUT, "{FFD700}» {FFFFFF}RESULTADO DO EVENTO {FFD700}«", string1, "Próximo", "");
	return 1;
}
CMD:comandosevento(playerid)
{
    if(Logado{playerid} == false) return SCM(playerid, COR_ERRO,"[FALHA]: É preciso logar para executar este comando");
    if(!IsPlayerAdmin(playerid) ) return SCM(playerid, COR_ERRO, "[FALHA]: Comando Restrito, após 3 tentativas tomará BAN");

	new string[1700];
  	strcat(string, "{CD9B1D}REGRAS DE EVENTO:\n");
   	strcat(string, "{CD9B1D}1 - {FFFFFF}Os eventos só poderão ser criados se 50% dos players online for de acordo. Use /criar_e para fazer a votação.\n");
   	strcat(string, "{CD9B1D}2 - {FFFFFF}Eventos só podem ser abertos semanalmente e comunicado a todos os administradores pela página no facebook.\n");
    strcat(string, "{CD9B1D}4 - {FFFFFF}O criador do evento tem a obrigação de postar o resultado com os vencedores usando o comando /resultadoevento.\n\n");

	strcat(string, "{CD9B1D}COMANDOS DE EVENTO:\n");
    strcat(string, "{CD9B1D}/criarvento {FFFFFF}- Este comando serve para criar um evento no servidor.\n");
	strcat(string, "{CD9B1D}/fecharvento {FFFFFF}- Este comando serve para fechar um evento no servidor.\n");
	strcat(string, "{CD9B1D}/resultadoevento {FFFFFF}- Este comando serve para mostrar os ganhadores do evento e seus prêmios.\n\n");

    strcat(string, "{CD9B1D}PRÊMIOS:\n");
    strcat(string, "{FFFFFF}Os prêmios poderão ser dados em cash usando o comando /darcash\n");
    strcat(string, "{FFFFFF}O valor que tem que ser passado para o PRIMEIRO colocado é de R$ 200,00 (Duzentos).\n");
    strcat(string, "{FFFFFF}O valor que tem que ser passado para para o SEGUNDO colocado é de R$ 100,00 (Cem).\n");
    strcat(string, "{FFFFFF}O valor que tem que ser passado para para o TERCEIRO colocado é de R$ 50,00 (Cinquenta).\n\n");

	ShowPlayerDialog(playerid, 2794, DIALOG_STYLE_MSGBOX, "{CD9B1D}» {FFFFFF}SISTEMA DE EVENTOS {CD9B1D}«",string, "Fechar", "");
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
     if(Logado{playerid}==false)return SCM(playerid,COR_ERRO,"[FALHA]: Você não está Logado para usar este comando!"), 0;
 	 return 1;
}
/*================================================[STOCKS]===================================================*/
stock Regras1(playerid)
{
	PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
	SetPlayerCameraPos(playerid, 1473.0959,-1587.3617,79.9308);
	SetPlayerCameraLookAt(playerid, 1483.7644,-1659.1058,28.7769);
	new dialogrande[999];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080}GTA Facções{ffffff} é um servidor de SA-MP que tem como objetivo simular confrontos entre \n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}Facções Criminosas e Organizações Policiais do Estado do Rio de Janeiro. Cada facção \n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}possui três favelas por padrão, e utilizando '!' (ponto de exclamação sem aspas) no inicio\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}dos textos, suas mensagens serão direcionadas para o chat exclusivo de sua facção.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} {ffffff}Faccções\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FF0000}CMD\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{0000FF}LLL\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FFFF00}3CP\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FFA500}MLC\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} {ffffff}Organizações\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{3A5FCD}Polícia Militar\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{778899}Policia Cívil\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FF9900}Repórteres\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{00FF26}Moto Táxi\n");
	ShowPlayerDialog(playerid,DIALOG_REGRAS, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Explicação do Servidor", dialogrande, "Próximo", "Voltar");
	return 1;
}
stock Regras2(playerid)
{
	new dialogrande[1500];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF0000}É extremamente proibido o descumprimento de quaisquer regras descritas neste artigo.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF0000}Ao jogar em nosso Servidor, o membro reconhece ter conhecimento das regras aqui expostas.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}1. - É extremamente proibido o uso de auxiliares ao jogo, conhecidos como 'cheats, hack, aimbot, rapidfire, speed hack, etc'.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}2. - É proibida a utilização e exploração de falhas no Servidor (bugs). O Jogador que descobrir um bug ocorre no dever de o reportar de imediato \n à Administração via Centro de Suporte. Caso não o faça, poderão ocorrer punições.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}3. - É extremamente proibido qualquer tipo de desrespeito e/ou preconceito com qualquer membro.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}4. - É proibido cometer 'DB = Drive By' (atropelar, e/ou atirar estando em um veiculo).\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}5. - É proibida a divulgação de outros Servidores e Projetos dentro do Servidor e/ou Fórum.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}6. - É mandatário o jogador conhecer as regras bases e fundamentais do Servidor.\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Caso não as conheça, antes de jogar no Servidor, ou na sua primeira estadia deverá contactar a\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Administração e pedir instruções e formação neste modo de jogo. Caso não o faça, poderão ocorrer punições.\n");
	ShowPlayerDialog(playerid,DIALOG_REGRAS2, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Regras", dialogrande, "Próximo", "Voltar");
	return 1;
}
stock Regras3(playerid)
{
	new dialogrande[999];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{C798FA} Facebook\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}www.facebook.com/equipegf\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Curta nossa Fan Page e receba novidades e atualizaçõe de nosso servidor.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{778899} Site\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}www.equipegf.com\n");
	format(dialogrande,	sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Entre no nosso portal e acesse suas informações do jogo.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FF7F24} Fórum\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}www.equipegf.com/forum\n");
	format(dialogrande,	sizeof(dialogrande),"%s%s",dialogrande,"Cadastre-se em nosso fórum e tire todas as suas dúvidas.\n");
	ShowPlayerDialog(playerid,DIALOG_REGRAS3, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Redes Sociais", dialogrande, "Próximo", "Voltar");
	return 1;
}
stock Regras4(playerid)
{
	new dialogrande[490];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} Qual é a função dos administradores ?\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Ajudar os novatos do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Manter o servidor mais organizado para o melhor desempenho do game.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Punir os players que usam xiters ou mods proibido.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} Como eu posso me tornar um administrador ?\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Sendo um player exemplar.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Seguindo todas as regras do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Ajudando a organizar o servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Você comprando vip terá mais chances de se tornar um administrador.\n");
	ShowPlayerDialog(playerid,DIALOG_REGRAS4, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Administração(Staff)", dialogrande, "Próximo", "Voltar");
	return 1;
}
stock Regras5(playerid)
{
	new dialogrande[540];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFD700} Vantagens VIP\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}uma das melhores vantagens de ser um player vip é os comandos exclusivos.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Você sendo um player que dedica financeiramente ao server terá mais chances de ser um administrador.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Qualquer dúvida entre no servidor e Digite {FFD700}/Vantagensvip.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Qualquer tipo de pagamento é feito pelo nosso site oficial.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}Nem um suporte em relação a vips que não venha da administração da GTA Faccoes é válido.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFD700}Seja bem vindo a GTA Faccoes agora você já pode jogar clique em Concluir.\n");
	ShowPlayerDialog(playerid,DIALOG_FACCOES, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Vantagens VIP", dialogrande, "Concluir", "Voltar");
	return 1;
}
stock ComandosRcon(playerid)
{
	new dialogrande[999];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos RCON\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/darcash - Para dar cash para um player.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/setadmin - Seta um player de administrador\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pml - Para enviar uma mensagem totalmente privada\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dararmat - Dar arma para todos ao redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dararma - Para dar arma a um determinado player\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/editarinfo - Para editar as informações de algum player\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Ultimate Fighting Championship (UFC)\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/abrirufc - Abre um evento UFC.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/fecharufc - Fecha o evento ufc.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/eventocinturao - Abre e comunica um evento valendo cinturão\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/fechareventocinturao - Deixa o evento padrão sem cinturão.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/setlutador - Prepara o lutador do evento ufc.\n");
	ShowPlayerDialog(playerid,621, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos RCON - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosLider(playerid)
{
	new dialogrande[1010];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Líder\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/setdono - Para setar algum dono de uma favela\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/jetpack - Para criar um jetpack\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazertodos - Para trazer todos os players de sua favela\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/ir - Para ir até o player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazer - Para trazer o player a você\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/brfrente - Para criar uma barricada frente\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/asay - Para falar no Chat Global\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/veh - Para criar um carro\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dcm - Para deletar um carro pessoal\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dc - Para deletar um carro qualquer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/kick - Para kickar um player do servidor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vidat - Para dar vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletet - Para dar colete a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/colete - Para dar colete a um determinado player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletetvidat - Para dar colete e vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vida - Para dar vida a um determinado player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/rc - Para respawnar um veículo\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/tapa - Para dar tapa em um player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/cnn - Para mandar uma menssagem na tela\n");
	ShowPlayerDialog(playerid,623, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Lider - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosFogueteiro(playerid)
{
	new dialogrande[70];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Fogueteiro\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/fogos - Para soltar Fogos\n");
	ShowPlayerDialog(playerid,622, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Fogueteiro - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosVapor(playerid)
{
	new dialogrande[120];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Vapor\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vendermaconha - Para vender maconha\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vendercocaina - Para vender cocaina\n");
	ShowPlayerDialog(playerid,624, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Vapor - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosGerente(playerid)
{
	new dialogrande[250];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Gerente\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/bocas - Para abrir a boca de uma favela.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/ir - Para ir até o player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazer - Para trazer o player a você\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/g - Para falar no Chat Gerente\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/asay - Para falar no Chat Global\n");
	ShowPlayerDialog(playerid,625, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Gerente - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosFrente(playerid)
{
	new dialogrande[800];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Frente\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/ir - Para ir até o player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazertodos - Para trazer todos os players de sua favela\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazer - Para trazer o player a você\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/brfrente - Para criar uma barricada frente\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/f - Para falar no Chat Frente\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/asay - Para falar no Chat Global\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/veh - Para criar um carro\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dcm - Para deletar um carro pessoal\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dc - Para deletar um carro qualquer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vidat - Para dar vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletet - Para dar colete a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletetvidat - Para dar colete e vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vidat - Para dar vida a um determinado player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/rc - Para respawnar um veículo\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/tapa - Para dar tapa em um player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/cnn - Para mandar uma menssagem na tela\n");
	ShowPlayerDialog(playerid,625, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Frente - {0000EE}GF ", dialogrande, "OK", "");
}
stock ComandosDono(playerid)
{
	new dialogrande[999];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{0000EE} Comandos Dono\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/setcargo - para setar o cargo de um player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/desetaroff - para desetar o cargo de um player offline\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazertodos - Para trazer todos os players de sua favela\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/ir - Para ir até o player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/trazer - Para trazer o player a você\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/brfrente - Para criar uma barricada frente\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/asay - Para falar no Chat Global\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/veh - Para criar um carro\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dcm - Para deletar um carro pessoal\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/dc - Para deletar um carro qualquer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/kick - Para kickar um player do servidor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/vidat - Para dar vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletet - Para dar colete a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/coletetvidat - Para dar colete e vida a todos ao seu redor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/rc - Para respawnar um veículo\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/tapa - Para dar tapa em um player\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/cnn - Para mandar uma menssagem na tela\n");
	ShowPlayerDialog(playerid,999, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Dono - {0000EE}GF ", dialogrande, "OK", "");
}
stock Comandos(playerid)
{
	new dialogrande[2000];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/hierarquia - {1E48BD}Para ver a hierarquia da favela.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/esconderdrogas - {1E48BD}Para esconder drogas.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pegardrogas - {1E48BD}Para pegar a droga do chão.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/fps - {1E48BD}Para ligar o mod primeira pessoa.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/x9 - {1E48BD}Para denunciar a localização de um player.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/infofavelas - {1E48BD}Para ver as informações das favelas.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pagar - {1E48BD}Para pagar um player.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/ajuda - {1E48BD}Para tirar suas dúvidas sobre o servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pular - {1E48BD}Caso você bugar o /pular irá te auxiliar.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/mudarmorro - {1E48BD}Para mudar de morro e facção.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pm - {1E48BD}Para mandar uma mensagem privada.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/skin - {1E48BD}Trocar sua skin.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/id - {1E48BD}Para descobri o id de algum player.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/animlist - {1E48BD}Colocar alguma animação.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/minhafavela - {1E48BD}Para ver os players online pela sua favela.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/comprararmas - {1E48BD}Para comprar armas.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/reparar - {1E48BD}Para concertar seu veículo.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/admins - {1E48BD}Visualize os administradores online.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/duvida - {1E48BD}Para relatar algo para administração.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/chamar - {1E48BD}Chama um reporter/helper.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/fila - {1E48BD}Ver a fila da chamada reporter/helper.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/sairfila - {1E48BD}Sai da fila da chamada reporter/helper\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/meuid - {1E48BD}Para ver seu id.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/mudarnick - {1E48BD}Para mudar seu nick.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/virar - {1E48BD}Para virar seu veículo.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pms - {1E48BD}Para ver os membros da policia militar online no servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/pcrjs - {1E48BD}Para ver os membros da policia civil online no servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/helpers - {1E48BD}Para ver os helpers online no servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/reporteres - {1E48BD}Para ver os Repórteres online no servidor.\n");
	ShowPlayerDialog(playerid,661, DIALOG_STYLE_MSGBOX, "{0000EE}¤ {FFFFFF}GTA Facções - Comandos", dialogrande, "OK", "");
}
stock Ajuda(playerid)
{
	new dialogrande[999];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080}GTA Facções{ffffff} é um servidor de SA-MP que tem como objetivo simular confrontos entre \n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}Facções Criminosas e Organizações Policiais do Estado do Rio de Janeiro. Cada facção \n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}possui três favelas por padrão, e utilizando '!' (ponto de exclamação sem aspas) no inicio\n");
    format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{ffffff}dos textos, suas mensagens serão direcionadas para o chat exclusivo de sua facção.\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} {ffffff}Faccções\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FF0000}CMD\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{0000FF}LLL\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FFFF00}3CP\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FFA500}MLC\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{000080} {ffffff}Organizações\n\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{3A5FCD}Polícia Militar\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{778899}Policia Cívil\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}{FF9900}Repórteres\n");
	ShowPlayerDialog(playerid,999, DIALOG_STYLE_MSGBOX, "{FFD700}GTA Facções - {FFFFFF}Explicação do Servidor", dialogrande, "Concluido", "Voltar");
	return 1;
}
stock AjudaEmp(playerid)
{
	new dialogrande[2000];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFF00}** Moto Taxi.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Com este emprego sua função é buscar passageiros e leva-los ao destino.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Para começar a cobrar o serviço basta digitar /mtaxi com seu passageiro dentro de uma 'PCJ-600'.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Você pode pegar uma moto de moto taxi no pé de cada favela do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Use {FFFF00}/anunciar {FFFFFF}para anunciar que tem moto taxi trabalhando.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Use {FFFF00}/rmtx{FFFFFF} para respawnar as motos de cada moto taxi do servidor.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** Não é permitido matar em trabalho. digite {FFFF00}/trabalhar {FFFFFF}para entrar em ação.\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}** {CD0000}PARA SE RETIRAR DE SUA PROFISSÃO DIGITE /SAIREMPREGO.\n");
	ShowPlayerDialog(playerid, 666,DIALOG_STYLE_MSGBOX, "{FFFF00}¤ {FFFFFF}Ajuda Emprego", dialogrande, "Concluir", "Fechar");
	return 1;
}
stock ComandosAdmin(playerid)
{
	new dialogrande[700];
	if(Player[playerid][Admin]>=1)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} Level 1\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/a - /asay - /vida - /colete - /tapa - /ir - /trazer - /rc - /prender - /pinfo - /jetpack - /veh - /at - /respawn - /cityadmin\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"/slap - /reports - /dcm - /kick - /cnn - /coletet - /coletetvidat - /vidat - /dc - /tempban - /olhar\n\n");
	}
	if(Player[playerid][Admin]>=2)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} Level 2\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/supertapa - /congelar - /desarmar - /grade - /rgrade\n\n");
	}
 	if(Player[playerid][Admin]>=3)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} Level 3\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/criar - /armas - /bir - /air - /btr - /atr\n\n");
	}
  	if(Player[playerid][Admin]>=4)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} Level 4\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/setpmrj - /setreporter - /setpcrj - /setdj - /setmtx - /desban - /bpm - /apm - /dt - /lerpm\n\n");
	}
  	if(Player[playerid][Admin]>=5)
	{
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{1E48BD} Level 5\n");
		format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{FFFFFF}/clima - /tempo - /rtc - /sethelper - /rbrallfrente - /rgradeall - /darcasht - /dtc\n\n");
	}
	ShowPlayerDialog(playerid,666, DIALOG_STYLE_MSGBOX, "{FFFFFF}Comandos Administrador - {0000EE}GF", dialogrande, "OK", "");
}
stock VerificarRival(id)
{
	for(new i=0; i <= MAX_PLAYERS; i++)
	if(GetDistanceBetweenPlayers(id, i) <= 20)
	{
		if(Player[id][Faccoes] == Player[i][Faccoes])
		{
		}
		else
		{
			return false;
		}
	}
	return true;
}
stock ResetarCarros(playerid)
{
	new string[128];
	GetPlayerName(playerid, string, MAX_PLAYER_NAME+1);
	format(string, sizeof(string), "AdmCMD: O Administrador '%s' respawnou todos os veiculos!", string);
	SendClientMessageToAll(0xFFFFFFFF, string);
	new bool:inVeh;
	for( new i = 0; i < MAX_VEHICLES; i++ )
	{
		inVeh = false;
		for( new j = 0; j < MAX_PLAYERS; j++ )
		{
			if(IsPlayerInVehicle( j, i ))
			{
				inVeh = true;
			}
		}
		if(!inVeh) SetVehicleToRespawn(i);
	}
	return true;
}
stock DeletarCarros(playerid)
{
    new string[128];
    GetPlayerName(playerid, string, MAX_PLAYER_NAME+1);
    format(string, sizeof(string), "AdmCMD: O Líder %s deletou todos os veiculos sem uso!", string);
    SendClientMessageToAll(0xFFFFFFFF, string);

    new bool:inVeh;
    for(new x = 0; x < sizeof(VeiculoVeh); x++)
    {
        inVeh = false;
        for( new j = 0; j < MAX_PLAYERS; j++ )
        {
            if(IsPlayerInVehicle( j, VeiculoVeh[i] ))
            {
                inVeh = true;
            }
        }
    	if(!inVeh) DestroyVehicle(VeiculoVeh[i]);
    }
    return true;
}
stock Carros(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
    switch(model)
    {
        case 415, 417, 420, 425, 427, 432, 433, 461, 470, 488, 490, 492, 497, 521, 523, 582, 548, 586, 596, 597, 598: result = model;
        default: result = 0;
    }
	return result;
}
stock CarrosRGF(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
    switch(model)
    {
        case 582, 586, 488: result = model;
        default: result = 0;
    }
	return result;
}
stock Privados(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
    switch(model)
    {
        case 417, 425, 427, 432, 433, 470, 490, 497, 520, 523, 548, 596, 597, 598: result = model;
        default: result = 0;
    }
	return result;
}
stock GetDistanceBetweenPlayers(playerid,playerid2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	new Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	GetPlayerPos(playerid2,x2,y2,z2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(tmpdis);
}
stock getIp(playerid)
{
        static Ip2[20]; GetPlayerIp(playerid, Ip2, sizeof(Ip2)); return Ip2;
}
stock Nome(playerid)
{
        static Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name)); return Name;
}
stock PegarVip(playerid)
{
        static Arquivo[33]; format(Arquivo, sizeof(Arquivo), "GF/Vips/%s.ini", Nome(playerid)); return Arquivo;
}
stock SalvarDados(playerid)
{
   	getdate(AnoL[playerid], MesL[playerid], DiaL[playerid]);
    gettime(HoraL[playerid], MinutoL[playerid]);
	DOF2_SaveFile();
	new Query[900],Query2[900];
	mysql_format(conectDB, Query, sizeof(Query),
	"UPDATE `pinfo` SET `skin`='%d',`iniciante`='%d',`matou`='%d',`morreu`='%d',`logou`='%d',`dinheiro`='%d',`score`='%d',`cash`='%d',`cargo`='%d',`dono`='%d',`lider`='%d', `faccoes`='%d', `pmrj`='%d', `pcrj`='%d', `vip`='%d',`procurado`='%d', `cinturao`='%d',`cinturaoperd`='%d',`cartelv`='%d',`carteld`='%d',`dj`='%d',`mototaxi`='%d',`admin`='%d',`minutol`='%d',`horal`='%d',`dial`='%d',`mesl`='%d',`anol`='%d',`fogos`='%d',`reporter`='%d',`presidio`='%d' WHERE `Nick`='%s'",
	GetPlayerSkin(playerid),
	Player[playerid][Iniciante],
	Player[playerid][Matou],
	Player[playerid][Morreu],
    Player[playerid][Logou],
    GetPlayerMoney(playerid),
    GetPlayerScore(playerid),
    Player[playerid][Cash],
	Player[playerid][Cargo],
	Player[playerid][Dono],
	Player[playerid][Lider],
	Player[playerid][Faccoes],
	Player[playerid][PMRJ],
	Player[playerid][PCRJ],
	Player[playerid][Vip],
	Player[playerid][Procurado],
	Player[playerid][Cinturao],
	Player[playerid][CinturaoPERD],
	Player[playerid][CartelV],
	Player[playerid][CartelD],
	Player[playerid][DJ],
	Player[playerid][MotoTaxi],
	Player[playerid][Admin],
	MinutoL[playerid],
	HoraL[playerid],
	DiaL[playerid],
	MesL[playerid],
	AnoL[playerid],
	Player[playerid][Fogos],
	Player[playerid][Reporter],
	Presidio[playerid],
	Nome(playerid));
	mysql_tquery(conectDB, Query,"DadosSalvos","d", playerid);

	mysql_format(conectDB, Query2, sizeof(Query2),
	"UPDATE `pinfo` SET `estrelaprocurado`='%d',`suabatidos`='%d',`passagens`='%d',`reportslidos`='%d',`atendimentos`='%d',`fumo`='%d',`cheiro`='%d',`helper`='%d',`sutotal`='%d',`tempopreso`='%d',`presoadm`='%d' WHERE `Nick`='%s'",
	GetPlayerWantedLevel(playerid),
	Player[playerid][suabatidos],
	Player[playerid][Passagens],
	Player[playerid][pRpt],
	Atendimentos[playerid],
	Player[playerid][Maconha],
	Player[playerid][Cocaina],
	Player[playerid][pHelper],
	Player[playerid][sutotal],
	Player[playerid][TempoPreso],
	PresoADM[playerid],
	Nome(playerid));
	mysql_tquery(conectDB, Query2,"DadosSalvos","d", playerid);
}
forward DadosSalvos(playerid);
public DadosSalvos(playerid)
{
        return 1;
}
forward IniciarConta(playerid);
public IniciarConta(playerid)
{
	PresoADM[playerid] = cache_get_field_content_int(0, "presoadm");
    MinutoL[playerid] = cache_get_field_content_int(0, "minutol");
    HoraL[playerid] = cache_get_field_content_int(0, "horal");
    DiaL[playerid] = cache_get_field_content_int(0, "dial");
    MesL[playerid] = cache_get_field_content_int(0, "mesl");
    AnoL[playerid] = cache_get_field_content_int(0, "anol");
    Presidio[playerid] = cache_get_field_content_int(0, "presidio");
    Atendimentos[playerid] = cache_get_field_content_int(0, "atendimentos");
    Player[playerid][pHelper] = cache_get_field_content_int(0, "helper");
    Player[playerid][TempoPreso] = cache_get_field_content_int(0, "tempopreso");
    Player[playerid][sutotal] = cache_get_field_content_int(0, "sutotal");
    Player[playerid][pRpt] = cache_get_field_content_int(0, "reportslidos");
    Player[playerid][suabatidos] = cache_get_field_content_int(0, "suabatidos");
    Player[playerid][Wanted] = cache_get_field_content_int(0, "estrelaprocurado");
    Player[playerid][Passagens] = cache_get_field_content_int(0, "passagens");
    Player[playerid][Faccoes] = cache_get_field_content_int(0, "faccoes");
    Player[playerid][CartelV] = cache_get_field_content_int(0, "cartelv");
    Player[playerid][DJ] = cache_get_field_content_int(0, "dj");
    Player[playerid][MotoTaxi] = cache_get_field_content_int(0, "mototaxi");
    Player[playerid][CartelD] = cache_get_field_content_int(0, "carteld");
    Player[playerid][Cinturao] = cache_get_field_content_int(0, "cinturao");
    Player[playerid][CinturaoPERD] = cache_get_field_content_int(0, "cinturaoperd");
    Player[playerid][Matou] = cache_get_field_content_int(0, "matou");
    Player[playerid][Morreu] = cache_get_field_content_int(0, "morreu");
	Player[playerid][Logou] = cache_get_field_content_int(0, "logou");
    Player[playerid][Skin] = cache_get_field_content_int(0, "skin");
    Player[playerid][Dinheiro] = cache_get_field_content_int(0, "dinheiro");
    Player[playerid][Score] = cache_get_field_content_int(0, "score");
    Player[playerid][Cash] = cache_get_field_content_int(0, "cash");
    Player[playerid][Cargo] = cache_get_field_content_int(0, "cargo");
    Player[playerid][Dono] = cache_get_field_content_int(0, "dono");
    Player[playerid][Lider] = cache_get_field_content_int(0, "lider");
    Player[playerid][PMRJ] = cache_get_field_content_int(0, "pmrj");
    Player[playerid][PCRJ] = cache_get_field_content_int(0, "pcrj");
    Player[playerid][Vip] = cache_get_field_content_int(0, "vip");
    Player[playerid][Admin] = cache_get_field_content_int(0, "admin");
    Player[playerid][Procurado] = cache_get_field_content_int(0, "procurado");
    Player[playerid][Fogos] = cache_get_field_content_int(0, "fogos");
    Player[playerid][Reporter] = cache_get_field_content_int(0, "reporter");
    Player[playerid][TempoLogado] = cache_get_field_content_int(0, "tempologado");
    CarregarDados(playerid);
	return 1;
}

stock CarregarDados(playerid)
{
	for(new i=0; i < 10; i++)
	{
	    SCM(playerid, COR_BRANCO,""); /* Equivale a 10 SCM VÁZIOS */
	}
    new str[200], string[300];
    format(str, sizeof(str),"** Seja bem vindo novamente %s | Último login: '%d/%d/%d' Ás %d Horas e %d Minutos.", Nome(playerid),DiaL[playerid], MesL[playerid], AnoL[playerid], HoraL[playerid], MinutoL[playerid]);
    SCM(playerid, -1, str);
    SCM(playerid, -1,">> ------------------------------------------------------------------------------------------------ <<");
	if(Player[playerid][MotoTaxi]==1)
	{
		SCM(playerid,COR_BRANCO,"Você é um Moto Taxi.");
	}
	if(Player[playerid][Admin] >= 1)
	{
	    format(string, sizeof(string), "Você é um Administrador level %d.", Player[playerid][Admin]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}
	if(Player[playerid][pHelper] >= 1)
	{
	    format(string, sizeof(string), "Você é um Helper level %d.", Player[playerid][pHelper]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}
	if(Player[playerid][Reporter] >= 1)
	{
	    format(string, sizeof(string), "Você é um Repórter level %d.", Player[playerid][Reporter]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}
	if(Player[playerid][PMRJ] >= 1)
	{
	    format(string, sizeof(string), "Você é um Soldado da PMRJ level %d.", Player[playerid][PMRJ]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}
	if(Player[playerid][PCRJ] >= 1)
	{
	    format(string, sizeof(string), "Você é um Soldado da PCRJ level %d.", Player[playerid][PCRJ]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}

	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 1){SCM(playerid,0xFFFFFFFF,"Você é um Líder CMD.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 2){SCM(playerid,0xFFFFFFFF,"Você é um Líder CMD.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 3){SCM(playerid,0xFFFFFFFF,"Você é um Líder CMD.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 4){SCM(playerid,0xFFFFFFFF,"Você é um Líder LLL.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 5){SCM(playerid,0xFFFFFFFF,"Você é um Líder LLL.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 6){SCM(playerid,0xFFFFFFFF,"Você é um Líder LLL.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 7){SCM(playerid,0xFFFFFFFF,"Você é um Líder 3CP.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 8){SCM(playerid,0xFFFFFFFF,"Você é um Líder 3CP.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 9){SCM(playerid,0xFFFFFFFF,"Você é um Líder 3CP.");}
	if(Player[playerid][Lider] == 1 && Player[playerid][Faccoes] == 10){SCM(playerid,0xFFFFFFFF,"Você é um Líder MLC.");}

	if(Player[playerid][Cargo]==1){SCM(playerid, 0xFFFFFFFF,"Você é um Fogueteiro.");}
	if(Player[playerid][Cargo]==2){SCM(playerid, 0xFFFFFFFF,"Você é um Vapor.");}
	if(Player[playerid][Cargo]==3){SCM(playerid, 0xFFFFFFFF,"Você é um Gerente.");}
	if(Player[playerid][Cargo]==4){SCM(playerid, 0xFFFFFFFF,"Você é um Frente.");}

	if(Player[playerid][DJ] >= 1)
	{
	    format(string, sizeof(string), "Você é um DJ level %d.", Player[playerid][DJ]);
	    SendClientMessage(playerid, COR_BRANCO, string);
	}
	
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==1){SCM(playerid,0xFFFFFFFF,"Você é Dono do Morro do Engenho.");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==2){SCM(playerid,0xFFFFFFFF,"Você é Dono do Martins");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==3){SCM(playerid,0xFFFFFFFF,"Você é Dono do Antares");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==4){SCM(playerid,0xFFFFFFFF,"Você é Dono da Morro da Primavera");}
    if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==5){SCM(playerid,0xFFFFFFFF,"Você é Dono do Morro do Juramento");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==6){SCM(playerid,0xFFFFFFFF,"Você é Dono do Morro do Urubu");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==8){SCM(playerid,0xFFFFFFFF,"Você é Dono do Muquiço");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==7){SCM(playerid,0xFFFFFFFF,"Você é Dono da Vila Aliança");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==9){SCM(playerid,0xFFFFFFFF,"Você é Dono da Sapo de Camará");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==11){SCM(playerid,0xFFFFFFFF,"Você é Dono do Cesarão");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==12){SCM(playerid,0xFFFFFFFF,"Você é Dono da Tres Pontes");}
	if(Player[playerid][Dono]==1 && Player[playerid][Faccoes]==10){SCM(playerid,0xFFFFFFFF,"Você é Dono do Bateau Mouche");}
	if(Player[playerid][Vip] == 0) { SCM(playerid, -1, "Você é um membro free."); }
	Player[playerid][Vip]=0;

    new string1[80];
    format(string1, sizeof(string1), PegarVip(playerid), Nome(playerid));
    if(DOF2_FileExists(string1))
    {
        Player[playerid][Vip] = DOF2_GetInt(string, "Dias");
        if(VerifyExpiredDays(Player[playerid][Vip]))
        {
            Player[playerid][Vip] = 0;
        }
        else
        {
            format(string1,sizeof(string1), "Você têm %s dias vip.", ConvertToDays(Player[playerid][Vip]));
            SCM(playerid, COR_BRANCO, string1);
        }
    }
    SCM(playerid, -1,">> ------------------------------------------------------------------------------------------------ <<");

    SetPlayerSkin(playerid,Player[playerid][Skin]);
	GivePlayerMoney(playerid,Player[playerid][Dinheiro]);
	SetPlayerWantedLevel(playerid, Player[playerid][Procurado]);
    SetPlayerScore(playerid, Player[playerid][Score]);
    TogglePlayerSpectating(playerid, false);
    Logado{playerid} = true;
    Player[playerid][Logou]++;
    SpawnPlayer(playerid);
    
	if(UFC[1]==true)
	{
 		new String[256];
		format(String, sizeof(String), "{FFFFFF}Olá {FF0000}%s\n{FFFFFF}Evento {FF0000}Ultimate Fight Championship\n{FFFFFF}Vá até a arena {FF0000}UFC.",Nome(playerid));
		ShowPlayerDialog(playerid, 444, DIALOG_STYLE_MSGBOX, "{FF0000}» {FFFFFF}EVENTO ABERTO {FF0000}«", String, "Sair", "");
	}
    return 1;
}
stock GetandoDistancia(playerid,playerid2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	new Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	GetPlayerPos(playerid2,x2,y2,z2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
	return floatround(tmpdis);
}
stock ConnectedPlayers()
{
	new count;
	for(new x=0; x<MAX_PLAYERS; x++)
	{
		if(!(IsPlayerNPC(x))) //Verifica se o jogador é um NPC.
  		{
			if(IsPlayerConnected(x))
			{
				count++;
			}
		}
	}
	return count;
}
stock MensagemLocal(playerid, cor, text[], distancia)
{
	for(new i=0; i <= MAX_PLAYERS; i++)
		if(GetandoDistancia(playerid, i) <= distancia)
	{
		if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
		{
			new string[128];
			format(string, 128, text);
			SCM(i,cor,string);
		}
	}
	return 1;
}
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
public Contando(playerid)
{
	new string[256];
	if(SegundosContagem[playerid] > 0)
	{
		format(string,sizeof(string),"~w~Aguarde: ~r~%s",Convert(SegundosContagem[playerid]));
		GameTextForPlayer(playerid, string, 2500, 3);
		SegundosContagem[playerid]--;
		SetTimerEx("Contando",1000,0,"d",playerid);
		return 1;
	}
	else
	{
		SegundosContagem[playerid] = 0;
		GameTextForPlayer(playerid, "~r~Voce se recuperou!", 2500, 3);
		Player[playerid][InHospital] = false;
		SetPlayerInterior(playerid, 0);
		OnPlayerSpawn(playerid);
		GivePlayerWeapon(playerid,24,300);
		TogglePlayerControllable(playerid, 1);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		
		if(Player[playerid][Faccoes] == 1 || Player[playerid][Faccoes] == 2 || Player[playerid][Faccoes] == 3)
		{
			SetPlayerPos(playerid, 1583.6665,1768.9387,10.8203);
			SetPlayerColor(playerid,COR_CV);
			GameTextForPlayer(playerid, "~r~Voce se recuperou!", 2500, 3);
  			new ORM:ormid = Player[playerid][ORM_ID] = orm_create("Nick", conectDB);
			orm_addvar_int(ormid, Player[playerid][Skin], "skin");
			SetPlayerSkin(playerid,Player[playerid][Skin]);
			return 1;
		}
		if(Player[playerid][Faccoes] == 4 || Player[playerid][Faccoes] == 5 || Player[playerid][Faccoes] == 6)
		{
			SetPlayerPos(playerid, 2035.6445,-1412.6239,16.9922);
			SetPlayerColor(playerid,COR_ADA);
			GameTextForPlayer(playerid, "~r~Voce se recuperou!", 2500, 3);
  			new ORM:ormid = Player[playerid][ORM_ID] = orm_create("Nick", conectDB);
			orm_addvar_int(ormid, Player[playerid][Skin], "skin");
			SetPlayerSkin(playerid,Player[playerid][Skin]);
			return 1;
		}
		if(Player[playerid][Faccoes] == 7 || Player[playerid][Faccoes] == 8 || Player[playerid][Faccoes] == 9)
		{
			SetPlayerPos(playerid, -2646.3840,635.4633,14.4531);
			SetPlayerColor(playerid,COR_TCP);
			GameTextForPlayer(playerid, "~r~Voce se recuperou!", 2500, 3);
  			new ORM:ormid = Player[playerid][ORM_ID] = orm_create("Nick", conectDB);
			orm_addvar_int(ormid, Player[playerid][Skin], "skin");
			SetPlayerSkin(playerid,Player[playerid][Skin]);
			return 1;
		}
		if(Player[playerid][Faccoes] == 11 || Player[playerid][Faccoes] == 12 || Player[playerid][Faccoes] == 10)
		{
			SetPlayerPos(playerid, 1481.9000244141,2148.3999023438,10.699999809265);
			SetPlayerColor(playerid,COR_MLC);
			GameTextForPlayer(playerid, "~r~Voce se recuperou!", 2500, 3);
  			new ORM:ormid = Player[playerid][ORM_ID] = orm_create("Nick", conectDB);
			orm_addvar_int(ormid, Player[playerid][Skin], "skin");
			SetPlayerSkin(playerid,Player[playerid][Skin]);
			return 1;
		}
		return 1;
	}
}
Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[128];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	new days = 0;

	if(hours >= 24)
	{
		days = floatround((hours/24), floatround_floor);
		hours = hours % 24;
	}

	if(days > 0)
	{
		format(string, 100, "%ddias, %dh %dm e %ds", days, hours, mins, secs);
	}
	else if(hours > 0)
	{
		format(string, 100, "%dh %dm e %ds", hours, mins, secs);
	}
	else
	{
		format(string, 100, "%dm e %ds", mins, secs);
	}
	return string;
}
// ============================ [ PARAR ANIMAÇÕES ] ============================ //
IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}
OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	if (gPlayerUsingLoopingAnim[playerid] == 1) TextDrawHideForPlayer(playerid,TextAnim);
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	animation[playerid]++;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	if (gPlayerUsingLoopingAnim[playerid] == 1) TextDrawHideForPlayer(playerid,TextAnim);
	gPlayerUsingLoopingAnim[playerid] = 1;
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	TextDrawShowForPlayer(playerid,TextAnim);
	animation[playerid]++;
}
StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}
PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}
forward PararAnimacoesAtivas(playerid);
public PararAnimacoesAtivas(playerid)
{
	StopLoopingAnim(playerid);
	animation[playerid] = 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
stock ComandosPCRJ(playerid)
{
	new dialogrande[570];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Level 1]: {FFFFFF}/appcrj - /appcrj2 - /m - /pc - /revistar - /dp - /algemar - /desalgemar - /d - /su - /jogar\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Continuação Level 1]: {FFFFFF}/procurados - /rdrogas - /aprender - /escudo - /cone - /limparficha - /bafometro\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Level 2]: {FFFFFF}/br - /rbr  /laseron - /laseroff - /lasercor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Level 3]: {FFFFFF}/rc - /pregos - /dpregos - /ir - /trazer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Level 4]: {FFFFFF}/gov - /veh - /kick - /rtcone - /rtcdp - /base - /vidat - /coletet - /coletetvidat - /cnn\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A9A9A9}[Level 5]: {FFFFFF}/setpcrj - /rbrall - /trazerpcrjs\n");
	ShowPlayerDialog(playerid, 100+100, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos PCRJ {0000EE}«", dialogrande, "OK", "");
	return 1;
}

stock ComandosPMRJ(playerid)
{
	new dialogrande[550];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Level 1]: {FFFFFF}/appm - /m - /p - /revistar - /dp - /algemar - /desalgemar - /d - /su - /jogar\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Continuação Level 1]: {FFFFFF}/procurados - /rdrogas - /aprender - /escudo - /cone - /limparficha - /bafometro\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Level 2]: {FFFFFF}/br - /rbr - /laseron - /laseroff - /lasercor\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Level 3]: {FFFFFF}/rc - /pregos - /dpregos - /ir- /trazer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Level 4]: {FFFFFF}/gov - /veh - /kick - /rtcone - /rtcdp - base - /vidat - /coletet - /coletetvidat - /cnn\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{3A5FCD}[Level 5]: {FFFFFF}/sepm - /rbrall - /trazerpmrjs\n");
	ShowPlayerDialog(playerid, 100+100, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos PMRJ {0000EE}«", dialogrande, "OK", "");
	return 1;
}

stock ComandosDJ(playerid)
{
	new dialogrande[180];
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A020F0}[Level 1]: {FFFFFF}/tocar - /ir - /dj - /trabalhar - /sairtrabalho - /asaydj\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A020F0}[Level 2]: {FFFFFF}/expulsardobaile - /jetpack - /trazer\n");
	format(dialogrande, sizeof(dialogrande),"%s%s",dialogrande,"{A020F0}[Level 3]: {FFFFFF}/setdj\n");
	ShowPlayerDialog(playerid, 100+100, DIALOG_STYLE_MSGBOX, "{0000EE}» {FFFFFF}GTA Facções - Comandos DJ {0000EE}«", dialogrande, "OK", "");
	return 1;
}
public Localizar(playerid)
{
	for(new i; i <= HighestID; i++)
	{
		GetPlayerPos(JogadorLocalizado[i], X,Y,Z);
		SetPlayerCheckpoint(playerid, X,Y,Z, 6);
	}
}
// ==================================== [ PORTÕES ] ============================ //
public FecharPortaoPMRJ1(playerid)
{
	MoveDynamicObject(portaoPMRJ1,1539.4004000,-1628.0000000,15.2000000,10);
}
public FecharPortaoPresidio(playerid)
{
	MoveDynamicObject(portaoPresidio,308.2002000,1782.5996000,19.4000000,10);
}
forward FecharPortaoRGF();
public FecharPortaoRGF()
{
    MoveDynamicObject(PortaoReporter, 777.70001, -1330.2, 12.9, 5.0);
    return 1;
}
forward FecharPortaoRGF2();
public FecharPortaoRGF2()
{
    MoveDynamicObject(PortaoReporter2, 778, -1384.8, 13.1, 5.0);
    return 1;
}
forward FecharPortaoHLP();
public FecharPortaoHLP()
{
	MoveDynamicObject(portaohelper1, -1770.4, 980.40002, 25.6, 5.0);
	MoveDynamicObject(portaohelper2, -1770.4, 989.20001, 25.6, 5.0);
	return 1;
}
forward FecharPortaoMTX();
public FecharPortaoMTX()
{
    MoveDynamicObject(portaomtx, 1534.8, -1451.6, 15.2, 5.0);
    return 1;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
stock GetPlayerCity(playerid)
{
	new Float:playerX, Float:playerY, Float:playerZ;
	GetPlayerPos(playerid, playerX, playerY, playerZ);
	if(playerX >= -2997.40 && playerY >= -1115.50 && playerX <= -1213.90 && playerY <= 1659.60) return CIDADESF;
	else if(playerX >= 44.60 && playerY >= -2892.90 && playerX <= 2997.00 && playerY <= -768.00) return CIDADELS;
	else if(playerX >= 869.40 && playerY >= 596.30 && playerX <= 2997.00 && playerY <= 2993.80) return CIDADELV;
	return 3;
}
forward syncanim(playerid);
public syncanim(playerid)
{
        if(GetPVarInt(playerid,"roped") == 0) return 0;
        SetTimerEx("syncanim",dur,0,"i",playerid);
        ApplyAnimation(playerid,"ped","abseil",4.0,0,0,0,1,0);
        return 1;
}
public OnVehicleSpawn(vehicleid)
{
 	DestroyObject(VehicleObject[0]);
 	DestroyObject(VehicleObject[1]);
  	DestroyObject(VehicleObject[2]);
  	DestroyObject(VehicleObject[3]);
    DestroyObject(VehicleObject[4]);
    DestroyObject(VehicleObject[5]);
   	DestroyObject(VehicleObject[6]);
   	DestroyObject(VehicleObject[7]);
   	DestroyObject(VehicleObject[8]);
   	DestroyObject(VehicleObject[9]);
    return 1;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(GetVehicleModel(vehicleid) == 582 || GetVehicleModel(vehicleid) == 488)
	{
        if(GetVehicleModel(vehicleid) == chopperid && ispassenger)
        {
                SetPVarInt(playerid,"chop_id",GetPlayerVehicleID(playerid));
                SetPVarInt(playerid,"roped",0);
        }
        else SetPVarInt(playerid,"chop_id",0);
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(PrivadosMT(GetPlayerVehicleID(playerid)))
		{
			if(Player[playerid][MotoTaxi] >= 1)
			{

			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SCM(playerid, COR_ERRO, "[FALHA]: Veículo reservado para moto taxistas!");
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(Taximetro[playerid][0] == 1)
		{
			SCM(playerid, COR_PRINCIPAL, "[INFO]: Você saiu do moto-taxi, e pagou o moto-taxista");
			SCM(Taximetro[playerid][1], COR_PRINCIPAL, "[INFO] Você recebeu o valor da corrida até aqui.");
			GivePlayerMoney(playerid, 0 - PrecoCorrida[playerid]);
			GivePlayerMoney(Taximetro[playerid][1], PrecoCorrida[playerid]);
			PrecoCorrida[playerid] = 0;
			Taximetro[playerid][1] = 0;
			Taximetro[playerid][0] = 0;
			return 1;
		}
	}
    if(newstate == PLAYER_STATE_DRIVER)
	{
		if(Privados(GetPlayerVehicleID(playerid)))
		{
			if(Player[playerid][PMRJ] >= 1 || Player[playerid][PCRJ] >= 1)
			{
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
   				SCM(playerid, COR_ERRO, "[FALHA]: Você não tem as chaves desse veículo!");
			}
		}
	}
    if(newstate == PLAYER_STATE_DRIVER)
	{
	 	if(CarrosRGF(GetPlayerVehicleID(playerid)))
	 	{
	 		if(Player[playerid][Reporter] >= 1)
	 		{
	 		}
	 		else
	 		{
				RemovePlayerFromVehicle(playerid);
   				SCM(playerid, COR_ERRO, "[FALHA]: Você tem as chaves desse veículo!");
			}
		}
	}
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
 	DestroyObject(VehicleObject[0]);
 	DestroyObject(VehicleObject[1]);
  	DestroyObject(VehicleObject[2]);
  	DestroyObject(VehicleObject[3]);
    DestroyObject(VehicleObject[4]);
    DestroyObject(VehicleObject[5]);
   	DestroyObject(VehicleObject[6]);
   	DestroyObject(VehicleObject[7]);
   	DestroyObject(VehicleObject[8]);
   	DestroyObject(VehicleObject[9]);
	return 1;
}
stock HidePlayerArrow(playerid)
{
	KillTimer(Player[playerid][TimerArrow]);
	Player[playerid][TimerArrow] = 0;
	CP[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
}
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
stock ReturnPlayerID(PlayerName[])
{
	new found=0, id;
	for(new i=0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new foundname[MAX_PLAYER_NAME+1];
			GetPlayerName(i, foundname, MAX_PLAYER_NAME+1);
			new namelen = strlen(foundname);
			new bool:searched=false;
			for(new pos=0; pos <= namelen; pos++)
			{
				if(searched != true)
				{
					if(strfind(foundname,PlayerName,true) == pos)
					{
						found++;
						id = i;
					}
				}
			}
		}
	}
	if(found == 1) return id;
	else
	return INVALID_PLAYER_ID;
}
forward FurandoPneu();
public FurandoPneu()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		new Dano[4];
		if(IsPlayerInAnyVehicle(i))
		{
			new veiculoid = GetVehicleModel(GetPlayerVehicleID(i));
			if(!VeiculosPoliciais(veiculoid))
			{
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
				{
					if(PlayerToPoint(4.0, i,TapeteX,TapeteY,TapeteZ))
					{
						GetVehicleDamageStatus(GetPlayerVehicleID(i), Dano[0], Dano[1], Dano[2], Dano[3]);
						UpdateVehicleDamageStatus(GetPlayerVehicleID(i), Dano[0], Dano[1], Dano[2], TireDano(1, 1, 1, 1));
						return 1;
					}
				}
			}
		}
	}
	return 0;
}
forward DeletarTapete(playerid);
public DeletarTapete(playerid)
{
	if(CrieiTapete[playerid] == 1)
	{
		CrieiTapete[playerid] = 0;
		DestroyObject(TapeteCOP[playerid]);
		GameTextForPlayer(playerid,"~y~Tapete de pregos ~n~~r~foi removido",5000,1);
		KillTimer(PassandoTapete[playerid]);
		KillTimer(TempoTapete[playerid]);
		TapeteX = 0.000000, TapeteY = 0.000000, TapeteZ = 0.000000;
	}
	return 1;
}
stock VeiculosPoliciais(veiculoid)
{
	if(veiculoid == 599 || veiculoid == 528 || veiculoid == 490 || veiculoid == 470 ||
	veiculoid == 432 ||  veiculoid == 461 ||  veiculoid == 510 ||  veiculoid == 521 ||
	veiculoid == 522 ||  veiculoid == 523)
	{
		return 1;
	}
	return 0;

}
forward ABroadTeam(COLOR,const string[],level);
public ABroadTeam(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(i, aname, MAX_PLAYER_NAME);
			if(Player[i][Faccoes] == 1 || Player[i][Faccoes] == 2 || Player[i][Faccoes] == 3)
			{
				SCM(i, COLOR, string);
			}
		}
	}
	return 1;
}

forward ABroadTeam2(COLOR,const string[],level);
public ABroadTeam2(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(i, aname, MAX_PLAYER_NAME);
			if(Player[i][Faccoes] == 4 || Player[i][Faccoes] == 5 || Player[i][Faccoes] == 6)
			{
				SCM(i, COLOR, string);
			}
		}
	}
	return 1;
}

forward ABroadTeam3(COLOR,const string[],level);
public ABroadTeam3(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(i, aname, MAX_PLAYER_NAME);
			if(Player[i][Faccoes] == 7 || Player[i][Faccoes] == 8 || Player[i][Faccoes] == 9)
			{
				SCM(i, COLOR, string);
			}
		}
	}
	return 1;
}
forward ABroadTeam4(COLOR,const string[],level);
public ABroadTeam4(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(i, aname, MAX_PLAYER_NAME);
			if(Player[i][Faccoes] == 12 || Player[i][Faccoes] == 10 || Player[i][Faccoes] == 11)
			{
				SCM(i, COLOR, string);
			}
		}
	}
	return 1;
}
forward ABroadCast(COLOR,const string[],level);
public ABroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Player[i][Admin] >= level)
			{
				SCM(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}
// ================================= [ TIMER'S ] =============================== //
forward TimerRelato(playerid);
public TimerRelato(playerid)
{
	DelayRelato[playerid] = 0;
}
forward TimerKick(playerid);
public TimerKick(playerid)
{
	Kick(playerid);
}
forward TimerHelper(playerid);
public TimerHelper(playerid)
{
	DelayHelper[playerid] = 0;
}
forward TimerBan2(playerid);
public TimerBan2(playerid)
{
	Ban(playerid);
}
forward Spawnar(playerid);
public Spawnar(playerid)
{
	SpawnPlayer(playerid);
}
forward TempoAsay(playerid);
public TempoAsay(playerid)
{
	Player[playerid][DelayAsay] = false;
	Player[playerid][DelayGov] = false;

}
forward AntFlood(playerid);
public AntFlood(playerid)
{
	Player[playerid][Flood] = 0;
}
forward TempoReport(playerid);
public TempoReport(playerid)
{
	Player[playerid][DelayReport] = false;
}
forward TimerGov(playerid);
public TimerGov(playerid)
{
	Player[playerid][DelayGov] = false;
}
public TempoReparar(playerid)
{
	LimiteReparar[playerid] = 0;
}
forward AutoKill(playerid);
public AutoKill(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	if(Pos[0] != Player[playerid][LastPos][0] || Pos[1] != Player[playerid][LastPos][1])return SCM(playerid, COR_ERRO, "[FALHA]: Você se moveu e por isso não conseguiu se matar.");
	SetPlayerHealth(playerid, 0.0);
	return 1;
}
forward Equipar( playerid );
public Equipar( playerid )
{
	Player[playerid][EquiparVIP] = 0;
}

public hora(playerid)
{
	new str[30], mes[12], year, month, day, hour, minute, second;

    getdate(year, month, day);
    gettime(hour,minute,second);

    if(month == 1) { mes = "1"; }
    else if(month == 2) {mes = "2";}
    else if(month == 3) {mes = "3";}
    else if(month == 4) {mes = "4";}
    else if(month == 5) {mes = "5";}
    else if(month == 6) {mes = "6";}
    else if(month == 7) {mes = "7";}
    else if(month == 8) {mes = "8";}
    else if(month == 9) {mes = "9";}
    else if(month == 10) {mes = "10";}
    else if(month == 11) {mes = "11";}
    else if(month == 12) {mes= "12";}

    format(str, sizeof(str), "~w~%d/%s/%d - ~w~%d:%d:%d", day, mes,year, hour, minute, second);
    TextDrawSetString(Text:Hora1, str);
    
    if(TempoReal[1]==true)
    {
	    TempoReal[1]=true;
	   	new wtime;
		if(hour == 16) wtime = 20;
		else if(hour == 17) wtime = 21;
		else if(hour == 18) wtime = 21;
		else if(hour == 19) wtime = 23;
		else if(hour == 20) wtime = 24;
		else if(hour == 21) wtime = 24;
		else if(hour >= 22 && hour <= 23) wtime = 24;
		else wtime = hour;
		for(new i; i <= HighestID; i++)
		{
			SetPlayerTime(i, wtime, 0);
		}
	}
}

public exp(playerid)
{
	new hour, minute, second, string2[20], string3[40];
    gettime(hour,minute,second);
	if(minute == 00)
	{
		if(second == 00)
		{
			for(new i = 0; i <= HighestID; i++)
  			{
				PlayerPlaySound(i, 1057,0.0,0.0,0.0);
				if(Player[i][Vip] < 1 )
	 			{
	 			    SCM(i, COR_PRINCIPAL,"------------[SALÁRIO]-----------------");
		   			GivePlayerMoney(i, 30000);
					SCM(i, COR_BRANCO, "Salario: R$ [30.000]");
					Player[i][Cash]++;
					format(string3, sizeof(string3), "Dinheiro: [%d]", GetPlayerMoney(i));
					SCM(i, COR_BRANCO, string3);
					format(string2, sizeof(string2), "Cash: [%d]", Player[i][Cash]);
					SCM(i, COR_BRANCO, string2);
					SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 					SalvarDados(i);
				}
				else
				{
	 			    SCM(i, COR_PRINCIPAL,"------------[SALÁRIO]-----------------");
		   			GivePlayerMoney(i, 30000);
					SCM(i, COR_BRANCO, "Salario: R$ [30.000]");
					Player[i][Cash] += 2;
					format(string3, sizeof(string3), "Dinheiro: [%d]", GetPlayerMoney(i));
					SCM(i, COR_BRANCO, string3);
					format(string2, sizeof(string2), "Cash: [%d]", Player[i][Cash]);
					SCM(i, COR_BRANCO, string2);
					SetPlayerScore(playerid, GetPlayerScore(playerid)+2);
					SalvarDados(i);
				}
				SCM(i, COR_BRANCO, "---------------------------------------------");
			}
		}
	}
}


forward CheckTeleport(playerid, id);
public CheckTeleport(playerid, id)
{
	if(PlayerToPoint(1.5, id, -23.8798,-2506.6497,36.6484))
	{
		CreateExplosion(-23.8798,-2506.6497,36.6484,12,0.2);
		CreateExplosion(-23.8798,-2506.6497,36.6484,12,0.2);
		SetPlayerVelocity(id,0.0,0.0,-0.5);
		SetTimerEx("ReturnFromSlap",1000,false,"dd",playerid,id);
	}
	else
	{
		SetPlayerInterior(id,SlapPlayer[id][SInt]);
		SetPlayerPos(id,SlapPlayer[id][SposX],SlapPlayer[id][SposY],SlapPlayer[id][SposZ]);
		SetPlayerFacingAngle(id,SlapPlayer[id][SposA]);
		SetPlayerHealth(id,SlapPlayer[id][SHl]),SetPlayerArmour(id,SlapPlayer[id][SAr]);
		SlapPlayer[id][Slapping]=false;
		SCM(playerid, COR_ERRO, "[FALHA]: Jogador está com lag,andou durante o teste, ou está de esc.");
	}
}
forward ReturnFromSlap(playerid, id);
public ReturnFromSlap(playerid, id)
{
	if(Player[id][InHospital] == false)
	{
		if(PlayerToPoint(1.5, id, -23.8798,-2506.6497,36.6484))
		{
			new Float:NPhp,Float:NParmor,Float:Sposx2,Float:Sposy2,Float:Sposz2;
			GetPlayerPos(id,Sposx2,Sposy2,Sposz2);
			GetPlayerHealth(id,NPhp),GetPlayerArmour(id,NParmor);


			if(NPhp<100.0&&NParmor<100.0)
				SCM(playerid, COR_VERDE,"APROVADO: O jogador perdeu hp e armour normalmente.");
			else
			{
				new Pws[13][2],bool:Withweapons=false;
				for(new w = 0; w < 13; w++)
				{
					GetPlayerWeaponData(id,w,Pws[w][0],Pws[w][1]);
					if(Pws[w][1]>0) Withweapons=true;
				}
				//		if(SlapPlayer[id][TickCount]>=LastUpdate[id])
				if(SlapPlayer[id][SposX] == Sposx2)
					SCM(playerid, COR_ERRO, "[FALHA]: Jogador esta de esc.");
				else if(Withweapons==true)
					SCM(playerid, COR_ERRO, "[FALHA]: Jogardor esta desincronizado.");
				else
				{
					if(NPhp==100.0)
						SCM(playerid, COR_ERRO, "REPROVADO: O hp do jogador não mudou.");
					if(NParmor==100.0)
						SCM(playerid, COR_ERRO, "REPROVADO: O armour do jogador não mudou.");
				}
			}
			SetPlayerInterior(id,SlapPlayer[id][SInt]);
			SetPlayerPos(id,SlapPlayer[id][SposX],SlapPlayer[id][SposY],SlapPlayer[id][SposZ]);
			SetPlayerFacingAngle(id,SlapPlayer[id][SposA]);
			SetPlayerHealth(id,SlapPlayer[id][SHl]),SetPlayerArmour(id,SlapPlayer[id][SAr]);
			SlapPlayer[id][Slapping]=false;
		}
		else
		{
			SCM(id, COR_ERRO, "[FALHA]: Você andou durante o teste.");
			SCM(playerid, COR_ERRO, "[FALHA]: Jogador andou. Repita o teste.");
			SetPlayerInterior(id,SlapPlayer[id][SInt]);
			SetPlayerPos(id,SlapPlayer[id][SposX],SlapPlayer[id][SposY],SlapPlayer[id][SposZ]);
			SetPlayerFacingAngle(id,SlapPlayer[id][SposA]);
			SetPlayerHealth(id,SlapPlayer[id][SHl]),SetPlayerArmour(id,SlapPlayer[id][SAr]);
			SlapPlayer[id][Slapping]=false;
		}
	}
	else SCM(playerid, COR_ERRO, "[FALHA]: O player morreu durante o teste.");
}
forward SaveVariables(id);
public SaveVariables(id)
{
	new Float: health, Float: armour, Float: SX, Float: SY, Float: SZ, Float:ang;
	GetPlayerHealth(id, health);
	GetPlayerArmour(id, armour);
	GetPlayerPos(id, SX, SY, SZ);
	GetPlayerFacingAngle(id, ang);
	Variable[id][VirtualWorld] = GetPlayerVirtualWorld(id);

	Variable[id][pSkin] = GetPlayerSkin(id);
	Variable[id][pHealth] = floatround(health);

	if(armour > 0)
		Variable[id][pArmour] = floatround(armour);

	Variable[id][Float_X] = SX;
	Variable[id][Float_Y] = SY;
	Variable[id][Float_Z] = SZ;
	Variable[id][pAngle] = ang;
	Variable[id][Inter] = GetPlayerInterior(id);
	Variable[id][WantedLevel] = GetPlayerWantedLevel(id);
	SetPlayerWantedLevel(id,0);

	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(id, i, Weapons[id][i][0], Weapons[id][i][1]);
	}
	ResetPlayerWeapons(id);
}
forward LoadVariables(id);
public LoadVariables(id)
{
	ResetPlayerWeapons(id);
	for (new i; i < 13; i++)
	{
		if(Weapons[id][i][0] > 0)
		GivePlayerWeapon(id, Weapons[id][i][0], Weapons[id][i][1]);
	}

	SetPlayerWantedLevel(id,Variable[id][WantedLevel]);
	SetPlayerArmour(id, float(Variable[id][pArmour]));
	SetPlayerHealth(id, float(Variable[id][pHealth]));

	if (Variable[id][pArmour] > 1) SetPlayerArmour(id, Variable[id][pArmour]);

	SetPlayerSkin(id, Variable[id][pSkin]);
	SetPlayerVirtualWorld(id, Variable[id][VirtualWorld]);
	SetPlayerPos(id, Variable[id][Float_X], Variable[id][Float_Y], Variable[id][Float_Z]);
	SetPlayerFacingAngle(id, Variable[id][pAngle]);
	SetPlayerInterior(id, Variable[id][Inter]);
	SCM(id, COR_PRINCIPAL,"[INFO]: Suas últimas configurações salvas foram carregadas.");
	return 1;
}
public @NoQuarto(playerid)
{
	if(GetPlayerInterior(playerid) == 6)
	{
		SetPlayerPos(playerid, 1204.8053,12.4724,1000.9219);
		SetPlayerInterior(playerid, 2);
		NoQuarto=0;
		GameTextForPlayer(playerid,"~r~seu tempo acabou!", 1000,1);
		StopLoopingAnim(playerid);
		ApplyActorAnimation(Puta[1], "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	}
	return 1;
}
public Banido(playerid)
{
    switch(TimerBan[playerid])
    {
    	case 5:
    	{
            GameTextForPlayer(playerid, "~y~ 5", 1000, 3);
     	}
        case 4:
        {
            GameTextForPlayer(playerid, "~y~ 4", 1000, 3);
        }
        case 3:
        {
            GameTextForPlayer(playerid, "~y~ 3", 1000, 3);
        }
        case 2:
      	{
            GameTextForPlayer(playerid, "~y~ 2", 1000, 3);
       	}
        case 1:
        {
            GameTextForPlayer(playerid, "~y~ 1", 1000, 3);
        }
        case 0:
        {
            GameTextForPlayer(playerid, "~r~ Kickado", 1000, 3);
            Kick(playerid);
        }
    }
    TimerBan[playerid] --;
}
// ===================================== [ MENSAGENS ] =========================== //
public MensagemPCRJ(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][PCRJ] >= 1)
			{
				SCM(i, 0xA9A9A9FF, string);
			}
		}
	}
	return 1;
}
public MensagemPmrj(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][PMRJ] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemVip(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Vip] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemReporter(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Reporter] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemHelperToAdmin(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][pHelper] >= 1 && Player[i][Admin] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemHelper(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][pHelper] >= 1)
			{
				SCM(i, 0x00F6F6AA, string);
			}
		}
	}
	return 1;
}
public MensagemLider(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Lider] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemDJ(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][DJ] >=1)
			{
				SCM(i, COR_DJ, string);
			}
		}
	}
	return 1;
}
public MensagemFrente(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Cargo] == 4)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemGerente(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Cargo] == 3)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
public MensagemAdmin(const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Admin] >= 1)
			{
				SCM(i, 0xFFBD9DFF, string);
			}
		}
	}
	return 1;
}
stock SendMessageToAdminsAndHelper(color,const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Admin] >= 1 || Player[i][pHelper] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
stock SendMessageToHelper(color,const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][pHelper] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
stock SendMessageToReporter(color,const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][Reporter] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
stock SendMessageToMotoTaxi(color,const string[])
{
	for(new i = 0; i <= HighestID; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][MotoTaxi] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
stock SendMessageToCops(color,const string[])
{
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1)
		{
			if(Player[i][PCRJ] >= 1 || Player[i][PMRJ] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
forward reduzirTempo(id);
public reduzirTempo(id)
{
	if(IsPlayerConnected(id))
	{
	    new string[62];
		if(Player[id][TempoPreso] == 0 && Player[id][Resgatado]==0)
		{
		    format(string, sizeof(string),"~r~VOCE ESTA SOLTO");
			GameTextForPlayer(id, string, 1000, 3);
			if(PresoADM[id]==0)
			{
				SetPlayerWantedLevel(id, 0);
				Player[id][Procurado] =0;
			}
			PresoADM[id] = 0;
			Presidio[id] = 0;
			EmTrabalho[id] = 0;
			Player[id][TempoPreso] = 0;
			SetPlayerInterior(id, 0);
			SetPlayerArmour(id, 0);
			SetPlayerHealth(id, 100);
			SalvarDados(id);
	  		SpawnPlayer(id);
			return 1;
		}
		Player[id][TempoPreso]--;
	    SetTimerEx("reduzirTempo", 1000, false, "d", id);
	}
    return 1;
}
public TextPlayer()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
    {
    	if(!(IsPlayerNPC(i))) //Verifica se o jogador é um NPC.
		{
	        // ==================== [ ORGANIZAÇÕES ] =============================== //
	  		if(GetPlayerWantedLevel(i) == 1){SetPlayerChatBubble(i,"** Procurado Level 1 **", COR_ERRO, 30.0, 2000);}
	  		if(GetPlayerWantedLevel(i) == 2){SetPlayerChatBubble(i,"** Procurado Level 2 **", COR_ERRO, 30.0, 2000);}
	  		if(GetPlayerWantedLevel(i) == 3){SetPlayerChatBubble(i,"** Procurado Level 3 **", COR_ERRO, 30.0, 2000);}
	  		if(GetPlayerWantedLevel(i) == 4){SetPlayerChatBubble(i,"** Procurado Level 4 **", COR_ERRO, 30.0, 2000);}
	  		if(GetPlayerWantedLevel(i) == 5){SetPlayerChatBubble(i,"** Procurado Level 5 **", COR_ERRO, 30.0, 2000);}
	        if(Player[i][MotoTaxi] >= 1)
	        {
	            SetPlayerChatBubble(i,"Moto Taxi", 0x00FF26FF, 20.0, 2000);
	        }
	        if(Player[i][Reporter] >= 1)
	        {
	            SetPlayerChatBubble(i,"Reporter GF", COR_REPORTER, 20.0, 2000);
	        }
	        if(Player[i][DJ] >= 1 && Player[i][DJ] <= 2)
	        {
	            SetPlayerChatBubble(i,"DJ GF", COR_DJ, 20.0, 2000);
	        }
	        if(Player[i][DJ] == 3)
	        {
	            SetPlayerChatBubble(i,"Líder DJ GF", COR_DJ, 20.0, 10000);
	        }
	        if(Player[i][pHelper] >= 1)
	        {
	            SetPlayerChatBubble(i, "Helper", COR_HELPER, 20.0, 2000);
	        }
	        // =============================== [ PCRJ ] ============================ //
	        if(Player[i][PCRJ] == 1)
	        {
	            SetPlayerChatBubble(i, "Agente da PCRJ", COR_PCRJ, 10.0, 2000);
	        }
	        if(Player[i][PCRJ] == 2)
	        {
	            SetPlayerChatBubble(i, "Inscrivão da PCRJ", COR_PCRJ, 10.0, 2000);
	        }
	        if(Player[i][PCRJ] == 3)
	        {
	            SetPlayerChatBubble(i, "Inespetor da PCRJ", COR_PCRJ, 10.0, 2000);
	        }
	        if(Player[i][PCRJ] == 4)
	        {
	            SetPlayerChatBubble(i, "Investigador da PCRJ", COR_PCRJ, 10.0, 2000);
	        }
	        if(Player[i][PCRJ] == 5)
	        {
	            SetPlayerChatBubble(i, "Delegado da PCRJ", COR_PCRJ, 10.0, 2000);
	        }
			// ==================== [ PMRJ ] =============================== //
	        if(Player[i][PMRJ] == 1)
	        {
	            SetPlayerChatBubble(i, "Recruta da PMRJ", COR_PMRJ, 10.0, 10000);
	        }
	        if(Player[i][PMRJ] == 2)
	        {
	            SetPlayerChatBubble(i, "Soldado da PMRJ", COR_PMRJ, 10.0, 10000);
	        }
	        if(Player[i][PMRJ] == 3)
	        {
	            SetPlayerChatBubble(i, "Sargento da PMRJ", COR_PMRJ, 10.0, 10000);
	        }
	        if(Player[i][PMRJ] == 4)
	        {
	            SetPlayerChatBubble(i, "Capitão da PMRJ", COR_PMRJ, 10.0, 10000);
	        }
	        if(Player[i][PMRJ] == 5)
	        {
	            SetPlayerChatBubble(i, "Coronel da PMRJ", COR_PMRJ, 10.0, 10000);
	        }
	        //Dono
	        if(Player[i][Faccoes] == 1 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Engenho", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 2 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Martins", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 3 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Antares", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 4 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono da Primavera", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 5 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Juramento", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 6 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Urubu", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 7 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono da Vila Aliança", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 8 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Muquiço", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 9 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Sapo de Camará", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 10 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Bateau Mouche", COR_PRINCIPAL, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 11 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono do Cesarão", COR_CV, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 12 && Player[i][Dono]==1)
	        {
	            SetPlayerChatBubble(i, "Dono da Tres Pontes", COR_PRINCIPAL, 20.0, 2000);
	        }
	        // ============================== [ LÍDER ] ======================= //
	        if(Player[i][Faccoes] == 1 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder CMD", COR_CV, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 2 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder CMD", COR_CV, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 3 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder CMD", COR_CV, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 4 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder LLL", COR_ADA, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 5 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder LLL", COR_ADA, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 6 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder LLL", COR_ADA, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 7 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder 3CP", COR_TCP, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 8 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder 3CP", COR_TCP, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 9 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder 3CP", COR_TCP, 20.0, 2000);
	        }
 	        if(Player[i][Faccoes] == 11 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder MLC", COR_MLC, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 10 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder MLC", COR_MLC, 20.0, 2000);
	        }
	        if(Player[i][Faccoes] == 12 && Player[i][Lider]==1)
	        {
	            SetPlayerChatBubble(i, "Líder MLC", COR_MLC, 20.0, 2000);
	        }
	        // =========================== [ CARGOS ] ========================= //
	        if(Player[i][Cargo]==4)
	        {
	            SetPlayerChatBubble(i, "Frente", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Cargo]==3)
	        {
	            SetPlayerChatBubble(i, "Gerente", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Cargo]==2)
	        {
	            SetPlayerChatBubble(i, "Vapor", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Cargo]==1)
	        {
	            SetPlayerChatBubble(i, "Fogueteiro", COR_PRINCIPAL, 20.0, 2000);
	        }
	        // ================================ [ ADMINISTRADOR ] ================ //
	        if(Player[i][Admin]==5)
	        {
	            SetPlayerChatBubble(i, "Game Master", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Admin]==4)
	        {
	            SetPlayerChatBubble(i, "Sub Game Master", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Admin]==3)
	        {
	            SetPlayerChatBubble(i, "Administrador Fixo", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Admin]==2)
	        {
	            SetPlayerChatBubble(i, "Administrador Ajudante", COR_PRINCIPAL, 20.0, 2000);
	        }
	        if(Player[i][Admin]==1)
	        {
	            SetPlayerChatBubble(i, "Administrador Tempórario", COR_PRINCIPAL, 20.0, 2000);
	        }
	        // ========================= [ LUTADOR ] ========================= //
	        if(Player[i][Lutador] == 1)
	        {
	            SetPlayerChatBubble(i, "Lutador 1", 0x0000FFFF, 20.0, 2000);
	        }
	        if(Player[i][Lutador] == 2)
	        {
	            SetPlayerChatBubble(i, "Lutador 2", COR_ERRO, 20.0, 2000);
	        }
    	}
    }
}
public BombTimer(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Você explodiu o caixa eletrónico e recebeu R$50.000.");
	GivePlayerMoney(playerid, 50000);
	DestroyObject(BombObject[playerid]);
	BombArmed[playerid] = false;
	return 1;
}
forward BombTimer2(playerid);
public BombTimer2(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O player %s explodiu o primeiro portão do presídio de segurança máxima de las venturas.",Nome(playerid));
	DestroyObject(BombObject[playerid]);
	DestroyObject(portaoPresidio1);
	BombArmed[playerid] = false;
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Você conseguiu explodir o portão, em 2 minutos o portão é reconstruido.");
	SetTimer("PortaoVoltar",120000,0);
	return 1;
}
forward BombTimer3(playerid);
public BombTimer3(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SendFormattedMessageToAll(COR_NEGATIVO, "-GFInfo-: O player %s explodiu o segundo portão do presídio de segurança máxima de las venturas.",Nome(playerid));
	DestroyObject(BombObject[playerid]);
	DestroyObject(portaoPresidio2);
	BombArmed[playerid] = false;
	SCM(playerid,COR_PRINCIPAL,"[INFO]: Você conseguiu explodir o portão, em 2 minutos o portão é reconstruido.");
	SetTimer("PortaoVoltar2",120000,0);
	return 1;
}
// ================================= [ ROUBAR MERCADO CAIXA 1 ] ======================== //
forward BombTimer4(playerid);
public BombTimer4(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Você explodiu o caixa eletrónico do mercado e recebeu R$10.000.");
	GivePlayerMoney(playerid, 10000);
	DestroyObject(BombObject[playerid]);
	BombArmed[playerid] = false;
	DestroyObject(Caixa[1]);
	Caixa[1] = CreateDynamicObject(2943, -0.9904,-31.3466,1003.5494,   0.00, 0.00, 180.00);
	SetTimer("CaixaVoltar", 120000, 0);
	return 1;
}
forward CaixaVoltar();
public CaixaVoltar()
{
	DestroyObject(Caixa[1]);
	Caixa[1] = CreateDynamicObject(2942, -0.9904,-31.3466,1003.5494,   0.00, 0.00, 180.00);
	Explodiu = false;
}
// =============================== [ ROUBAR MERCADO CAIXA 2 ] ======================== //
forward BombTimer5(playerid);
public BombTimer5(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Você explodiu o caixa eletrónico do mercado e recebeu R$10.000.");
	GivePlayerMoney(playerid, 10000);
	DestroyObject(BombObject[playerid]);
	BombArmed[playerid] = false;
	DestroyObject(Caixa[2]);
	Caixa[2] = CreateDynamicObject(2943, -5.4830,-31.1496,1003.5494,   0.00, 0.00, 180.00);
	SetTimer("CaixaVoltar2", 120000, 0);
	return 1;
}
forward CaixaVoltar2();
public CaixaVoltar2()
{
	DestroyObject(Caixa[2]);
	Caixa[2] = CreateDynamicObject(2942, -5.4830,-31.1496,1003.5494,   0.00, 0.00, 180.00);
	Explodiu2 = false;
}
// =============================== [ ROUBAR MERCADO CAIXA 3 ] ======================== //
forward BombTimer6(playerid);
public BombTimer6(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SCM(playerid, COR_PRINCIPAL, "[INFO]: Você explodiu o caixa eletrónico do mercado e recebeu R$10.000.");
	GivePlayerMoney(playerid, 10000);
	DestroyObject(BombObject[playerid]);
	BombArmed[playerid] = false;
	DestroyObject(Caixa[3]);
	Caixa[3] = CreateDynamicObject(2943, 8.4970,-31.5783,1003.5494,   0.00, 0.00, 180.00);
	SetTimer("CaixaVoltar3", 120000, 0);
	return 1;
}
forward CaixaVoltar3();
public CaixaVoltar3()
{
	DestroyObject(Caixa[3]);
	Caixa[3] = CreateDynamicObject(2942, 8.4970,-31.5783,1003.5494,   0.00, 0.00, 180.00);
	Explodiu3 = false;
}
// ============================================================================= //
forward PortaoVoltar();
public PortaoVoltar()
{
	portaoPresidio1 = CreateObject(988,286.3999900,2052.7000000,17.6000000,0.0000000,0.0000000,90.0000000);
	Explodindo=false;
}
forward PortaoVoltar2();
public PortaoVoltar2()
{
	portaoPresidio2 = CreateObject(988,266.3999900,2052.8999000,17.6000000,0.0000000,0.0000000,90.0000000);
	Explodindo2=false;
}
forward Jogar(playerid);
public Jogar(playerid)
{
    new Float:Pos[3], string[72];
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    if(Pos[0] != Player[playerid][LastPos][0] || Pos[1] != Player[playerid][LastPos][1]) return SCM(playerid, COR_ERRO, "[FALHA]: Você se moveu.");
    SpawnPlayer(playerid);
    EmTrabalho[playerid] = 0;
	format(string,sizeof(string), "O %s %s saiu do modo trabalho.", CheckOrg(playerid), Nome(playerid));
	SendClientMessageToAll(COR_NEGATIVO, string);
	return 1;
}
stock CheckOrg(playerid)
{
	new text[28] = "Nenhuma";
	if(Player[playerid][PMRJ] >= 1) text = "Policial";
	else if(Player[playerid][PCRJ] >= 1) text = "Policial";
	else if(Player[playerid][Reporter] >= 1) text = "Repórter";
	return text;
}
stock isEmail(email[])
{
    if (!email[0]) return false;

    new
        len = strlen(email),
        arroba = 0,
        ponto = 0;

    for( ; arroba != len; arroba++) {
        if(!(email[arroba] - 64)) {
            for( ponto = arroba; ponto != len; ponto++) {
                if(!(email[ponto] - 46)) {
                    break;
                }
            }
            break;
        }
    }
    return (arroba + 1 < ponto < len && ponto && arroba);
}
//==============================================================================
GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;

	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);

	if (GetPlayerVehicleID(playerid)) {
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}

	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock StartSpectate(playerid, specid)
{
	for(new x = 0; x < MAX_PLAYERS; x++)
	{
		if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && Player[x][gSpectateID] == playerid)
		{
			AdvanceSpectate(x);
		}
	}
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
		Player[playerid][gSpectateID] = specid;
		Player[playerid][gSpectateType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
		Player[playerid][gSpectateID] = specid;
		Player[playerid][gSpectateType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specid));
    new string[128];
	for(new i = 0; i <= HighestID; i ++)
	{
		if(IsPlayerConnected(i) && Player[i][LastReport] == specid)
		{
		    format(string, sizeof(string),"Recebido do %s %s: Seu último report está sendo verificado por min.", AccountName(playerid), Nome(playerid));
		    SCM(i, COR_AMARELO, string);
		    Player[i][LastReport] = INVALID_PLAYER_ID;
		    Player[playerid][pRpt]++;
		}
	}
	format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~%s - ID:%d~n~~y~~h~< Shift ~w~-~r~~h~ Space >", Nome(specid),specid);
	GameTextForPlayer(playerid,string,10000,3);
	return 1;
}
stock StopSpectate(playerid)
{
    SpawnPlayer(playerid);
	Player[playerid][ReloadPlayer] = true;
	TogglePlayerSpectating(playerid, 0);
	Player[playerid][gSpectateID] = INVALID_PLAYER_ID;
	Player[playerid][gSpectateType] = ADMIN_SPEC_TYPE_NONE;
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~r~Spectate Desligado",1000,3);
	return 1;
}
stock AdvanceSpectate(playerid)
{
	if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid); return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && Player[playerid][gSpectateID] != INVALID_PLAYER_ID)
	{
		for(new x=Player[playerid][gSpectateID]+1; x<=MAX_PLAYERS; x++)
		{
			if(x == MAX_PLAYERS)
			{
				x = 0;
			}
			if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && Player[x][gSpectateID] != INVALID_PLAYER_ID ||
				(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}
stock ReverseSpectate(playerid)
{
	if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid); return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && Player[playerid][gSpectateID] != INVALID_PLAYER_ID)
	{
		for(new x=Player[playerid][gSpectateID]-1; x>=0; x--)
		{
			if(x == 0)
			{
				x = MAX_PLAYERS;
			}
			if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && Player[x][gSpectateID] != INVALID_PLAYER_ID ||
				(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}
public SendMensagens()
{
    new string[160];
    new random1 = random(sizeof(Mensagens));
    format(string, sizeof(string), "%s", Mensagens[random1]);
    SendClientMessageToAll(-1,string);
    return 1;
}
ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21) // Strip out leading spaces
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID; // No passed text
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos])) // Check whole passed stri
	{
		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
			{
				/*if (playerid != INVALID_PLAYER_ID)
				{
					SCM(playerid, COR_ERRO, "User not connected");
				}*/
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid; // A player was found
			}
		}
	}
	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME+1];
	for (new i = 0; i <= HighestID; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[pos], true, len) == 0) // Check segment of name
			{
				if (len == strlen(name)) // Exact match
				{
					return i; // Return the exact player on an exact match
					// Otherwise if there are two players:
					// Me and MeYou any time you entered Me it would find both
					// And never be able to return just Me's id
				}
				else // Partial match
				{
					count++;
					userid = i;
				}
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SCM(playerid, COR_ERRO, "Multiple users found, please narrow earch");
			}
			else
			{
				SCM(playerid, COR_ERRO, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid; // INVALID_USER_ID for bad return
}
forward EfeitoDrogas(playerid);
public EfeitoDrogas(playerid)
{
	SetPlayerWeather(playerid, 0);
}
stock CreateMapIcons(playerid)
{
	// =========================== [ BATALHÕES ] ================================= //
	SetPlayerMapIcon(playerid, 2, 1568.1403,-1694.2502,5.8906, 30, 0,MAPICON_LOCAL);// DP DA PMRJ
	SetPlayerMapIcon(playerid, 3, 2296.7395,2460.0120,10.8203, 30, 0,MAPICON_LOCAL);// DP DA PCRJ
	// =========================== [ BANCO EM LV ] ============================= //
	SetPlayerMapIcon(playerid, 4, 2015.0265,1184.0582,10.8203, 52, 0,MAPICON_LOCAL);// LV
	// =========================== [ BAR ] ======================================= //
	SetPlayerMapIcon(playerid, 5, 2309.8137,-1643.8263,14.8270, 49, 0, MAPICON_LOCAL); // LS
	// =========================== [ BOATE VIP LS ] ============================= //
	SetPlayerMapIcon(playerid, 6, 1836.8048,-1682.4952,13.3326, 48, 0, MAPICON_LOCAL); // LS
	// ============================== [ FAVELAS ] ============================== //
	SetPlayerMapIcon(playerid, 9, 2204.7800,-834.8940,128.3554, 23, 0, MAPICON_LOCAL); //Morro do Engenho
	SetPlayerMapIcon(playerid, 10, 2688.3999023438,-827.79998779297,64.199996948242, 23, 0, MAPICON_LOCAL); //Martins
	SetPlayerMapIcon(playerid, 10, 2688.3999023438,-827.79998779297,64.199996948242, 23, 0, MAPICON_LOCAL); //Antares
	SetPlayerMapIcon(playerid, 11, 1111.7084,-2093.1689,69.3554, 23, 0, MAPICON_LOCAL); //Morro da Primavera
	SetPlayerMapIcon(playerid, 12, 943.4615,-711.3625,122.2109, 23, 0, MAPICON_LOCAL); //Morro do Urubu
	SetPlayerMapIcon(playerid, 13, 1911.6133,-1978.3553,14.7859, 23, 0, MAPICON_LOCAL); //Sapo de Camará
	SetPlayerMapIcon(playerid, 14, 123.2502,-288.7776,1.5781, 23, 0, MAPICON_LOCAL); //Muquiço
	SetPlayerMapIcon(playerid, 15, 2190.5564,2857.6909,10.8203, 23, 0, MAPICON_LOCAL); //Tres Pontes
	SetPlayerMapIcon(playerid, 16, -2505.0376,-702.4961,139.3554, 23, 0, MAPICON_LOCAL); //Morro do Juramento
	SetPlayerMapIcon(playerid, 17, 2650.8037,2274.1150,10.8203, 23, 0, MAPICON_LOCAL); //Cesarão
	SetPlayerMapIcon(playerid, 20, 2190.5564,2857.6909,10.8203, 23, 0, MAPICON_LOCAL); //Bateau Mouche
	// =========================== [ VILA MIMOSA] ============================= //
	SetPlayerMapIcon(playerid, 18, 2495.5181,-1691.0253,14.7656, 21, 0,MAPICON_LOCAL);// PUTEIRO
	SetPlayerMapIcon(playerid, 19, 123.2502,-288.7776,1.5781, 23, 0, MAPICON_LOCAL); //Vila Aliança
	// =========================== [ MERCADO ] ================================= //
	SetPlayerMapIcon(playerid, 20, 1352.0934,-1761.5873,19.0781, 56, 0, MAPICON_LOCAL); //Vila Aliança
}
forward Contagem(playerid);
public Contagem(playerid)
{
	new string[128];
	if(GetPVarInt(playerid,"Tempo") == 30)
	{
		if(Player[playerid][PMRJ] >= 1)
		{
			SendFormattedMessageToAll(-1, "-GFInfo-: A {3A5FCD}PMRJ{FFFFFF} pacificou a comunidade '%s{FFFFFF}' da facção '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_PMRJ;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{3A5FCD}PMRJ";
		}
		else if(Player[playerid][PCRJ] >= 1)
		{
			SendFormattedMessageToAll(-1, "-GFInfo-: O {A9A9A9}PCRJ{FFFFFF} pacificou a comunidade '%s{FFFFFF}' da facção '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_PCRJ;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{A9A9A9}PCRJ";
		}
		else if(Player[playerid][Faccoes] == 1 || Player[playerid][Faccoes] == 2 || Player[playerid][Faccoes] == 3 )
		{
			SendFormattedMessageToAll(-1, "-GFInfo-: A facção {FF0000}CMD{FFFFFF} tomou a comunidade '%s{FFFFFF}' da '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_CV;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{FF0000}CMD";
		}
		else if(Player[playerid][Faccoes] == 4 || Player[playerid][Faccoes] == 5 || Player[playerid][Faccoes] == 6 ) {
			SendFormattedMessageToAll(-1, "-GFInfo-: A facção {0000FF}LLL{FFFFFF} tomou a comunidade '%s{FFFFFF}' da '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_ADA;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{0000FF}LLL";
		}
		else if(Player[playerid][Faccoes] == 7 || Player[playerid][Faccoes] == 8 || Player[playerid][Faccoes] == 9) {
			SendFormattedMessageToAll(-1, "-GFInfo-: A facção {FFFF00}3CP{FFFFFF} tomou a comunidade '%s{FFFFFF}' da '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_TCP;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{FFFF00}3CP";
		}
		else if(Player[playerid][Faccoes] == 11 || Player[playerid][Faccoes] == 10 || Player[playerid][Faccoes] == 12) {
			SendFormattedMessageToAll(-1, "-GFInfo-: A facção {D2691E}MLC{FFFFFF} tomou a comunidade '%s{FFFFFF}' da '%s{FFFFFF}'.", GangZone[GetPVarInt(playerid,"GZAtacada")][GZName], GZDono[GetPVarInt(playerid,"GZAtacada")]);
			GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor] = COR_MLC;
			GZDono[GetPVarInt(playerid,"GZAtacada")] = "{D2691E}MLC";
		}

		GivePlayerMoney(playerid, 10000);
		Gz[playerid]=0;
		GangZoneHideForAll(GangZonas[GetPVarInt(playerid,"GZAtacada")]);
		GangZoneShowForAll(GangZonas[GetPVarInt(playerid,"GZAtacada")], GangZone[GetPVarInt(playerid,"GZAtacada")][GZColor]);
		KillTimer(ContagemDominio[GetPVarInt(playerid,"GZAtacada")]);
		ContagemDominio[GetPVarInt(playerid,"GZAtacada")] = 0;
		SetPVarInt(playerid,"GZAtacada",-1);
		SetPVarInt(playerid,"Tempo",0);
		return 1;
	}
	else
 {
		SetPVarInt(playerid,"Tempo",GetPVarInt(playerid,"Tempo")+1);
		format(string,sizeof(string),"~w~%i / ~r~30", GetPVarInt(playerid,"Tempo"));
		GameTextForPlayer(playerid, string, 2500, 3);
	}
	return 1;
}
stock AccountName(playerid) // aqui
{
	new accname[30];
    if(Player[playerid][Cargo] == 1)
	{
		accname = "Fogueteiro";
	}
    else if(Player[playerid][Cargo] == 2)
	{
		accname = "Vapor";
	}
	else if(Player[playerid][Cargo] == 3)
	{
		accname = "Gerente";
	}
    else if(Player[playerid][Cargo] == 4)
	{
		accname = "Frente";
	}
 	if(Player[playerid][Lider] == 1)
	{
		accname = "Lider da Facção";
	}
 	if(Player[playerid][Dono] == 1)
	{
		accname = "Dono da Favela";
	}
	// ========================== [ ADMINISTRADOR ] ======================== //
	if(Player[playerid][Admin] == 1)
	{
		accname = "Administrador Tempórario";
	}
	else if(Player[playerid][Admin] == 2)
	{
		accname = "Administrador Ajudante";
	}
	else if(Player[playerid][Admin] == 3)
	{
		accname = "Administrador Ajudante";
	}
	else if(Player[playerid][Admin] == 4)
	{
		accname = "Sub Game Master";
	}
	else if(Player[playerid][Admin] == 5)
	{
		accname = "Game Master";
	}
	// =================== [ PMRJ ] ===================== //
	else if(Player[playerid][PMRJ] == 1)
	{
		accname = "Recruta";
	}
	else if(Player[playerid][PMRJ] == 2)
	{
		accname = "Soldado";
	}
	else if(Player[playerid][PMRJ] == 3)
	{
		accname = "Sargento";
	}
	else if(Player[playerid][PMRJ] == 4)
	{
		accname = "Capitão";
	}
	else if(Player[playerid][PMRJ] == 5)
	{
		accname = "Coronel";
	}
	else if(Player[playerid][PCRJ] == 1)
	{
		accname = "Agente da PCRJ";
	}
	else if(Player[playerid][PCRJ] == 2)
	{
		accname = "Escrivão da PCRJ";
	}
	else if(Player[playerid][PCRJ] == 3)
	{
		accname = "Inspetor da PCRJ";
	}
	else if(Player[playerid][PCRJ] == 4)
	{
		accname = "Investigador da PCRJ";
	}
	else if(Player[playerid][PCRJ] == 5)
	{
		accname = "Delegado da PCRJ";
	}
    else if(Player[playerid][Reporter] >= 1)
	{
		accname = "Repórter";
	}
    else if(Player[playerid][pHelper] >= 1)
	{
		accname = "Helper";
	}
	return accname;
}
// ========================= [ Kickar o player ] =============================== //
forward Kicka(p);
public Kicka(p)
{
    #undef Kick
    Kick(p);
    #define Kick(%0) SetTimerEx("Kicka", 100, false, "i", %0)
    return 1;
}
public OnPlayerWeaponShot( playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ )
{
    if(hittype == BULLET_HIT_TYPE_PLAYER && !IsPlayerNPC(hitid))
    {
	    if(!IsAFK{ hitid } && !CoolDown{ playerid })
	    {
    		new surf = GetPlayerSurfingVehicleID(playerid), tsurf = GetPlayerSurfingVehicleID(hitid);
            if(surf == INVALID_VEHICLE_ID && tsurf == INVALID_VEHICLE_ID && !IsPlayerInAnyVehicle(hitid))
            {
          			new Float:targetpkl = NetStats_PacketLossPercent(hitid), Float:playerpkl = NetStats_PacketLossPercent(playerid);
                	if(targetpkl < 0.8 && playerpkl < 0.8)
                	{
                        	new Float:fOriginX, Float:fOriginY, Float:fOriginZ, Float:fHitPosX, Float:fHitPosY, Float:fHitPosZ;
                            GetPlayerLastShotVectors(playerid, fOriginX, fOriginY, fOriginZ, fHitPosX, fHitPosY, fHitPosZ);
                            CheckForAimbot(playerid, fHitPosX, fHitPosY, fHitPosZ, hitid);
                    }
                    else printf("[abd] skipping '%s' and(or) '%s' due to packetloss being above 0.8", GetName(playerid), GetName(hitid));
            }
            else printf("[abd] skipping '%s' and(or) '%s' due to valid surf-vehicle/in-vehicle", GetName(playerid), GetName(hitid));
	    }
	    else printf("[abd] skipping '%s' and(or) '%s' due to target being afk/player having cooldown", GetName(playerid), GetName(hitid));
    }
    return 1;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		SendClientMessage(playerid,COR_ERRO,"[ERRO]: Comando inexistente.");
	}
	return 1;
}
// =============================== [ CIFRÕES ] ================================= //
forward Tempo1();
public Tempo1()
{
	TempoCifrao = false;
}
forward Tempo2();
public Tempo2()
{
	TempoCifrao2 = false;
}
forward Tempo3();
public Tempo3()
{
	TempoCifrao3 = false;
}
forward Tempo4();
public Tempo4()
{
	TempoCifrao4 = false;
}
forward Tempo5();
public Tempo5()
{
	TempoCifrao5 = false;
}
forward Tempo6();
public Tempo6()
{
	TempoCifrao6 = false;
}
forward Tempo7();
public Tempo7()
{
	TempoCifrao7 = false;
}
forward Tempo8();
public Tempo8()
{
	TempoCifrao8 = false;
}
forward Tempo9();
public Tempo9()
{
	TempoCifrao9 = false;
}
forward Tempo10();
public Tempo10()
{
	TempoCifrao10 = false;
}
forward Tempo11();
public Tempo11()
{
	TempoCifrao11 = false;
}
forward Tempo12();
public Tempo12()
{
	TempoCifrao12 = false;
}
stock IsPlayerInWater(playerid) {
    new anim = GetPlayerAnimationIndex(playerid);
    if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
    return 0;
}

stock MiraLaser(playerid) {
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
	(anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
    return 0;
}
stock SomCarro(playerid, url[])
{
		new strfo[140];
   		GetPlayerPos(playerid,X,Y,Z);
     	if(strlen(url) <= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Digite a URL da música");
       	for(new i = 0 ;i < MAX_PLAYERS; i++)
       	{
	  		if(GetDistanceBetweenPlayers(playerid, i) <= 70)
			{
			    StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i, url,X,Y,Z,70.0,1);
		        format(strfo, sizeof(strfo), "[ ! ] - {ffffff}%s {C798FA}colocou uma música no carro de som.", Nome(playerid));
		    	SCM(i, COR_ROXO, strfo);
		    }
		}
    	return 1;
}
stock BLigarMP3(playerid, url[])
{
		new strfo[140];
   		GetPlayerPos(playerid,X,Y,Z);
     	if(strlen(url) <= 1) return SCM(playerid, COR_ERRO, "[FALHA]: Digite a URL da música");
       	for(new i=0; i < MAX_PLAYERS; i++)
       	{
  			if(GetDistanceBetweenPlayers(playerid, i) <= 200)
			{
				StopAudioStreamForPlayer(i);
			 	PlayAudioStreamForPlayer(i, url,X,Y,Z,200.0,1);
		        format(strfo, sizeof(strfo), "[ ! ] - {ffffff}%s {C798FA}colocou uma música.", Nome(playerid));
				SCM(i, COR_ROXO, strfo);
		    }
		}
    	return 1;
}
public Taxi()
{
	for(new i=0; i< MAX_PLAYERS; i++)
	{
		if(Taximetro[i][0] == 1)
		{
			if(GetPlayerMoney(i) > PrecoCorrida[i] + 20)
			{
				new string[256];
				PrecoCorrida[i] = PrecoCorrida[i] + 20;
				format(string, sizeof(string), "[TAXÍMETRO]: O taxímetro esta cobrando: R$%d de sua corrida.", PrecoCorrida[i]);
				SCM(i, COR_MTX, string);
				SCM(Taximetro[i][1], COR_MTX, string);
			}
			if(GetPlayerMoney(i) < PrecoCorrida[i] + 6)
			{
				SCM(i, COR_ERRO, "[TAXIMETRO]: Você não tem mais dinheiro para o moto taxi,e foi expulso do veiculo.");
				SCM(Taximetro[i][1], COR_ERRO, "[FALHA]: Seu passageiro ficou sem dinheiro e por isso foi expulso do moto taxi.");
				GivePlayerMoney(i, 0 - PrecoCorrida[i]);
				GivePlayerMoney(Taximetro[i][1], PrecoCorrida[i]);
				RemovePlayerFromVehicle(i);
				PrecoCorrida[i] = 0;
				Taximetro[i][1] = 0;
			}
		}
	}
}
stock PrivadosMT(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 461: result = model;
		default: result = 0;
	}
	return result;
}
forward ProcurarUsuario(playerid);
public ProcurarUsuario(playerid)
{
    // Declaramos as variáveis para obter os resultados da consulta realizado anteriormente na OnPlayerConnect
    new linhas, colunas;

    // Obtemos o número de linhas e colunas resultantes da consulta
    cache_get_data(linhas, colunas, conectDB);

    // Caso não haja nenhuma linha, o jogador não está registrado, logo, vamos exibir o dialog de registro.
    if(!linhas)
    {
        new string1[250],string[250];
		format(string, -1, "{FFFFFF}Olá, bem vindo a {FF0000}GTA Facções\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}INFORMAÇÕES DA SUA CONTA ABAIXO:\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Nick: {FF0000}%s\n", Nome(playerid));
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Status: {FF0000}Não registrada\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Escolha sua senha:\n");
		strcat(string1,string);
        ShowPlayerDialog(playerid, DIALOG_REGISTRO, DIALOG_STYLE_PASSWORD, "{FF0000}¤ {FFFFFF}Registro 1/3", string1, "Avançar", "");
    }
    else
    {
        new string1[140],string[140];
		format(string, sizeof(string), "{FF0000}ATENÇÃO: {FFFFFF}O nick: {FF0000}%s {FFFFFF}já está em uso,\n", Nome(playerid));
		strcat(string1,string);
		format(string, sizeof(string), "{FFFFFF}mude o nick no SA-MP e logue novamente.\n", Nome(playerid));
		strcat(string1,string);
		ShowPlayerDialog(playerid, DIALOG_NICK_EM_USO, DIALOG_STYLE_MSGBOX, "{FF0000}¤ {FFFFFF}Registro - Nick indisponível", string1, "Voltar", "");
    }
    return 1;
}
forward ProcurarUsuario2(playerid);
public ProcurarUsuario2(playerid)
{
    new linhas, colunas;
    cache_get_data(linhas, colunas, conectDB);
    if(!linhas)
    {
        new string1[250],string[250];
		format(string, sizeof(string), "{FF0000}ATENÇÃO: {FFFFFF}O nick: {FF0000}%s {FFFFFF}não está registrado,\n", Nome(playerid));
		strcat(string1,string);
		format(string, sizeof(string), "{FFFFFF}registre-se e logue novamente.\n", Nome(playerid));
		strcat(string1,string);
		ShowPlayerDialog(playerid, DIALOG_NICK_EM_USO, DIALOG_STYLE_MSGBOX, "{FF0000}¤ {FFFFFF}Registro - Nick não registrado", string1, "Voltar", "");
    }
    else
    {
		new string1[215],string[215];
		format(string, -1, "{FFFFFF}Olá, bem vindo a {FFD700}GTA Facções\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}INFORMAÇÕES DA SUA CONTA ABAIXO:\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Nick: {7CFC00}%s\n", Nome(playerid));
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Status: {7CFC00}Registrada\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Digite sua senha:\n");
		strcat(string1,string);
	    ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FF0000}¤ {FFFFFF}Login", string1, "Jogar", "Cancelar");
	}
    return 1;
}

forward FazerLogin(playerid);
public FazerLogin(playerid)
{
    new linhas, colunas;
    cache_get_data(linhas, colunas, conectDB);
    if(!linhas)
    {
        if(tentativaDeLogin[playerid] == 2)
        {
            SCM(playerid, COR_ERRO, "[ KICKADO ] Você errou a senha 3 vezes e foi kickado!");
            Kick(playerid);
		}
        SCM(playerid, COR_ERRO, "[FALHA]: Senha incorreta!");
        tentativaDeLogin[playerid]++;
        new string1[250],string[250];
		format(string, -1, "{FFFFFF}Olá, bem vindo a {FFD700}GTA FACÇÕES\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}INFORMAÇÕES DA SUA CONTA ABAIXO:\n\n");
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Nick: {7CFC00}%s\n", Nome(playerid));
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Status: {7CFC00}Registrada\n\n");
		strcat(string1,string);
		format(string, -1, "{FF0000}* Senha incorreta, tentativa: %d/3.\n\n", tentativaDeLogin[playerid]);
		strcat(string1,string);
		format(string, -1, "{FFFFFF}Digite sua senha:\n");
		strcat(string1,string);
        ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FF0000}¤ {FFFFFF}Login", string1, "Jogar", "Cancelar");
    }
    else // Resultados encontrados, senha correta!
    {
        if(Player[playerid][Iniciante]==1)
        {
            Regras1(playerid);
        	return Regras1(playerid);
		}
		else
		{
		    new query[256];
  			mysql_format(conectDB, query, sizeof(query), "SELECT * FROM `pinfo` WHERE `Nick` = '%s' LIMIT 1", Nome(playerid));
            mysql_tquery(conectDB, query, "IniciarConta", "i", playerid);
		}
	}
    return 1;
}
public FecharPortaoPCRJ(playerid)
{
	MoveDynamicObject(portaoPCRJ,2237.6,2453.08,12.45,10);
}

public FecharPortaoPCRJ2(playerid)
{
	MoveDynamicObject(portaoPCRJ2,2334.43,2443.65,7.7906,10);
}
public @FecharUFC()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
 		if(TaUFC[i] == 1)
        {
			SetPlayerPos(i,1099.5134,1601.2949,12.5469);
			SetPlayerInterior(i,0);
			Player[i][Lutador]=0;
			TaUFC[i]=0;
		}
	}
}
CMD:hierarquia(playerid)
{
	if(Logado{playerid} == false) return SCM(playerid, COR_ERRO, "[FALHA]: Você não está logado!");
	if(Player[playerid][Faccoes] <= 12)
	{
		ShowPlayerDialog(playerid, DIALOG_HIERARQUIA, DIALOG_STYLE_LIST, "{FFFF00}¤ {FFFFFF}Hierarquia", "{ffffff}Dono da Favela\nFrentes\nGerentes\nVapores\nFogueteiros", "Escolher", "Fechar");
	}
	else return SCM(playerid, COR_ERRO,"[FALHA]: Você não faz parte de uma facção!");
	return 1;
}
DonoFav1(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '1'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav2(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '2'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav3(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '3'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav4(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '4'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav5(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '5'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav6(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '6'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav7(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '7'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav8(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '8'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav9(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '9'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav10(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '10'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav11(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '10'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
DonoFav12(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `dono` = '1' AND `faccoes` = '12'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Dono da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav1(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '1'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav2(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '2'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav3(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '3'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav4(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '4'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav5(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '5'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav6(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '6'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav7(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '7'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav8(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '8'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav9(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '9'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav10(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '10'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav11(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '11'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FrentesFav12(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` >= '4' AND `faccoes` = '12'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Frentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav1(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '1'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav2(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '2'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav3(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '3'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav4(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '4'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav5(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '5'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav6(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '6'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav7(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '7'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav8(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '8'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav9(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '9'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav10(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '10'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav11(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '11'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
GerentesFav12(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '3' AND `faccoes` = '12'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Gerentes da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav1(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '1'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav2(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '2'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav3(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '3'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav4(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '4'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav5(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '5'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav6(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '6'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav7(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '7'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav8(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '8'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
VaporesFav9(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '2' AND `faccoes` = '9'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Vapores da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav1(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '1'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav2(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '2'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav3(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '3'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav4(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '4'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav5(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '5'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav6(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '6'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav7(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '7'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav8(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '8'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav9(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '9'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav10(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '10'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav11(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '11'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
FogueteirosFav12(playerid)
{
    new str[250], Cache:en;
    mysql_format(conectDB, str, sizeof(str), "SELECT * FROM `pinfo` WHERE `cargo` = '1' AND `faccoes` = '12'");
    en = mysql_query(conectDB, str, true);
    if(cache_num_rows(conectDB) > 0)
	{
        new Dialog[1500],Nickz[24];
        for(new i; i < cache_num_rows(conectDB); i++)
		{
            cache_get_field_content(i, "Nick", Nickz, conectDB, 24);
            format(Dialog, sizeof(Dialog), "%s%s \r\n", Dialog,Nickz);
        }
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, "{FF0000}# {FFFFFF}Fogueteiros da Favela", Dialog, "Sair", #);
    }
    else SCM(playerid,COR_ERRO,"[FALHA]: Hierarquia Vazia.");
    cache_delete(en, conectDB);
    return 1;
}
stock RemovePlayerCocaina(playerid, quantidade)
{
    Player[playerid][Cocaina] -= quantidade;
    return 1;
}
stock RemovePlayerMaconha(playerid, quantidade)
{
    Player[playerid][Maconha] -= quantidade;
    return 1;
}
stock GivePlayerCocaina(playerid, quantidade)
{
    Player[playerid][Cocaina] += quantidade;
    return 1;
}
stock GivePlayerMaconha(playerid, quantidade)
{
    Player[playerid][Maconha] += quantidade;
    return 1;
}
//------------------------------ STOCKs and TIMERs ----------------------------------
stock CheckForAimbot(playerid, Float:fX, Float:fY, Float:fZ, attacked = INVALID_PLAYER_ID)
{
	if(attacked != INVALID_PLAYER_ID)
    {
    	if(!IsPlayerInRangeOfPoint(attacked, 3.0, fX, fY, fZ))
        {
            TimesDetected[playerid]++;
            printf("[AVISO]: %s(IP: %s) suspeita de aimbot %d/10 avisos.", GetName(playerid), PlayerIP(playerid), TimesDetected[playerid]);
            new string[110];
            if(TimesDetected[playerid] >= 3)
            {
                format(string, sizeof(string), "AVISO: %s(%d) Tem possibilidade de está com aimbot (%d Avisos)", GetName(playerid), playerid, TimesDetected[playerid]);
                MensagemAdmin(string), string = "\0";
                DetectedForAimbot{ playerid } = true;
     		}
            string = "\0";
        }
    }
    else printf("[abd] error! 'attacked'(%d) was an invalid id!", attacked);
}
stock GetName(playerid)
{
        new pnameid[24];
        GetPlayerName(playerid,pnameid,sizeof(pnameid));
        return pnameid;
}
stock PlayerIP(playerid)
{
        new str[16];
        GetPlayerIp(playerid, str, sizeof(str));
        return str;
}
PUB:ResetCoolDown(playerid)
{
    CoolDown{ playerid } = false;
    SetTimerEx("ToggleCoolDownTimer", 3500, false, "i", playerid);
    return 1;
}
PUB:ToggleCoolDownTimer(playerid)
{
	ToggleCoolDown[playerid] = 1;
    return 1;
}

stock ResetStats(playerid)
{
    CoolDown{ playerid } = false, DetectedForAimbot{ playerid } = false, IsAFK{ playerid } = false;
    ToggleCoolDown[playerid] = 1, TimesDetected[playerid] = 0;
}
stock Text3D:Attach3DTextLabelToActor(actorid, text[], color, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:distance = 10.0, worldid = 0, testlos = 0)
{
	new Text3D:textid = Text3D:INVALID_3DTEXT_ID;

	if(IsValidActor(actorid))
	{
	    new
			Float:x,
			Float:y,
			Float:z;

		GetActorPos(actorid, x, y, z);

		textid = Create3DTextLabel(text, color, x + fOffsetX, y + fOffsetY, (z + 0.8) + fOffsetZ, distance, worldid, testlos);

		if(textid != Text3D:INVALID_3DTEXT_ID)
		{
			s_3DTextActorID[_:textid] = actorid;
		}
	}
	return textid;
}
LoadConfig()
{
    format(Config[M4], 36, "%s", DOF2_GetString(CONFIG, "M4"));
    format(Config[M42], 36, "%s", DOF2_GetString(CONFIG, "M42"));
    format(Config[M43], 36, "%s", DOF2_GetString(CONFIG, "M43"));
    format(Config[M44], 36, "%s", DOF2_GetString(CONFIG, "M44"));
    format(Config[M45], 36, "%s", DOF2_GetString(CONFIG, "M45"));
    format(Config[M46], 36, "%s", DOF2_GetString(CONFIG, "M46"));
    format(Config[M47], 36, "%s", DOF2_GetString(CONFIG, "M47"));
    format(Config[M48], 36, "%s", DOF2_GetString(CONFIG, "M48"));
    format(Config[M49], 36, "%s", DOF2_GetString(CONFIG, "M49"));
    format(Config[M49], 36, "%s", DOF2_GetString(CONFIG, "M50"));
    format(Config[M49], 36, "%s", DOF2_GetString(CONFIG, "M51"));
    format(Config[M49], 36, "%s", DOF2_GetString(CONFIG, "M52"));
}
stock SetPlayerWeaponAmmo(playerid,weaponid,ammo)
{
	GivePlayerWeapon(playerid,weaponid,ammo);
	SetPlayerAmmo(playerid, weaponid, ammo);
}
stock OnWeaponDropInit()
{
        for(new i=0; i<MAX_PLAYERS; i++)
        {
                for(new a=0; a<14; a++)
                {
                    WeaponDrop[i][a] = -1;
                    WeaponData[i][a][0] = -1;
                    WeaponData[i][a][1] = -1;
                }
                WeaponTimer[i] = -1;
        }
        return 1;
}

stock OnWeaponDropPickup(playerid, pickupid)
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        for(new a=0; a<13; a++)
        {
            if(WeaponDrop[i][a] == pickupid)
            {
                WeaponDrop[i][a] = -1;
                DestroyPickup(pickupid);
                GivePlayerWeapon(playerid, WeaponData[i][a][0], WeaponData[i][a][1]);
                WeaponData[i][a][0] = -1;
                WeaponData[i][a][1] = -1;
            }
        }
        if(WeaponDrop[i][13] == pickupid)
        {
            WeaponDrop[i][13] = -1;
            DestroyPickup(pickupid);
         	GivePlayerMoney(playerid, WeaponData[i][13][0]);
            WeaponData[i][13][0] = -1;
            WeaponData[i][13][1] = -1;
        }
    }
    return 1;
}

stock OnWeaponDrop(playerid)
{
    	RemovePickups(playerid);
        new Float:x, Float:y, Float:z, dropped;
        GetPlayerPos(playerid,x,y,z);
        for(new i=0; i<13; i++)
        {
            new weapon, ammo;
            GetPlayerWeaponData(playerid, i, weapon, ammo);
            if((ammo > 0 || weapon == 1) && weapon != 0)
            {
                        new model = GetModel(weapon);
                        if(model != -1)
                        {
	                        WeaponData[playerid][i][0] = weapon;
	                        WeaponData[playerid][i][1] = ammo;
	                        dropped++;
                        }
            }
        }
        if(BagMoney != 0)
        {
 		 	if(BagMoney == -1 && GetPlayerMoney(playerid) > 0)
            {
                    WeaponData[playerid][13][0] = GetPlayerMoney(playerid);
                    if(BagMode) GivePlayerMoney(playerid, -WeaponData[playerid][13][0]);
                    WeaponDrop[playerid][13] = CreatePickup(1550, 1, x, y, z);
                    if(dropped <= 0) dropped=1;
            }
            if(BagMoney > 0)
            {
                    WeaponData[playerid][13][0] = BagMoney;
                    if(BagMode) GivePlayerMoney(playerid, -WeaponData[playerid][13][0]);
                    WeaponDrop[playerid][13] = CreatePickup(1550, 1, x, y, z);
                    if(dropped <= 0) dropped=1;
            }
        }
        if(dropped > 0)
        {
            	new radius;
            	if(dropped < 3) radius = 1;
                if(dropped < 6) radius = 2;             /*If you want another radius, change it here.*/
                if(dropped < 9) radius = 3;
                if(dropped > 8) radius = 4;
                new Float:degree, Float:tmp;
                degree = 360.0 / (float(dropped));
                tmp = degree;
                if(WeaponTimer[playerid] != -1) KillTimer(WeaponTimer[playerid]);
                WeaponTimer[playerid] = SetTimerEx("RemovePickups", WEAPON_RESPAWN_TIME*1000, 0, "d", playerid);
            	for(new i=0; i<13; i++)
                {
                    if((WeaponData[playerid][i][1] > 0 || WeaponData[playerid][i][0] == 1) && WeaponData[playerid][i][0] > 0)
                    {
                                new model = GetModel(WeaponData[playerid][i][0]);
                                if(model != -1)
                                {
                                    	WeaponDrop[playerid][i] = CreatePickup(model, 1, x+(floatsin(degree, degrees)*radius), y+(floatcos(degree, degrees)*radius), z);
                                        degree = degree + tmp;
                                }
                    }
                }
        }
        return 1;
}

stock GetModel(weaponid)
{
        for(new i=0; i<sizeof(ForbiddenWeapons); i++)
        {
                if(weaponid == ForbiddenWeapons[i])
                {
                        return -1;
                }
        }
        switch(weaponid)
        {
            case 1: return 331;
            case 2: return 333;
            case 3: return 334;
            case 4: return 335;
            case 5: return 336;
            case 6: return 337;
            case 7: return 338;
            case 8: return 339;
            case 9: return 341;
            case 10: return 321;
            case 11: return 322;
            case 12: return 323;
            case 13: return 324;
            case 14: return 325;
            case 15: return 326;
            case 16: return 342;
            case 17: return 343;
            case 18: return 344;
            case 22: return 346;
            case 23: return 347;
            case 24: return 348;
            case 25: return 349;
            case 26: return 350;
            case 27: return 351;
            case 28: return 352;
            case 29: return 353;
            case 30: return 355;
            case 31: return 356;
            case 32: return 372;
            case 33: return 357;
            case 34: return 358;
            case 35: return 359;
            case 36: return 360;
            case 37: return 361;
            case 38: return 362;
            case 39: return 363;
            case 40: return 364;
            case 41: return 365;
            case 42: return 366;
            case 43: return 367;
            case 44: return 368;
            case 45: return 369;
            case 46: return 371;
            default: return -1;
        }
        return -1;
}
forward RemovePickups(playerid);
public RemovePickups(playerid)
{
        if(WeaponTimer[playerid] != -1) KillTimer(WeaponTimer[playerid]);
        WeaponTimer[playerid] = -1;
        for(new a=0; a<14; a++)
        {
            if(WeaponDrop[playerid][a] != -1)
            {
                DestroyPickup(WeaponDrop[playerid][a]);
                WeaponDrop[playerid][a] = -1;
                WeaponData[playerid][a][0] = -1;
                WeaponData[playerid][a][1] = -1;
            }
        }
        return 1;
}
stock SetVehicleEngineState(vid, setstate)
{
     new engine,lights,alarm,doors,bonnet,boot,objective;
     GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
     if(setstate) SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
     else SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
}
// ========================== [ ANT FAKE KILL ] ================================ //
forward antifakekill2(playerid);
public antifakekill2(playerid)
{
    antifakekill[playerid] --;
    if(antifakekill[playerid] > 5)
    {
		new string[100];
		format(string, sizeof(string),"AdmCMD: %s foi kickado do servidor pelo BOT | Motivo: Suspeita de Fake Kill", Nome(playerid));
		SendClientMessageToAll(COR_NEGATIVO, string);
        Kick(playerid);
	}
    return 1;
}
// ==================== [ BAN ] ============================== //
stock BanExtend(playerid, id, reason[], days)
{
    // -- BanInfo --
    new bannedby[24],bantime, banreason[60];
	// -------------
	new ip[24];
    GetPlayerIp(id, ip, sizeof ip);
	bantime = gettime()+((60*60*24)*days);
	format(bannedby, 24, Nome(playerid));
	format(banreason, 60, reason);
	new Query[500];
	format(Query, sizeof(Query), "INSERT INTO `banlist`(Name, banreason, bantime, bannedby, data, days, IP) VALUES('%s', '%s', %d, '%s', '%s', %d, '%s')", Nome(id), banreason, bantime, bannedby, ReturnDate(), days, ip);
    mysql_tquery(conectDB, Query);
	return KickEx(id);
}
forward OnPlayerBanned(playerid);
public OnPlayerBanned(playerid)
{
    new rows, fields, dialog[512];
    // -- BanInfo --
    new data[30],reason[60],bannedby[24],bantime;
	// -------------
	cache_get_data(rows, fields, conectDB);
	if(rows)
	{
		cache_get_field_content(0, "banreason", reason);
		cache_get_field_content(0, "bannedby", bannedby);
		cache_get_field_content(0, "data", data);
		new ip[24];
		GetPlayerIp(playerid, ip, sizeof ip);
        bantime = cache_get_field_content_int(0, "bantime");
		if(bantime > gettime())
		{
	        format(dialog, sizeof(dialog),
		    "{FF0000}\tVocê está banido, abaixo as informações.\n\n\
		    {ffffff}Nick: {FF0000}%s\n\
		    {ffffff}IP: {FF0000}%s\n\
		    {ffffff}Banido pelo Admin: {FF0000}%s\n\
			{ffffff}Motivo restante: {FF0000}%s\n\
			{ffffff}Tempo: {FF0000}%s\n\
			{ffffff}Ocorrido em {FF0000}%s\n\n\
			{ffffff}Se você acha que foi banido injustamente,\n\
			crie uma revisão no fórum: www.equipegf.com/forum",
			Nome(playerid), ip, bannedby, reason, Convert3(bantime), data);
		    ShowPlayerDialog(playerid, DIALOG_MESSAGE, DIALOG_STYLE_MSGBOX, "{FF0000}# Banido", dialog, "Fechar", "");
	        Kick(playerid);
		}
		else
		{
		    new Query[256];
			format(Query, sizeof(Query),"DELETE FROM `banlist` WHERE(`Name`='%s' OR `IP`='%s')", Nome(playerid), ip);
            mysql_tquery(conectDB, Query);
		    new Str1[999];
		    format(Str1, sizeof(Str1),"-OpenServ- O banimento de %s chegou ao fim.", Nome(playerid));
		    MensagemAdmin(Str1);
		}
	}
	return true;
}
stock ReturnDate()
{
	static date[36];
	getdate(date[2], date[1], date[0]);
	gettime(date[3], date[4], date[5]);
	format(date, sizeof(date), "%02d/%02d/%d às %02d:%02d", date[0], date[1], date[2], date[3], date[4]);
	return date;
}
stock Convert3(n)
{
	static t[5];
	t[4] = n-gettime();

	t[0] = t[4] / 3600; // Hour
	t[1] = ((t[4] / 60) - (t[0] * 60)); // Minutes
	t[2] = (t[4] - ((t[0] * 3600) + (t[1] * 60))); // Seconds
	t[3] = (t[0] / 24); // Days
	new String[500];
	if(t[3] > 0)
	t[0] = t[0] % 24,
	format(String, sizeof(String), "%ddias, %02dh %02dm e %02ds", t[3], t[0], t[1], t[2]);
	else if(t[0] > 0)
	format(String, sizeof(String), "%02dh %02dm e %02ds", t[0], t[1], t[2]);
	else
	format(String, sizeof(String), "%02dm e %02ds", t[1], t[2]);
	return String;
}
stock KickEx(playerid)
{
	if(Player[playerid][Kicked]) return 0;
	Player[playerid][Kicked] = 1;
	SetTimerEx("KickTimer", 200, false, "d", playerid);
	return 1;
}
forward KickTimer(playerid);
public KickTimer(playerid)
{
	if (Player[playerid][Kicked])
	return Kick(playerid);
	return 0;
}
// ========================= [ MOTO - TÁXI ] =================================== //
forward ShowPlayerArrowPointingTo(playerid, giveplayerid);
public ShowPlayerArrowPointingTo(playerid, giveplayerid)
{
	new Float:Px, Float:Py, Float:Pz;
	GetPlayerPos(giveplayerid, Px, Py, Pz);
	SetPlayerCheckpoint(playerid, Px, Py, Pz, 6);
	Player[playerid][TimerArrow] = SetTimerEx("UpdatePlayerArrow", TIMER_UPDATEARROW, false, "iff", playerid, giveplayerid);
}
forward UpdatePlayerArrow(playerid, giveplayerid);
public UpdatePlayerArrow(playerid, giveplayerid)
{
	DisablePlayerCheckpoint(playerid);
	ShowPlayerArrowPointingTo(playerid, giveplayerid);
}
// ==================== [ ACESSORIOS ADMIN ] =================================== //
stock ShowBrinquedos(playerid)
{
    new string[1700];
    strcat(string, "{FF0000}-{FFFFFF} Chapéu de Bombeiro {0088FF}Slot 1 \n"); // 0
    strcat(string, "{FF0000}-{FFFFFF} Chapéu de Policial {0088FF}Slot 1 \n"); //   1
    strcat(string, "{FF0000}-{FFFFFF} Chapéu Michael Jackson {0088FF}Slot 1 \n"); // 2
    strcat(string, "{FF0000}-{FFFFFF} Chapéu Operário {0088FF}Slot 1 \n"); // 3
    strcat(string, "{FF0000}-{FFFFFF} Chapéu de Funkeiro {0088FF}Slot 1 \n"); // 4
    strcat(string, "{FF0000}-{FFFFFF} Chapéu de Veio {0088FF}Slot 1 \n"); // 5
    strcat(string, "{FF0000}-{FFFFFF} Chapéu do Harry Potter {0088FF}Slot 1 \n"); // 6
    strcat(string, "{FF0000}-{FFFFFF} Bolsa de sequestrador {0088FF}Slot 1 \n");// 7
    strcat(string, "{FF0000}-{FFFFFF} Fones de ouvido {0088FF}Slot 1 \n");// 8
    strcat(string, "{FF0000}-{FFFFFF} Loro José Gigante {0088FF}Slot 1 \n");// 9
    strcat(string, "{FF0000}-{FFFFFF} Loro José menor (Ombro) {0088FF}Slot 2 \n");// 10
    strcat(string, "{FF0000}-{FFFFFF} Tapa olho de pirata {0088FF}Slot 2 \n");// 11
    strcat(string, "{FF0000}-{FFFFFF} Dildo {0088FF}Slot 2\n");// 12
    strcat(string, "{FF0000}-{FFFFFF} Cabeça de galo {0088FF}Slot 1 \n");// 13
    strcat(string, "{FF0000}-{FFFFFF} Cabeça de galo gigante Slot 1 \n");// 14
    strcat(string, "{FF0000}-{FFFFFF} Cervo {0088FF}Slot 1 \n");// 15
    strcat(string, "{FF0000}-{FFFFFF} Chifre de boy 1 {0088FF}Slot 1 \n");// 16
    strcat(string, "{FF0000}-{FFFFFF} Chifre de boy 2 {0088FF}Slot 1 \n");// 17
    strcat(string, "{FF0000}-{FFFFFF} Fanstasia de obóbora {0088FF}Slot 1 \n");// 18
    strcat(string, "{FF0000}-{FFFFFF} Cabeção do CJ {0088FF}Slot 1 \n"); // 19
    strcat(string, "{FF0000}-{FFFFFF} Golfinho {0088FF}Slot 1 \n"); // 20
    strcat(string, "{FF0000}-{FFFFFF} Tubarão {0088FF}Slot 1 \n"); // 21
    strcat(string, "{FF0000}-{FFFFFF} Fantasia de tartaruga {0088FF}Slot 1 \n"); // 22
    strcat(string, "{FF0000}-{FFFFFF} Vaca {0088FF}Slot 1 \n"); // 23
    strcat(string, "{FF0000}-{FFFFFF} Colete no corpo {0088FF}Slot 2 \n");// 24
    strcat(string, "{FF0000}-{FFFFFF} Coração no peito {0088FF}Slot 2 \n");// 25
    strcat(string, "{FF0000}-{FFFFFF} C4 nas costas {0088FF}Slot 2 \n");// 26
    strcat(string, "{FF0000}-{FFFFFF} M4 nas costas  {0088FF}Slot 2 \n");// 27
    strcat(string, "{FF0000}-{FFFFFF} Bazzuka nas costas  {0088FF}Slot 2 \n");// 28
    strcat(string, "{FF0000}-{FFFFFF} Toca do Papai Noel  {0088FF}Slot 1 \n");// 29
    strcat(string, "{FF0000}-{FFFFFF} Dado na cabeça  {0088FF}Slot 1 \n");// 30
    strcat(string, "{FF0000}-{FFFFFF} C4 no peito  {0088FF}Slot 2 \n");// 31
    ShowPlayerDialog(playerid, DIALOG_ACESSORIOS, DIALOG_STYLE_LIST, "Escolha o acessório desejado:", string, "APLICAR", "SAIR");
    return 1;
 }
