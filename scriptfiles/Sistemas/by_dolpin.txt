/*  Início
---------------------------------------------------------------------Change Logs


Criado por: Dolpin ou [P]edro (AMBOS SÃO AS MESMAS PESSOAS COM NICKS DIFERENTES).



**Maiores Mudanças

    -Alterado o sistema de salvamento de DOF2 para MySQL --------------------------------------------v.0.5

**Grandes Mudanças

	-Nome, Mapa e Mode "Definidos" ------------------------------------------------------------------v.0.1
	-Alterado o sistema de salvamento de y_ini para DOF2---------------------------------------------v.0.2
    -Alterado sistema de processador de comando - ZCMD para YCMD-------------------------------------v.0.3
    -Mudado o sistema de escolher torcidas *Antigo(Torcidas Organizadas) **Novo(Torcidas por times)--v.0.4
    
	
*Sistemas

-Sistema de Registro/Login 100%
-Sistema de Salvamento Completo 100%
-Sistema de Escolher Torcida - 100%
-Sistema Vip - 100%
-Sistema Calar- 100%
-Sistema de Carro por Nome e Número - 100%
-Sistema de Sorte - 100%
-Sistema de Tuning - 100%
-Sistema Prisão - 100%
-Mercadinho Adicionado - 100%
-Sistema de Drogas - 100%
-Sistema de Sinalizador - 100% (Falta colocar como vender)
-Sistema de Mochila - 100%
-Sistema de Horas Textdraw - 100%
-Sistema de Pagamento em 1hora e 1hora - 90% (Adicionar futuras coisas).
-Sistema de Empregos(falta adicionar mais)
-Sistema de Golds (menu); - 100% (Falta adicionar mais ítens.)


-bugs

Apenas sistemas incompletos como o /reportar e /lerrpt estão incompleto.

*/
//Configurações~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define NomeServidor "Torcidas Organizadas do Brasil"
#define GameServidor "T.O.B v.0.5"
#define MapaServidor "Brasil"

//MySQL

#define Host ""
#define Database ""
#define Usuario ""
#define SenhaDB ""
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//Includes~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#include <a_samp>
#include <sscanf2>
#include <YSI\y_commands>
#include <streamer>
#include <a_mysql>
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//Definições~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define MAX_TORCIDAS 43
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Dialogos~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define DialogoRegistro           1
#define DialogoLogar              2
#define DialogoKickado            3
#define DialogoTorcida            4
#define DialogoTorcidaSD          5
#define DialogoTorcidaSL          8
#define DialogoTorcidaCO          9
#define DialogoTorcidaNN          10

#define DialogoTorcidaSP          11
#define DialogoTorcidaRJ          12
#define DialogoTorcidaMG          13

#define DialogoTorcidaRS          14
#define DialogoTorcidaSC          15
#define DialogoTorcidaPR          16

#define DialogoTorcidaGO          17
#define DialogoTorcidaBR          18

#define DialogoTorcidaBA          19
#define DialogoTorcidaPE          20
#define DialogoTorcidaCE          21
#define DialogoTorcidaRN          22
#define DialogoTorcidaAL          23
#define DialogoTorcidaPA          24

#define DialogoTorcidaOnline      25
#define DialogoPrivacidade        26
#define DialogoPM                 27
#define DialogoStatus             28
#define DialogoAjuda              29
#define DialogoComandos           30
#define DialogoRegras             31
#define DialogoPresos             32
#define DialogoCalados            33
#define DialogoAdmins             34
#define DialogoComprarDrogas      35
#define DialogoCarros             36
#define DialogoArmas              37
#define DialogoTunar              38
#define DialogoNeon               39
#define DialogoPintar             40
#define DialogoPaintJob           41
#define DialogoRodas              42
#define DialogoNitro              43
#define DialogoMercado            44
#define DialogoMochila            45
#define DialogoComprarCrack       46
#define DialogoComprarCocaina     47
#define DialogoComprarMaconha     48
#define DialogoComprarHeroina     49
#define DialogoMudarLuta          50
#define DialogoVenderCocaina      51
#define DialogoVenderHeroina      52
#define DialogoVenderMaconha      53
#define DialogoVenderCrack        54
#define DialogoEmpregos           55
#define DialogoSugestao           56
#define DialogoBugs               57
#define DialogoGolds              58
#define DialogoVips               59
#define DialogoOpVeiculos         60
#define DialogoTransferirGold     61
#define DialogoTransferirGold2    62
#define DialogoTrocarDinheiroG    63
#define DialogoTrocarScoreG       64
#define DialogoPedirArma          65
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Macros~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define SCM SendClientMessage
#define SCMA SendClientMessageToAll
#define SPD ShowPlayerDialog
#define STM SendTorcidaMessage
#define SGM SendGlobalMessage
#define SRM SendRangeMessage
#define SAM SendAdminMessage
#define DSI DIALOG_STYLE_INPUT
#define DSL DIALOG_STYLE_LIST
#define DSM DIALOG_STYLE_MSGBOX
#define DSP DIALOG_STYLE_PASSWORD
#define IsPlayerPoint IsPlayerInRangeOfPoint
#define MensagemErroCMD "[ERRO]: Você não tem permissão para fazer isso."
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Cores~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define Amarelo 0xFFFF00FF
#define Azul 0x00FFFFFFF
#define Vermelho 0xFF0000FF
#define AzulMarinho 0x0000FFFF
#define Verde 0x00FF00FF
#define Branco 0xFFFFFFFF
#define Preto 0x000000FF
#define CorChatTorcida 0xFFB0B0FF
#define CorErro 0xFF0000FF
#define CorChatGlobal 0x00A30EFF
#define Corsscanf 0xF4FFABFF
#define CorSetado 0xFFF58CFF
#define CorRangeMensagem 0xD2BDFCFF
#define CorPM 0xFFFF00FF
#define CorSet 0xFFFF00FF
#define CorInfo 0xAAB7F2FF
#define CorTOB 0xFFFF00FF
#define CorMsgRandom 0xFF9999FF
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//Natives~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
native WP_Hash(buffer[], len, const str[]);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//Enumeradores~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
enum IJogador
{
	ID, 
    Senha[129],
	Score,
	Dinheiro,
	Gold,
	Matou,
	Mortes, 
	Skin, 
	Logou,
	Torcida,
	Dia, 
	Mes,
	Ano, 
	Hora,
	Minuto,
	Segundo,
	RptLidos, 
	ErrosSenha,
	Admin,
	Vip,
	Gm,
	Orgi,
	Pux,
	Pres, 
	VPres,  
	TmpVip,  
	Btl,  
	Cel,
	BloqTR,  
	BloqPM,  
	BloqVC, 
	BloqVR,
	Calado, 
	Preso,  
	TempoCalado, 
	TempoCongelado,  
    TempoPreso, 
	Turbos[MAX_PLAYERS],
	Cones,
	IDEspiar,
	TipoEspiar,
	Avisos,
	Permissao,
	Contagem,
	Maconha,
	Crack,
	Heroina,
	Cocaina,
	Sinalizador,
	Profissao,
	Salario,
	NomeBanido[100],
	NomeBaniu[100],
	Motivo[100],
	Banido,
	TempoBanido,
	NascerColete,
	NascerArma,
	TempoColete,
	TempoArma,
	IDArma,
}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Variáveis~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new Dados[MAX_PLAYERS][IJogador];

new Texto[400];

new UmVeiculo[MAX_PLAYERS];
new Cone[5][MAX_PLAYERS];
new Acendido[MAX_PLAYERS];
new Fumando[MAX_PLAYERS];
new Blindado[MAX_PLAYERS];
new TimerPrisao[MAX_PLAYERS];
new bool:SorteLiberado[MAX_PLAYERS];

static UltimoRpt;
static TmpContagem;

//MySQL
static Mysql;
static IP[MAX_PLAYERS][16];

//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Textdraws~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new Text:Data;
new Text:Horas;

//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Arrays~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
new NomeVeiculos[][] =
{
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
    "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
    "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
    "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
    "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
    "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
    "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
    "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
    "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
    "Oceanic","Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
    "Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
    "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
    "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
    "Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
    "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
    "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
    "Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
    "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
    "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
    "Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
    "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
    "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
    "Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
    "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
    "Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
    "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
    "Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
    "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
    "Tiller", "Utility Trailer"
};

new GetTorcidaNome[41][31] =
{
	{"BUGADO..."},//0
	{"Torcida do São Paulo"},//1
	{"Torcida do Palmeiras"},//2
	{"Torcida do Santos"},//3
	{"Torcida do Corínthians"},//4
	{"Torcida do Guarani"},//5
	{"Torcida da Ponte Preta"},//6
	{"Torcida da Portuguesa"},//7
	{"Torcida do Cruzeiro"},//8
	{"Torcida do Atlético-MG"},//9
	{"Torcida do América-MG"},//10
	{"Torcida do Flamengo"},//11
	{"Torcida do Vasco"},//12
	{"Torcida do Botafogo"},//13
	{"Torcida do Brasiliense"},//14
	{"Torcida do Gama"},//15
	{"Torcida do Goías"},//16
	{"Torcida do Atlético Goianiense"},//17
	{"Torcida do Internacional"},//18
	{"Torcida do Grêmio"},//19
	{"Torcida do Atlético Paranaense"},//20
	{"Torcida do Coritiba"},//21
	{"Torcida do Paraná"},//22
	{"Torcida do Figueirense"},//23
	{"Torcida da Chapecoense"},//24
	{"Torcida do Críciuma"},//25
	{"Torcida do Avaí"},//26
	{"Torcida do Joinville"},//27
	{"Torcida do Sport Club"},//28
	{"Torcida do Naútico"},//29
	{"Torcida do Santa Cruz"},//30
	{"Torcida do Ceará"},//31
	{"Torcida do Fortaleza"},//32
	{"Torcida da Bahia"},//33
	{"Torcida do Vitória"},//34
	{"Torcida do ABC"},//35
	{"Torcida do América de Natal"},//36
	{"Torcida do CRB"},//37
	{"Torcida do CSA"},//38
	{"Torcida do Remo"},//39
	{"Torcida do Paysandu"}//40
};

new MensagensRandom[][] =
{
	{"[SUGESTÃO]: Use /sorte depois do payday para ganhar uma graninha extra."},
	{"[SUGESTÃO]: No Comando /sorte quanto maior o número for, maior dinheiro ganhará!"},
	{"[SUGESTÃO]: Vá até um banco e abra uma nova conta para você ganhar lucros no payday."},
	{"[SUGESTÃO]: Compre um vip para obter benefícios dentro do jogo."},
	{"[SUGESTÃO]: Dê /sugestao para dar uma sugestão para melhorar o Jogo!"},
	{"[SUGESTÃO]: Dê /bug Para reportar um bug, para concertamos!"}
};

new GetProfissaoNome[2][13] =
{
	{"Desempregado"},//0
	{"Traficante"}//1
};
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


//Stocks~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Nome(playerid)
{
	new NomeJ[MAX_PLAYER_NAME];
	GetPlayerName(playerid, NomeJ, sizeof(NomeJ));
	return NomeJ;
}

main () {}
GetCargoNome(playerid)
{
	new str[50];
	if(Dados[playerid][Admin] != 0)
	{
	    str = "Administrador";
	}
	if(Dados[playerid][Vip] != 0)
	{
	    str = "Vip";
	}
 	if(Dados[playerid][Gm] != 0)
	{
	    str = "GameMaster";
	}
	if(Dados[playerid][Orgi] != 0)
	{
	    str = "Organizador";
	}
	if(Dados[playerid][Pux] != 0)
	{
	    str = "Puxador";
	}
	if(Dados[playerid][Pres] != 0)
	{
	    str = "Presidente";
	}
	if(Dados[playerid][VPres] != 0)
	{
	    str = "Vice-Presidente";
	}
	if(Dados[playerid][Btl] != 0)
	{
	    str = "Batalhão de Operações Especiais";
	}
	if(Dados[playerid][Cel] != 0)
	{
	    str = "Coronel";
	}
	else if(Dados[playerid][Gm] == 0 && Dados[playerid][Admin] == 0 && Dados[playerid][Pux] == 0 && Dados[playerid][Orgi] == 0 && Dados[playerid][Pres] == 0 && Dados[playerid][VPres] == 0 && Dados[playerid][Vip] == 0 && Dados[playerid][Btl] == 0 && Dados[playerid][Cel] == 0)
	{
		str = "Jogador";
	}
	return str;
}

SendGlobalMessage(cor, texto[])
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
     if(IsPlayerConnected(i))
	    {
	        SCM(i, cor, texto);
	    }
	}
	return 1;
}
SendTorcidaMessage(torcidaid, cor, string[])
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(torcidaid == Dados[i][Torcida])
	        {
	            SCM(i, cor, string);
	        }
	    }
	}
	return 1;
}
SendRangeMessage(playerid, string[])
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
     	if(IsPlayerConnected(i))
	    {
	        if(IsPlayerPoint(i, 30.0, x, y, z))
	        {
	            SCM(i, CorRangeMensagem, string);
	        }
	    }
	}
	return 1;
}

SendComandoText(playerid, comando[], params[])
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    if(IsPlayerConnected(i))
	    {
		    if(Dados[i][Gm] >= 1 || Dados[i][Admin] >= 1)
		    {
		        if(Dados[i][BloqVC] == 0)
		        {
			        format(Texto, sizeof(Texto), "%s Usou o comando: %s %s", Nome(playerid), comando, params);
			        SendClientMessage(i, AzulMarinho, Texto);
				}
		    }
	    }
	}
	printf("%s Usou: %s", Nome(playerid), comando);
	return 1;
}

SendAdminMessage(cor, texto[])
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Dados[i][Gm] >= 1 || Dados[i][Admin] >= 1)
	        {
	            if(Dados[i][BloqVR] == 0)
	            {
	                SCM(i, cor, texto);
	            }
	        }
	    }
	}
	return 1;
}

Logando(playerid)
{
	new tempo = gettime();
	LimparChatJogador(playerid, 5);
	Dados[playerid][Logou] += 1;
	SCM(playerid, Amarelo, "*---------------------------------------------------------------------------------------------*");
	format(Texto, sizeof(Texto), "[T.O.B]:{00FFFF} Seu último login foi: %02d/%02d/%d as %02d:%02d:%02d", Dados[playerid][Dia], Dados[playerid][Mes], Dados[playerid][Ano], Dados[playerid][Hora], Dados[playerid][Minuto], Dados[playerid][Segundo]);
	SCM(playerid, AzulMarinho, Texto);
	format(Texto, sizeof(Texto), "[T.O.B]:{00FFFF} Você faz parte da torcida %s", GetTorcidaNome[Dados[playerid][Torcida]]);
	SCM(playerid, AzulMarinho, Texto);
	if(Dados[playerid][Calado] == 1)
	{
	    SCM(playerid, AzulMarinho, "[T.O.B]:{00FFFF} Você está calado, aguarde até ser descalado.");
	}
	if(Dados[playerid][Vip] == 1)
	{
	    new tmres = Dados[playerid][TmpVip] - tempo;
	    new diasvip = tmres / 60 / 60 / 24;
	    new horasvip = tmres / 60 / 60;
	    horasvip = horasvip - (diasvip * 24);
	    format(Texto, sizeof(Texto), "[T.O.B]:{00FFFF} Você ainda é vip. tempo restante: %d Dias e %d Horas", diasvip, horasvip);
	    SCM(playerid, AzulMarinho, Texto);
	}
	if(Dados[playerid][NascerColete] == 1)
	{
	    new tmpcol = Dados[playerid][TempoColete] - tempo;
	    new diascol = tmpcol / 60 / 60 / 24;
	    new horascol = tmpcol / 60 / 60;
	    horascol = horascol - (diascol * 24);
	    format(Texto, sizeof(Texto), "[T.O.B]: {00FFFF}Você possui o ítem 'Nascer com colete'. tempo restante: %d dias e %d horas.", diascol, horascol);
		SCM(playerid, AzulMarinho, Texto);
	}
	if(Dados[playerid][NascerArma] == 1)
	{
	    new tmparm = Dados[playerid][TempoArma] - tempo;
	    new diasarm = tmparm / 60 / 60 / 24;
	    new horasarm = tmparm / 60 / 60;
	    horasarm = horasarm - (diasarm * 24);
	    format(Texto, sizeof(Texto), "[T.O.B]: {00FFFF}Você possui o ítem 'Nascer com arma'. tempo restante: %d dias e %d horas.", diasarm, horasarm);
		SCM(playerid, AzulMarinho, Texto);
	}
	SCM(playerid, Amarelo, "*---------------------------------------------------------------------------------------------*");
	
	return 1;
}

PrenderJogador(playerid, minutos)
{
	Dados[playerid][Preso] = true;
	Dados[playerid][TempoPreso] = minutos * 60000;
	TimerPrisao[playerid] = SetTimerEx("SoltarPrisao", 1000, true, "i", playerid);
	SetPlayerInterior(playerid, 6);
	SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
	return 1;
}

SetPlayerMoney(playerid, quantidade)
{
	ResetPlayerMoney(playerid);
	return GivePlayerMoney(playerid, quantidade);
}
LimparChatJogador(playerid, linhas)
{
	for(new i = 0; i < linhas; i++)
	{
	    SCM(playerid, -1, "");
	}
	return 1;
}
LimparChatGeral(linhas)
{
	for(new b = 0; b < linhas; ++b)
	{
		for(new i = 0; i < GetMaxPlayers(); ++i)
		{
			SCM(i, -1, "");
		}
	}
	return 1;
}
SeNumeros(const Linha[])
{
    for (new i = 0, j = strlen(Linha); i < j; i++)
    {
        if (Linha[i] > '9' || Linha[i] < '0')
        return 0;
    }
    return 1;
}
GetModelVehicle(VeiculoNome[])
{
    for(new i = 0; i < 211; i++)
    {
        if(strfind(NomeVeiculos[i], VeiculoNome, true) != -1)
        return i + 400;
    }
    return 0;
}
CriarVeiculoEx(playerid, ModeloID)
{
    new Float:Pos[4];
    new Text3D:LabelVeiculo;
    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, CorErro, "[ERRO]: Você não pode criar carro dentro de um interior");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid, CorErro, "[ERRO]: Você já tem um carro, portanto saia de seu veículo.");
    else
    {
        GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
        GetPlayerFacingAngle(playerid, Pos[3]);
    }
    DestroyDynamic3DTextLabel(LabelVeiculo);
    if(UmVeiculo[playerid] != 0) DestroyVehicle(UmVeiculo[playerid]);
    UmVeiculo[playerid] = CreateVehicle(ModeloID, Pos[0], Pos[1], Pos[2], Pos[3], -1, -1, 60);
    SetVehicleVirtualWorld(UmVeiculo[playerid], GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicle(playerid, UmVeiculo[playerid], 0);
	format(Texto, sizeof(Texto), "[INFO]: O Jogador %s criou o veículo %s", Nome(playerid), NomeVeiculos[ModeloID]);
	SRM(playerid, Texto);
	format(Texto, sizeof(Texto), "Carro criado pelo: %s", Nome(playerid));
    LabelVeiculo = CreateDynamic3DTextLabel(Texto, 0xFFFF00FF, 1833.7756, -1842.5320, 13.5781, 40.0, INVALID_PLAYER_ID, UmVeiculo[playerid], 0, -1, -1, -1, 100.0);
    Attach3DTextLabelToVehicle(LabelVeiculo, UmVeiculo[playerid], 0.0, 0.0, 0.2);
    return 1;
}

EscreverLog(playerid, lognome[], texto[])
{
	new ArquivoLog[60], File:Log, a, m, d, h, mi, s;
	getdate(a, m, d);
	gettime(h, mi, s);
	format(ArquivoLog, sizeof(ArquivoLog), "Logs/%s.txt", lognome);
	if(fexist(ArquivoLog))
	{
		Log = fopen(ArquivoLog, io_append);
	}
	else Log = fopen(ArquivoLog, io_write);
	format(Texto, sizeof(Texto), "[%02d/%02d/%02d] [%02d:%02d:%02d]: {%s} %s\r\n", d, m, a, h, mi, s, Nome(playerid), texto);
	fwrite(Log, Texto);
	fclose(Log);
	return 1;
}
RandomP(minimo, maximo)
{
    return random(maximo - minimo) + minimo;
}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



//Forwards~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
forward KickEx(playerid);
forward BanExS(playerid);
forward AtualizarLevel(playerid);
forward DescalarJogador(playerid);
forward RCones(playerid);
forward Descongelar(playerid);
forward Contar(playerid);
forward AtualizarHoras(playerid);
forward FicarNormal(playerid);
forward SoltarPrisao(playerid);
forward Pagamento();
forward RandomMensagem();
forward Labels(playerid);
forward OnAccountCheck(playerid);
forward OnAccountLoad(playerid);
forward OnAccountRegister(playerid);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



//Callbacks~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
public KickEx(playerid)
{
	return Kick(playerid);
}
public BanExS(playerid)
{
	return Ban(playerid);
}
public AtualizarLevel(playerid)
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    SetPlayerScore(i, Dados[i][Score]);
	    SetPlayerMoney(i, Dados[i][Dinheiro]);
	}
	return 1;
}
public DescalarJogador(playerid)
{
    if(Dados[playerid][TempoCalado] == 1)
	{
		Dados[playerid][Calado] = false;
		SCM(playerid, CorInfo, "[INFO]: Você foi descalado automáticamente.");
	}
	Dados[playerid][TempoCalado] -= 1000;
	return 1;
}

public RCones(playerid)
{
	DestroyObject(Cone[0][playerid]);
	DestroyObject(Cone[1][playerid]);
	DestroyObject(Cone[2][playerid]);
	DestroyObject(Cone[3][playerid]);
	DestroyObject(Cone[4][playerid]);
	Dados[playerid][Cones] = 0;
	return 1;
}
public Descongelar(playerid)
{
	if(Dados[playerid][TempoCongelado] >= 1)
	{
	    TogglePlayerControllable(playerid, 1);
	    Dados[playerid][TempoCongelado] = 0;
	    SCM(playerid, CorInfo, "[INFO]: Você foi descongelado automáticamente.");
	}
	return 1;
}

public Contar(playerid)
{
	Dados[playerid][Contagem] -= 1000;
	format(Texto, sizeof(Texto), "~y~%d", Dados[playerid][Contagem] / 1000);
	GameTextForAll(Texto, 1000, 4);
	if(Dados[playerid][Contagem] == 0)
	{
	    GameTextForAll("~b~Go", 1000, 5);
	    KillTimer(TmpContagem);
	}
	return 1;
}

public AtualizarHoras(playerid)
{
	new AnoS, MesS, DiaS, HorasS, MinutoS, SegundoS, Mess[3];
	getdate(AnoS, MesS, DiaS);
	gettime(HorasS, MinutoS, SegundoS);
	switch(MesS)
	{
	    case 1: Mess = "01";
        case 2: Mess = "02";
        case 3: Mess = "03";
        case 4: Mess = "04";
        case 5: Mess = "05";
        case 6: Mess = "06";
        case 7: Mess = "07";
        case 8: Mess = "08";
        case 9: Mess = "09";
        case 10: Mess = "10";
        case 11: Mess = "11";
        case 12: Mess = "12";
	}
	format(Texto, sizeof(Texto), "%02d/%s/%d", DiaS, Mess, AnoS);
	TextDrawSetString(Data, Texto);
	format(Texto, sizeof(Texto), "%02d:%02d:%02d", HorasS, MinutoS, SegundoS);
	TextDrawSetString(Horas, Texto);
	SetWorldTime(HorasS);
	return 1;
}

public FicarNormal(playerid)
{
	new Horaz, Minutoz;
	gettime(Horaz, Minutoz);
	if(Fumando[playerid] == 1)
	{
	    Fumando[playerid] = 0;
	    SetPlayerWeather(playerid, 0);
	    SetPlayerTime(playerid, Horaz, Minutoz);
	    SetPlayerDrunkLevel(playerid, 0);
	    SCM(playerid, CorInfo, "[INFO]: Você voltou ao normal, já pode fumar novamente.");
	}
	return 1;
}

public Pagamento()
{
	for(new i = 0, j = GetMaxPlayers(); i < j; ++i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Dados[i][Profissao] > 0)
	        {
		        Dados[i][Dinheiro] += Dados[i][Salario];
		        Dados[i][Score] ++;
		        Dados[i][Gold] += 1;
		        format(Texto, sizeof(Texto), "[PAGAMENTO]: {00FFFF}Sua profissão é: %s e você ganhou o seu salário de: R$ %d", GetProfissaoNome[Dados[i][Profissao]], Dados[i][Salario]);
		        SCM(i, Verde,   "**------------------------------------------------------**");
		        SCM(i, Amarelo, Texto);
		        SCM(i, Amarelo, "[PAGAMENTO]: {00FFFF}Você ganhou um 1 Gold");
		        SCM(i, Amarelo, "[PAGAMENTO]: {00FFFF}Você subiu um 1 level");
		        SCM(i, Verde,   "**------------------------------------------------------**");
			}
			else
			{
			    Dados[i][Dinheiro] += 100;
			    Dados[i][Score] ++;
			    Dados[i][Gold] += 1;
			   	SCM(i, Verde,   "**------------------------------------------------------**");
			   	SCM(i, Amarelo, "[PAGAMENTO]: {00FFFF}Você ganhou um Gold.");
			   	SCM(i, Amarelo, "[PAGAMENTO]: {00FFFF}Você ganhou: R$100");
		        SCM(i, Amarelo, "[PAGAMENTO]: {00FFFF}Você subiu um 1 level");
		        SCM(i, Verde,   "**------------------------------------------------------**");
			}
			SorteLiberado[i] = true;
	    }
	}
	return 1;
}

public SoltarPrisao(playerid)
{
	Dados[playerid][TempoPreso] -= 1000;
	if(Dados[playerid][TempoPreso] == 0)
	{
	    KillTimer(TimerPrisao[playerid]);
	    Dados[playerid][Preso] = false;
	    OnPlayerSpawn(playerid);
	}
	return 1;
}

public RandomMensagem()
{
	SGM(CorMsgRandom, MensagensRandom[random(sizeof(MensagensRandom))]);
	return 1;
}

public Labels(playerid)
{
	new Text3D:label;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(Dados[playerid][Gm] >= 1)
	{
	    label = Create3DTextLabel("Gamemaster", 0x0000FFFF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Admin] >= 1)
	{
	    label = Create3DTextLabel("Administrador", 0xFF0000FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Vip] >= 1)
	{
	    label = Create3DTextLabel("VIP", 0xFFFF00FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Pres] >= 1)
	{
	    label = Create3DTextLabel("Presidente", 0x00FFFFFF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][VPres] >= 1)
	{
	    label = Create3DTextLabel("Vice-Presidente", 0x00FFFFFF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Orgi] >= 1)
	{
	    label = Create3DTextLabel("Organizador", 0x00FF00FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Pux] >= 1)
	{
	    label = Create3DTextLabel("Puxador", 0x00FF00FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Cel] >= 1)
	{
	    label = Create3DTextLabel("Coronel", 0x005980FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else if(Dados[playerid][Btl] >= 1)
	{
	    label = Create3DTextLabel("Batalhão", 0x005980FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	else
	{
	    label = Create3DTextLabel("Jogador", 0xB0B0B0FF, x, y, z, 40.0, 0, 0);
	    Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.7);
	}
	return 1;
}

public OnAccountCheck(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields, Mysql);
	if(rows)
	{
	    cache_get_field_content(0, "Senha", Dados[playerid][Senha], Mysql, 129);
	    Dados[playerid][ID] = cache_get_field_content_int(0, "ID");
		printf("%s", Dados[playerid][Senha]);
		format(Texto, sizeof(Texto), "{FFFFFF}Nick: {FFFF00}%s\n{FFFFFF}Ip: {FFFF00}%s\n{FFFFFF}Status: {00FF00}Registrado\n\n{FFFFFF}Coloque sua senha para se logar!", Nome(playerid), IP[playerid]);
		SPD(playerid, DialogoLogar, DSI, "Logando - TOB", Texto, "Logar", "Cancelar");
	}
	else
	{
		format(Texto, sizeof(Texto), "{FFFFFF}Nick: {FFFF00}%s\n{FFFFFF}Ip: {FFFF00}%s\n{FFFFFF}Status: {FF0000}Não-Registrado\n\n{FFFFFF}Coloque uma senha nova para se registrar!!", Nome(playerid), IP[playerid]);
		SPD(playerid, DialogoRegistro, DSI, "Registrando - TOB", Texto, "Registrar", "Cancelar");
	}
	return 1;
}
public OnAccountLoad(playerid)
{
	Dados[playerid][Score] = cache_get_field_content_int(0, "Score");
	Dados[playerid][Dinheiro] = cache_get_field_content_int(0, "Dinheiro");
	Dados[playerid][Gold] = cache_get_field_content_int(0, "Gold");
	Dados[playerid][Matou] = cache_get_field_content_int(0, "Matou");
	Dados[playerid][Mortes] = cache_get_field_content_int(0, "Mortes");
	Dados[playerid][Skin] = cache_get_field_content_int(0, "Skin");
	Dados[playerid][Logou] = cache_get_field_content_int(0, "Logou");
	Dados[playerid][Torcida] = cache_get_field_content_int(0, "Torcida");
	Dados[playerid][Dia] = cache_get_field_content_int(0, "UltimoDia");
	Dados[playerid][Mes] = cache_get_field_content_int(0, "UltimoMes");
	Dados[playerid][Ano] = cache_get_field_content_int(0, "UltimoAno");
	Dados[playerid][Hora] = cache_get_field_content_int(0, "UltimoHoras");
	Dados[playerid][Minuto] = cache_get_field_content_int(0, "UltimoMinutos");
	Dados[playerid][Segundo] = cache_get_field_content_int(0, "UltimoSegundos");
	Dados[playerid][RptLidos] = cache_get_field_content_int(0, "ReportesLidos");
	Dados[playerid][Maconha] = cache_get_field_content_int(0, "Maconha");
	Dados[playerid][Crack] = cache_get_field_content_int(0, "Crack");
	Dados[playerid][Heroina] = cache_get_field_content_int(0, "Heroina");
	Dados[playerid][Cocaina] = cache_get_field_content_int(0, "Cocaina");
	Dados[playerid][Sinalizador] = cache_get_field_content_int(0, "Sinalizador");
	Dados[playerid][Calado] = cache_get_field_content_int(0, "Calado");
	Dados[playerid][Preso] = cache_get_field_content_int(0, "Preso");
	Dados[playerid][TempoCalado] = cache_get_field_content_int(0, "TempoCalado");
	Dados[playerid][TempoPreso] = cache_get_field_content_int(0, "TempoPreso");
	Dados[playerid][Profissao] = cache_get_field_content_int(0, "Profissao");
	Dados[playerid][Salario] = cache_get_field_content_int(0, "Salario");
	Dados[playerid][NascerColete] = cache_get_field_content_int(0, "NascerColete");
	Dados[playerid][NascerArma] = cache_get_field_content_int(0, "NascerArma");
	Dados[playerid][TempoColete] = cache_get_field_content_int(0, "TempoColete");
	Dados[playerid][TempoArma] = cache_get_field_content_int(0, "TempoArma");
	Dados[playerid][IDArma] = cache_get_field_content_int(0, "IDArma");
	Dados[playerid][Admin] = cache_get_field_content_int(0, "Admin");
	Dados[playerid][Vip] = cache_get_field_content_int(0, "Vip");
	Dados[playerid][Gm] = cache_get_field_content_int(0, "Gamemaster");
	Dados[playerid][Orgi] = cache_get_field_content_int(0, "Organizador");
	Dados[playerid][Pux] = cache_get_field_content_int(0, "Puxador");
	Dados[playerid][Pres] = cache_get_field_content_int(0, "Presidente");
	Dados[playerid][VPres] = cache_get_field_content_int(0, "VPresidente");
	Dados[playerid][TmpVip] = cache_get_field_content_int(0, "TempoVip");
	Dados[playerid][Btl] = cache_get_field_content_int(0, "Batalhao");
	Dados[playerid][Cel] = cache_get_field_content_int(0, "Coronel");
	Logando(playerid);
	return 1;
}

public OnAccountRegister(playerid)
{
	Dados[playerid][ID] = cache_insert_id();
	printf("Conta número: %d criada.", Dados[playerid][ID]);
	return 1;
}

//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


public OnGameModeInit()
{
	//Configurações MySQL
	mysql_log(LOG_ERROR); 
    Mysql = mysql_connect(Host, Usuario, Database, SenhaDB);
    if(mysql_errno(Mysql) != 0) print("Não foi possível conectar na database.");


	format(Texto, sizeof(Texto), "hostname %s", NomeServidor);
	SendRconCommand(Texto);
	format(Texto, sizeof(Texto), "gamemodetext %s", GameServidor);
	SendRconCommand(Texto);
	format(Texto, sizeof(Texto), "mapname %s", MapaServidor);
	SendRconCommand(Texto);
	 
	UsePlayerPedAnims(); 
	EnableStuntBonusForAll(0); 
	DisableInteriorEnterExits();
	LimitGlobalChatRadius(20.0);
	ShowPlayerMarkers(1);
	ShowNameTags(1);
	
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	SetTimer("AtualizarLevel", 1000, true);
	SetTimer("AtualizarHoras", 1000, true);
	SetTimer("Pagamento", 3500000, true);
	SetTimer("RandomMensagem", 120000, true);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Data = TextDrawCreate(524.235107, 2.916665, "21/12/2014");
	TextDrawLetterSize(Data, 0.449999, 1.600000);
	TextDrawAlignment(Data, 1);
	TextDrawColor(Data, -1);
	TextDrawSetShadow(Data, 1);
	TextDrawSetOutline(Data, 0);
	TextDrawBackgroundColor(Data, 51);
	TextDrawFont(Data, 2);
	TextDrawSetProportional(Data, 1);

	Horas = TextDrawCreate(555.352905, 17.916662, "14:18:40");
	TextDrawLetterSize(Horas, 0.449999, 1.600000);
	TextDrawAlignment(Horas, 1);
	TextDrawColor(Horas, -1);
	TextDrawSetShadow(Horas, 1);
	TextDrawSetOutline(Horas, 0);
	TextDrawBackgroundColor(Horas, 51);
	TextDrawFont(Horas, 2);
	TextDrawSetProportional(Horas, 1);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CreateDynamicPickup(1318, 1, 1833.7756, -1842.5320, 13.5781,   -1);//Mercadinho 1
	CreateDynamicPickup(1318, 1, -27.4412,  -58.2726,   1003.5469, -1);//Saida Mercadinho 1
	CreateDynamicPickup(1274, 1, -23.0716,  -55.6516,   1003.5469, -1);//Menu Mercadinho 1
	CreateDynamicPickup(1241, 1, 2152.1924, -1014.9785, 62.7866,   -1);//Ponto de tráfico
	CreateDynamicPickup(1239, 1, 1481.0652, -1772.3101, 18.7958,   -1);//Entrada Prefeitura
	CreateDynamicPickup(1239, 1, 390.7697,  173.8053,   1008.3828, -1);//Saída Prefeitura
	CreateDynamicPickup(1314, 1, 361.8299,  173.7109,   1008.3828, -1);//Menu emprego Prefeitura
	
	CreateDynamic3DTextLabel("{FFFFFF}Mercadinho\n{FFFF00}Aperte F para entrar.",             0xFFFFFFFF, 1833.7756, -1842.5320, 13.5781,      40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
    Create3DTextLabel("{FFFFFF}Menu do mercado\n{FFFF00}Aperte F para abrir o menu.",     0xFFFFFFFF, -23.0716,  -55.6516,   1003.5469,        40.0, 0, 0);
    CreateDynamic3DTextLabel("{FFFFFF}Ponto do tráfico\n{FFFF00}Aperte F para abrir o menu.", 0xFFFFFFFF, 2152.1924, -1014.9785, 62.7866,      40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Prefeitura\n{FFFF00}Aperte F para entrar.",             0xFFFFFFFF, 1481.0652, -1772.3101, 18.7958,      40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
    Create3DTextLabel("{FFFFFF}Menu de empregos{FFFF00}\nAperte F para abrir o menu.", 0xFFFFFFFF, 361.8299,  173.7109,  1008.3828,            40.0, 0, 0);
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	return 1;
}

public OnGameModeExit()
{
	return 1;
}


public OnPlayerConnect(playerid)
{
	TextDrawShowForPlayer(playerid, Data);
	TextDrawShowForPlayer(playerid, Horas);
	LimparChatJogador(playerid, 50);
	SCM(playerid, Vermelho, "*-------------------------------------------------------------------------------------*");
	SCM(playerid, Amarelo, "  ** Este é um gamemode produzido por Pedro(Pedex).");
	SCM(playerid, Amarelo, "  ** Tudo que contém dentro do jogo não faz apologia ao crime nem a violência.");
	SCM(playerid, Amarelo, "  ** Somos contra a violência nos estádios!");
	SCM(playerid, Amarelo, "  ** Se divirta ao máximo com a nossa família!");
	SCM(playerid, Vermelho, "*-------------------------------------------------------------------------------------*");
	new query[128];
	GetPlayerIp(playerid, IP[playerid], 16);
	mysql_format(Mysql, query, sizeof(query), "SELECT `Senha`, `ID` FROM `contas` WHERE `Nome` = '%e' LIMIT 1", Nome(playerid));
	mysql_tquery(Mysql, query, "OnAccountCheck", "i", playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	new query[709], Query[200];
/*	mysql_format(Mysql, query, sizeof(query), "UPDATE `contas` SET `Score`='%d', `Dinheiro`='%d', `Gold`='%d', `Matou`='%d',
 	`Mortes`='%d', `Skin`='%d', `Logou`='%d', `Torcida`='%d', `UltimoDia`='%d', `UltimoMes`='%d',
 	`UltimoAno`='%d', `UltimoHoras`='%d', `UltimoMinutos`='%d', `UltimoSegundos`='%d',
	`ReportesLidos`='%d', `Maconha`='%d', `Crack`='%d', `Heroina`='%d', `Cocaina`='%d',
	`Sinalizador`='%d', `Admin`='%d', `Vip`='%d',
 	`Gamemaster`='%d', `Organizador`='%d', `Puxador`='%d',
 	`Presidente`='%d', `VPresidente`='%d', `TempoVip`='%d', `Batalhao`='%d',
 	`Coronel`='%d', `Calado`='%d', `Preso`='%d', `TempoCalado`='%d',
  	`TempoPreso`='%d', `Banido`='%d',`TempoBanido`='%d', `Profissao`='%d', `Salario`='%d',
  	`NascerColete`='%d', `NascerArma`='%d', `TempoColete`='%d', `TempoArma`='%d', `IDArma`='%d' WHERE `ID`='%d'",
   	Dados[playerid][Score], Dados[playerid][Dinheiro], Dados[playerid][Gold], Dados[playerid][Matou], Dados[playerid][Mortes],
   	Dados[playerid][Skin], Dados[playerid][Logou], Dados[playerid][Torcida], Dados[playerid][Dia], Dados[playerid][Mes],
  	Dados[playerid][Ano], Dados[playerid][Horas], Dados[playerid][Minuto], Dados[playerid][Segundo],
   	Dados[playerid][RptLidos], Dados[playerid][Maconha], Dados[playerid][Crack], Dados[playerid][Heroina], Dados[playerid][Cocaina],
 	Dados[playerid][Sinalizador], Dados[playerid][Admin], Dados[playerid][Vip], Dados[playerid][Gm], Dados[playerid][Orgi], Dados[playerid][Pux],
   	Dados[playerid][Pres], Dados[playerid][VPres], Dados[playerid][TmpVip], Dados[playerid][Btl],
  	Dados[playerid][Cel], Dados[playerid][Calado], Dados[playerid][Preso], Dados[playerid][TempoCalado],
  	Dados[playerid][TempoPreso], Dados[playerid][Banido], Dados[playerid][TempoBanido], Dados[playerid][Profissao], Dados[playerid][Salario],
  	Dados[playerid][NascerColete], Dados[playerid][NascerArma], Dados[playerid][TempoColete], Dados[playerid][TempoArma], Dados[playerid][IDArma]);
*/
	getdate(Dados[playerid][Ano], Dados[playerid][Mes], Dados[playerid][Dia]);
	gettime(Dados[playerid][Hora], Dados[playerid][Minuto], Dados[playerid][Segundo]);

	mysql_format(Mysql, Query, sizeof(Query), "UPDATE `contas` SET `Score`=%d, `Dinheiro`=%d, `Gold`=%d, `Matou`=%d, `Mortes`=%d, `Skin`=%d, `Logou`=%d, `Torcida`=%d, `UltimoDia`=%d, `UltimoMes`=%d, ", GetPlayerScore(playerid), GetPlayerMoney(playerid), Dados[playerid][Gold], Dados[playerid][Matou], Dados[playerid][Mortes], GetPlayerSkin(playerid), Dados[playerid][Logou], Dados[playerid][Torcida], Dados[playerid][Dia], Dados[playerid][Mes]);
	strcat(query, Query);
	
	mysql_format(Mysql, Query, sizeof(Query), "`UltimoAno`=%d, `UltimoHoras`=%d, `UltimoMinutos`=%d, `UltimoSegundos`=%d, `ReportesLidos`=%d, `Maconha`=%d, `Crack`=%d, `Heroina`=%d, `Cocaina`=%d, ", Dados[playerid][Ano], Dados[playerid][Hora], Dados[playerid][Minuto], Dados[playerid][Segundo], Dados[playerid][RptLidos], Dados[playerid][Maconha], Dados[playerid][Crack], Dados[playerid][Heroina], Dados[playerid][Cocaina]);
	strcat(query, Query);
	
	mysql_format(Mysql, Query, sizeof(Query), "`Sinalizador`=%d, `Calado`=%d, `Preso`=%d, `TempoCalado`=%d, `TempoPreso`=%d, `Profissao`=%d, `Salario`=%d, `NascerColete`=%d, ", Dados[playerid][Sinalizador], Dados[playerid][Calado], Dados[playerid][Preso], Dados[playerid][TempoCalado], Dados[playerid][TempoPreso], Dados[playerid][Profissao], Dados[playerid][Salario], Dados[playerid][NascerColete]);
	strcat(query, Query);

    mysql_format(Mysql, Query, sizeof(Query), "`NascerArma`=%d, `TempoColete`=%d, `TempoArma`=%d, `IDArma`=%d, ", Dados[playerid][NascerArma], Dados[playerid][TempoColete], Dados[playerid][TempoArma], Dados[playerid][IDArma]);
	strcat(query, Query);
	
	mysql_format(Mysql, Query, sizeof(Query), "`Gamemaster`=%d, `Admin`=%d, `Vip`=%d, `Organizador`=%d, `Puxador`=%d, `Presidente`=%d, `VPresidente`=%d, `TempoVip`=%d, `Batalhao`=%d, `Coronel`=%d WHERE `Nome`=%d", Dados[playerid][Gm], Dados[playerid][Admin], Dados[playerid][Vip], Dados[playerid][Orgi], Dados[playerid][Pux], Dados[playerid][Pres], Dados[playerid][VPres], Dados[playerid][TmpVip], Dados[playerid][Btl], Dados[playerid][Cel], Nome(playerid));
	strcat(query, Query);

	mysql_query(Mysql, query);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	if(Dados[playerid][TempoCalado] < 0) return Dados[playerid][TempoCalado] = 0;
	SetPlayerSkin(playerid, Dados[playerid][Skin]);
	SetPlayerInterior(playerid, 0);
	switch(Dados[playerid][Torcida])
	{
	    case 1: SetPlayerPos(playerid, 1833.7756, -1842.5320, 13.5781);
     	case 2: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 3: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 4: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 5: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 6: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 7: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 8: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 9: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 10: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 11: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 12: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 13: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 14: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 15: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 16: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 17: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 18: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 19: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
     	case 20: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 21: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 22: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 23: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 24: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 25: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 26: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 27: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 28: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 29: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 30: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 31: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 32: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 33: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 34: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 35: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 36: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 37: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 38: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 39: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        case 40: SetPlayerPos(playerid, 0.0, 0.0, 0.0);
        default: SetPlayerPos(playerid, 1830.4520,-1842.7332,13.5781);
	}
	
	if(Dados[playerid][Preso] == 1)
	{
	    SCM(playerid, AzulMarinho, "[T.O.B]:{00FFFF} Você estava preso, agora voltou a prisão.");
	    SetPlayerInterior(playerid, 6);
		SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
		TimerPrisao[playerid] = SetTimerEx("SoltarPrisao", 1000, true, "i", playerid);
	}
	
	if(Dados[playerid][TempoCalado] > 0)
	{
	    SetTimerEx("DescalarJogador", Dados[playerid][TempoCalado], true, "i", playerid);
	}
	if(Dados[playerid][NascerColete] > 0)
	{
	    SetPlayerArmour(playerid, 100.0);
	}
	if(Dados[playerid][NascerArma] > 0)
	{
	    GivePlayerWeapon(playerid, Dados[playerid][IDArma], 999999);
	}
	Labels(playerid);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(Dados[playerid][Vip] >= 1)
	{
		if(gettime() > Dados[playerid][TmpVip])
		{
		    SCM(playerid, Amarelo, "[VIP]: Acabou o tempo de seu vip. Compre-o novamente para obter os benefícios.");
		    Dados[playerid][Vip] = 0;
		    Dados[playerid][TmpVip] = 0;
		}
	}
	if(Dados[playerid][NascerColete] >= 1)
	{
	    if(gettime() > Dados[playerid][TempoColete])
	    {
	        Dados[playerid][TempoColete] = 0;
	        Dados[playerid][NascerColete] = 0;
	        SCM(playerid, Amarelo, "[GOLDS]: Acabou o tempo de 'Nascer com colete'. Pode comprar-lo novamente gastando apenas 200 Coins.");
	    }
	}
	if(Dados[playerid][NascerArma] >= 1)
	{
	    if(gettime() > Dados[playerid][TempoArma])
	    {
	        Dados[playerid][IDArma] = 0;
	        Dados[playerid][NascerArma] = 0;
	        Dados[playerid][TempoArma] = 0;
	        SCM(playerid, Amarelo, "[GOLDS]: Acabou o tempo de 'Nascer com arma'. Pode comprar-lo novamente gastando apenas 150 Coins.");
	    }
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(killerid != INVALID_PLAYER_ID)
	{
	    Dados[killerid][Matou]++;
	}
	Dados[playerid][Mortes]++;
	SendDeathMessage(killerid, playerid, reason);
	return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
    if(weaponid == 34 && bodypart == 9)
    {
    	SetPlayerHealth(damagedid, 0.0);
    }
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new texto[128], Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(Dados[playerid][Calado] == 1)
	{
		SCM(playerid, CorErro, "[ERRO]: Você está calado.");
		return 0;
	}
	if(text[0] == '!')
	{
	    format(Texto, sizeof(Texto), "[CHAT %s] %s (%d): %s", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid, text[1]);
		STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
		return 0;
	}
	format(texto, sizeof(texto), "%s {FFFFFF}({FFFF00}%d{FFFFFF}): %s", Nome(playerid), playerid, text);
	SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 100.0, 10000);
	SCMA(0xE3F86CFF, texto);
	return 0;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(Blindado[playerid] == 1)
	{
	    RepairVehicle(vehicleid);
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{

	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{

	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{

	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys == 65536)
	{
	    if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Vip] >= 1)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				RepairVehicle(GetPlayerVehicleID(playerid));
	        }
		}
	}
	if(newkeys == 131072)
	{
	    if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            new Float:Pos[3];
				GetVehicleVelocity(GetPlayerVehicleID(playerid), Pos[0], Pos[1], Pos[2]);
				SetVehicleVelocity(GetPlayerVehicleID(playerid), Pos[0]+(Pos[0] / 8), Pos[1]+(Pos[1] / 8), Pos[2]+(Pos[2] / 8));
	        }
		}
	}
	if(newkeys == 262144)
	{
		if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
	        }
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
	    if(IsPlayerPoint(playerid, 1.0, 1833.7756, -1842.5320, 13.5781))
	    {
	        SetPlayerInterior(playerid, 6);
	    	SetPlayerPos(playerid, -26.691598,-55.714897,1003.546875);
	    }
		if(IsPlayerPoint(playerid, 1.0, -27.4412, -58.2726, 1003.5469))
		{
		    SetPlayerInterior(playerid, 0);
	    	SetPlayerPos(playerid, 1830.4520,-1842.7332,13.5781);
		}
		if(IsPlayerPoint(playerid, 1.0, -23.0716, -55.6516, 1003.5469))
		{
		    SPD(playerid, DialogoMercado, DSL, "Escolha seu item.", "{FFFFFF}X-Burguer ({00FF00}R$ 3,00{FFFFFF})\nX-Salada ({00FF00}R$ 4,00{FFFFFF})\nX-Tudo ({00FF00}R$ 6,00{FFFFFF})\nX-Tudão ({00FF00}R$ 7,00{FFFFFF})\nCoca-Cola ({00FF00}R$ 6,00{FFFFFF})\nFanta-Laranja ({00FF00}R$ 5,00{FFFFFF})\nCerveja ({00FF00}R$ 8,00{FFFFFF})", "Selecionar", "Cancelar");
		}
		if(IsPlayerPoint(playerid, 1.0, 2152.1924, -1014.9785, 62.7866))
		{
		    if(Dados[playerid][Profissao] == 1)
		    {
		    	SPD(playerid, DialogoComprarDrogas, DSL, "Escolha a droga que deseja comprar.", "Maconha ({00FF00}R$ 10,00 {FFFFFF}Cada)\nCrack ({00FF00}R$ 15,00 {FFFFFF}Cada)\nHeroina({00FF00}R$ 20,00 {FFFFFF}Cada)\nCocaina ({00FF00}R$ 15,00 {FFFFFF}Cada)", "Selecionar", "Cancelar");
			}
			else return SCM(playerid, CorErro, "[ERRO]: Você precisa ser traficante para comprar drogas.");
		}
		if(IsPlayerPoint(playerid, 1.5, 1481.0652, -1772.3101, 18.7958))
		{
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 384.808624,173.804992,1008.382812);
		}
		if(IsPlayerPoint(playerid, 1.5, 390.7697,  173.8053,   1008.3828))
		{
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1481.0652, -1772.3101, 18.7958);
		}
		if(IsPlayerPoint(playerid, 1.5, 361.8299,  173.7109,   1008.3828))
		{
		    SPD(playerid, DialogoEmpregos, DSL, "Profissões:", "Traficante", "Selecionar", "Cancelar");
		}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	Command_ReProcess(clickedplayerid, "/meustatus", false);
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		format(Texto, sizeof(Texto), "[ERRO]: O Comando %s não existe.", cmdtext);
		SCM(playerid, CorErro, Texto);
	}
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new Ip[16], Float:vida, Float:colete, query[555];
	new skin = GetPlayerSkin(playerid);
	GetPlayerIp(playerid, Ip, sizeof(Ip));
 	GetPlayerHealth(playerid, vida);
 	GetPlayerArmour(playerid, colete);
	switch(dialogid)
	{
	    case DialogoRegistro:
	    {
	        if(!response) return Kick(playerid);
	        if(response)
	        {
				if(strlen(inputtext))
				{
				    new Query[600];

					mysql_format(Mysql, query, sizeof(query), "INSERT INTO `contas` (`Nome`, `Senha`, `IP`, `Score`,`Dinheiro`,`Gold`,`Matou`,`Mortes`,`Skin`,`Logou`,`Torcida`,`UltimoDia`,`UltimoMes`, `UltimoAno`,`UltimoHoras`,`UltimoMinutos`,`UltimoSegundos`,`ReportesLidos`,`Maconha`,`Crack`,`Heroina`,`Cocaina`,`Sinalizador`,`Calado`,`Preso`,`TempoCalado`,`TempoPreso`,`Profissao`,");
					strcat(Query, query);
					
					mysql_format(Mysql, query, sizeof(query), "INSERT INTO `contas` (`Salario`,`NascerColete`,`NascerArma`,`TempoColete`,`TempoArma`,`IDArma`, `Gamemaster`, `Admin`, `Vip`, `Organizador`, `Puxador`, `Presidente`, `VPresidente`, `TempoVip`, `Batalhao`, `Coronel`)");
					strcat(Query, query);
					
					mysql_format(Mysql, query, sizeof(query), "VALUES ('%e', '%s', '%s', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)", Nome(playerid), inputtext, IP[playerid]);
					strcat(Query, query);
					mysql_tquery(Mysql, Query, "OnAccountRegister", "i", playerid);
					SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "Sudeste\nCentro-Oeste\nSul\nNorte/Nordeste", "Selecionar", "Cancelar");
				}
				else
				{
				    format(Texto, sizeof(Texto), "{FFFFFF}Olá Sr {FFFF00}%s\n{FFFFFF}Ip: {FFFF00}%s\n{FFFFFF}Status: {FF0000}Não-Registrado\n\n{FFFFFF}Coloque uma senha abaixo para se registrar\n{FF0000}Você digitou uma senha incorreta!", Nome(playerid), Ip);
					SPD(playerid, DialogoRegistro, DSI, "Registrando ---- T.O.B", Texto, "Registrar", "Cancelar");
				}
			}
	    }
	    case DialogoLogar:
	    {
	        if(!response) return Kick(playerid);
	        if(response)
	        {
	            if(!strcmp(inputtext, Dados[playerid][Senha], false))
	            {
					mysql_format(Mysql, query, sizeof(query), "SELECT * FROM `contas` WHERE `Nome` = '%e' LIMIT 1", Nome(playerid));
					mysql_tquery(Mysql, query, "OnAccountLoad", "i", playerid);
					
				}
	            else
	            {
	            	Dados[playerid][ErrosSenha]++;
	                format(Texto, sizeof(Texto), "{FFFFFF}Olá Sr {FFFF00}%s\n{FFFFFF}IP: {FFFF00}%s\n{FFFFFF}Status: {00FF00}Registrado\n\n{FFFFFF}Coloque sua senha abaixo para se logar\n\n{FF0000}Você errou sua senha.\n{FF0000}Tentativas: {FFFF00}%i/3", Nome(playerid), Ip, Dados[playerid][ErrosSenha]);
	    			SPD(playerid, DialogoLogar, DSI, "Logando ---- T.O.B", Texto, "Logar", "Cancelar");
	    			if(Dados[playerid][ErrosSenha] == 3)
	    			{
	    			    SPD(playerid, DialogoKickado, DSM, "Kickado", "{FF0000}Você errou a senha em 3 tentativas e foi Kickado\nAbra novamente o servidor e tente novamente.", "Ok", "");
	    			}
	            }  
	        }
	    }
	    case DialogoTorcida:
	    {
	        if(!response) return Kick(playerid);
	        if(response)
	        {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SPD(playerid, DialogoTorcidaSD, DSL, "Escolha o estado do teu time: Sudeste", "São Paulo\nMinas Gerais\nRio de Janeiro", "Selecionar", "Voltar");
		            }
		            case 1:
		            {
		                SPD(playerid, DialogoTorcidaCO, DSL, "Escolha o estado do teu time: Centro-Oeste", "Brasília\nGoías", "Selecionar", "Voltar");
		            }
		            case 2:
		            {
		                SPD(playerid, DialogoTorcidaSL, DSL, "Escolha o estado do teu time: Sul", "Rio Grande do Sul\nParaná\nSanta Catarina", "Selecionar", "Voltar");
		            }
		            case 3:
		            {
		                SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
		            }
				}
	        }
	    }
	    case DialogoTorcidaSD:
	    {
	        if(!response) return SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "Sudeste\nCentro-Oeste\nSul\nNorte/Nordeste", "Selecionar", "Cancelar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SPD(playerid, DialogoTorcidaSP, DSL, "Escolha seu time do coração:", "Torcida do São Paulo\nTorcida do Palmeiras\nTorcida do Santos\nTorcida do Corinthians\nTorcida do Guarani\nTorcida da Portuguesa", "Selecionar", "Voltar");
			        }
			        case 1:
			        {
			            SPD(playerid, DialogoTorcidaMG, DSL, "Escolha seu time do coração:", "Torcida do Cruzeiro\nTorcida do Atlético-MG\nTorcida do América-MG", "Selecionar", "Voltar");
			        }
			        case 2:
			        {
			            SPD(playerid, DialogoTorcidaRJ, DSL, "Escolha seu time do coração:", "Torcida do Flamengo\nTorcida do Vasco\nTorcida do Botafogo\nTorcida do Fluminense", "Selecionar", "Voltar");
			        }
			    }
			}
		}
	    case DialogoTorcidaCO:
	    {
	        if(!response) return SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "Sudeste\nCentro-Oeste\nSul\nNorte/Nordeste", "Selecionar", "Cancelar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
					{
					    SPD(playerid, DialogoTorcidaBR, DSL, "Escolha seu time do coração:", "Torcida do Brasiliense\nTorcida do Gama", "Selecionar", "Voltar");
					}
					case 1:
					{
					    SPD(playerid, DialogoTorcidaGO, DSL, "Escolha seu time do coração:", "Torcida do Goías\nTorcida do Atlético Goianiense", "Selecionar", "Voltar");
					}
			    }
			}
		}
	    case DialogoTorcidaSL:
	    {
	        if(!response) return SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "Sudeste\nCentro-Oeste\nSul\nNorte/Nordeste", "Selecionar", "Cancelar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SPD(playerid, DialogoTorcidaRS, DSL, "Escolha seu time do coração:", "Torcida do Internacional\nTorcida do Grêmio", "Selecionar", "Voltar");
			        }
			        case 1:
			        {
			            SPD(playerid, DialogoTorcidaPR, DSL, "Escolha seu time do coração:", "Torcida do Atlético Paranaense\nTorcida do Coritiba\nTorcida do Paraná", "Selecionar", "Voltar");
			        }
			        case 2:
			        {
			            SPD(playerid, DialogoTorcidaSC, DSL, "Escolha seu time do coração:", "Torcida do Figueirense\nTorcida da Chapecoense\nTorcida do Críciuma\nTorcida do Avaí\nTorcida do Joinville", "Selecionar", "Voltar");
			        }
			    }
			}
		}
	    case DialogoTorcidaNN:
	    {
	        if(!response) return SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "Sudeste\nCentro-Oeste\nSul\nNorte/Nordeste", "Selecionar", "Cancelar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SPD(playerid, DialogoTorcidaPE, DSL, "Escolha seu time do coração:", "Torcida do Sport Club\nTorcida do Naútico\nTorcida do Santa Cruz", "Selecionar", "Voltar");
			        }
			        case 1:
			        {
			            SPD(playerid, DialogoTorcidaCE, DSL, "Escolha seu time do coração:", "Torcida do Ceará\nTorcida do Fortaleza", "Selecionar", "Voltar");
			        }
			        case 2:
			        {
			            SPD(playerid, DialogoTorcidaBA, DSL, "Escolha seu time do coração:", "Torcida do Bahia\nTorcida do Vitória", "Selecionar", "Voltar");
			        }
			        case 3:
			        {
                        SPD(playerid, DialogoTorcidaRN, DSL, "Escolha seu time do coração:", "Torcida do ABC\nTorcida do América de Natal", "Selecionar", "Voltar");
					}
			        case 4:
			        {
			            SPD(playerid, DialogoTorcidaAL, DSL, "Escolha seu time do coração:", "Torcida do CRB\nTorcida do CSA", "Selecionar", "Voltar");
			        }
			        case 5:
			        {
			            SPD(playerid, DialogoTorcidaPA, DSL, "Escolha seu time do coração:", "Torcida do Remo\nTorcida do Paysandu", "Selecionar", "Voltar");
			        }
			    }
			}
		}
		case DialogoTorcidaSP:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSD, DSL, "Escolha o estado do teu time: Sudeste", "São Paulo\nMinas Gerais\nRio de Janeiro", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 1;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 2;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
			            Dados[playerid][Torcida] = 3;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 3:
			        {
			            Dados[playerid][Torcida] = 4;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 4:
			        {
			            Dados[playerid][Torcida] = 5;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 5:
			        {
			            Dados[playerid][Torcida] = 6;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 6:
			        {
			            Dados[playerid][Torcida] = 7;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaMG:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSD, DSL, "Escolha o estado do teu time: Sudeste", "São Paulo\nMinas Gerais\nRio de Janeiro", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 8;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 9;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
                        Dados[playerid][Torcida] = 10;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaRJ:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSD, DSL, "Escolha o estado do teu time: Sudeste", "São Paulo\nMinas Gerais\nRio de Janeiro", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 11;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 12;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
                        Dados[playerid][Torcida] = 13;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 3:
			        {
			            Dados[playerid][Torcida] = 14;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaBR:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaCO, DSL, "Escolha o estado do teu time: Centro-Oeste", "Brasília\nGoías", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 15;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 16;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaGO:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaCO, DSL, "Escolha o estado do teu time: Centro-Oeste", "Brasília\nGoías", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 17;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 18;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaRS:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSL, DSL, "Escolha o estado do teu time: Sul", "Rio Grande do Sul\nParaná\nSanta Catarina", "Selecionar", "Voltar");
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        Dados[playerid][Torcida] = 19;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
				    }
				    case 1:
				    {
				        Dados[playerid][Torcida] = 20;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
				    }
				}
			}
		}
		case DialogoTorcidaPR:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSL, DSL, "Escolha o estado do teu time: Sul", "Rio Grande do Sul\nParaná\nSanta Catarina", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 21;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 22;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
			            Dados[playerid][Torcida] = 23;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaSC:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaSL, DSL, "Escolha o estado do teu time: Sul", "Rio Grande do Sul\nParaná\nSanta Catarina", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 24;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 25;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
			            Dados[playerid][Torcida] = 26;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 3:
			        {
			            Dados[playerid][Torcida] = 27;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaPE:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 28;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 29;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 2:
			        {
			            Dados[playerid][Torcida] = 30;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaCE:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 31;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 32;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaBA:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            Dados[playerid][Torcida] = 33;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
			            Dados[playerid][Torcida] = 34;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaRN:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 35;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 36;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaAL:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 37;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 38;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			    }
			}
		}
		case DialogoTorcidaPA:
		{
		    if(!response) return SPD(playerid, DialogoTorcidaNN, DSL, "Escolha o estado do teu time: Norte / Nordeste", "Pernambuco\nCeará\nBahia\nRio Grande do Norte\nAlagoas\nPará", "Selecionar", "Voltar");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
                        Dados[playerid][Torcida] = 39;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);
			            
			        }
			        case 1:
			        {
                        Dados[playerid][Torcida] = 40;
			            format(Texto, sizeof(Texto), "[CHAT %s]: %s (%d): Sou o mais novo membro da torcida!", GetTorcidaNome[Dados[playerid][Torcida]], Nome(playerid), playerid);
			            STM(Dados[playerid][Torcida], CorChatTorcida, Texto);
			            OnPlayerSpawn(playerid);

			        }
			    }
			}
		}
	    case DialogoKickado:
	    {
	        if(!response) return Kick(playerid);
	        if(response) return Kick(playerid);
	    }
	    case DialogoPrivacidade:
	    {
	        if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
					    if(Dados[playerid][BloqTR] == 0)
					    {
							Dados[playerid][BloqTR] = true;
							SPD(playerid, DialogoPrivacidade, DSL, "Privacidade:", "{FFFFFF}Trazer Torcida: [{FF0000}OFF{FFFFFF}]", "Confirmar", "Cancelar");
					    }
					    else
					    {
					        Dados[playerid][BloqTR] = false;
					        SPD(playerid, DialogoPrivacidade, DSL, "Privacidade:", "{FFFFFF}Trazer Torcida: [{00FF00}ON{FFFFFF}]", "Confirmar", "Cancelar");
					    }
			        }
			    }
			}
	    }
	    case DialogoPM:
	    {
	        if(!response) return 1;
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    if(Dados[playerid][BloqPM] == 1)
	                    {
	                        Dados[playerid][BloqPM] = false;
	                        SPD(playerid, DialogoPM, DSL, ":", "{FFFFFF}Status PM [{00FF00}ON{FFFFFF}]", "Confirmar", "Cancelar");
	                    }
	                    else
	                    {
	                        Dados[playerid][BloqPM] = true;
	                        SPD(playerid, DialogoPM, DSL, ":", "{FFFFFF}Status PM [{FF0000}OFF{FFFFFF}]", "Confirmar", "Cancelar");
	                    }
	                }
	            }
	        }
	    }
	    case DialogoCarros:
	    {
			if(!response) return 1;
			if(response)
			{
			    if(SeNumeros(inputtext))
				{
			        if(strval(inputtext) < 400 || strval(inputtext) > 611) return ShowPlayerDialog(playerid, DialogoCarros, DIALOG_STYLE_INPUT, "Veículos", "Coloque o nome ou id do carro que você deseja", "Confirmar", "Cancelar");
			        CriarVeiculoEx(playerid, strval(inputtext));
			    }
			    else
			    {
			        new CriarVeiculo;
			        CriarVeiculo = GetModelVehicle(inputtext);
			        if(CriarVeiculo < 400 || CriarVeiculo > 611) return ShowPlayerDialog(playerid, DialogoCarros, DIALOG_STYLE_INPUT, "Veículos", "Coloque o nome ou id do carro que você deseja", "Confirmar", "Cancelar");
			        CriarVeiculoEx(playerid, CriarVeiculo);
			    }
			}
	    }
	    case DialogoArmas:
	    {
	        if(!response) return 1;
	        if(response)
	        {
	            if(strval(inputtext) < 22 || strval(inputtext) == 35 || strval(inputtext) == 36 || strval(inputtext) == 37 || strval(inputtext) == 38|| strval(inputtext) == 39) return ShowPlayerDialog(playerid, DialogoArmas, DIALOG_STYLE_INPUT, "ARMAS - PEDEX", "Coloque o id da arma que você deseja obter", "Confirmar", "Cancelar");
				GivePlayerWeapon(playerid, strval(inputtext), 500);
	        }
	    }
	    case DialogoTunar:
	    {
	        if(!response) return 1;
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    SPD(playerid, DialogoPintar, DSL, "Escolha a cor do seu carro", "{FFFFFF}Branco\n{000000}Preto\n{0000FF}Azul\n{FF0000}Vermelho\n{FFFF00}Amarelo\n{00FF00}Verde\n{FF00FF}Rosa\n{8F5300}Marrom", "Selecionar", "Voltar");
	                }
	                case 1:
	                {
	                    SPD(playerid, DialogoPaintJob, DSL, "Escolha o Paintjob do seu carro", "{FFFFFF}Paint Job 1\n{FFFFFF}Paint Job 2\n{FFFFFF}Paint Job 3", "Selecionar", "Voltar");
	                }
	                case 2:
	                {
	                    SPD(playerid, DialogoRodas, DSL, "Escolha a Roda para o seu carro", "{FFFFFF}Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "Selecionar", "Voltar");
	                }
	                case 3:
	                {
	                    SPD(playerid, DialogoNitro, DSL, "Escolha o Nitro para seu carro", "{FFFFFF}Nitro 2x\nNitro 5x\nNitro 10x", "Selecionar", "Voltar");
	                }
	                case 4:
	                {
	                    SPD(playerid, DialogoNeon, DSL, "Escolho a cor do Neon do seu veículo", "{0000FF}Azul\n{00FF00}Verde\n{FFFF00}Amarelo\n{FFFFFF}Branco\n{FF00FF}Rosa\n{FFFFFF}Remover Neons", "Selecionar", "Voltar");
	                }
	            }
	        }
	    }
	    case DialogoPintar:
	    {
	        if(!response) return SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 1, 1);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 1:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 2:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 198, 198);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 3:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 3, 3);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 4:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 6, 6);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 5:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 128, 128);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 6:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 5, 5);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
	                }
	                case 7:
	                {
	                	ChangeVehicleColor(GetPlayerVehicleID(playerid), 30, 30);
						GameTextForPlayer(playerid, "~b~Trocado a cor com sucesso", 3500, 5);
					}
	            }
	        }
	    }
	    case DialogoPaintJob:
	    {
	        if(!response) return SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	        if(response)
	        {
	            switch(listitem)
	            {
					case 0:
					{
					    ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 0);
					    GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 1:
					{
					    ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 1);
					    GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 2:
					{
					    ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 2);
					    GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
	            }
	        }
	    }
	    case DialogoRodas:
	    {
	        if(!response) return SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	        if(response)
	        {
	            switch(listitem)
	            {
                    case 0:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1073);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 1:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1074);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 2:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1075);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 3:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1076);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 4:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1077);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 5:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1078);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 6:
	                {
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1079);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
	                }
	                case 7:
					{
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1080);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 8:
					{
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1081);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 9:
					{
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1082);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 10:
					{
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1083);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 11:
					{
						AddVehicleComponent(GetPlayerVehicleID(playerid), 1084);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
					case 12:
					{
    					AddVehicleComponent(GetPlayerVehicleID(playerid), 1085);
						GameTextForPlayer(playerid, "~b~Adicionado com sucesso", 3500, 5);
					}
	            }
	        }
	    }
	    case DialogoNitro:
	    {
	        if(!response) return SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	        if(response)
	        {
	            switch(listitem)
	            {
					case 0:
					{
					    AddVehicleComponent(GetPlayerVehicleID(playerid), 1009);
					    GameTextForPlayer(playerid, "~b~Nitro adicionado com sucesso", 3500, 5);
					}
					case 1:
					{
					    AddVehicleComponent(GetPlayerVehicleID(playerid), 1008);
					    GameTextForPlayer(playerid, "~b~Nitro adicionado com sucesso", 3500, 5);
					}
					case 2:
					{
					    AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
					    GameTextForPlayer(playerid, "~b~Nitro adicionado com sucesso", 3500, 5);
					}
	            }
	        }
	    }
	    case DialogoNeon:
	    {
	        if(!response) return SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	        if(response)
	        {
	            switch(listitem)
	            {
					case 0:
	                {
                        SetPVarInt(playerid, "Neon", 1);
		                SetPVarInt(playerid, "Azul", CreateDynamicObject(18648,0,0,0,0,0,0));
		                SetPVarInt(playerid, "Azul1", CreateDynamicObject(18648,0,0,0,0,0,0));
		                AttachObjectToVehicle(GetPVarInt(playerid, "Azul"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                AttachObjectToVehicle(GetPVarInt(playerid, "Azul1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);		                GameTextForPlayer(playerid, "~b~Adicionado o Neon Azul.", 3500 ,5);
                        GameTextForPlayer(playerid, "~b~Adicionado o Neon Azul.", 3500, 5);
					}
	                case 1:
	                {
                        SetPVarInt(playerid, "Neon", 1);
		                SetPVarInt(playerid, "Verde", CreateDynamicObject(18649,0,0,0,0,0,0));
		                SetPVarInt(playerid, "Verde1", CreateDynamicObject(18649,0,0,0,0,0,0));
		                AttachObjectToVehicle(GetPVarInt(playerid, "Verde"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                AttachObjectToVehicle(GetPVarInt(playerid, "Verde1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                GameTextForPlayer(playerid, "~b~Adicionado o Neon Verde.", 3500, 5);
	                }
	                case 2:
	                {
                        SetPVarInt(playerid, "Neon", 1);
		                SetPVarInt(playerid, "Amarelo", CreateDynamicObject(18650,0,0,0,0,0,0));
		                SetPVarInt(playerid, "Amarelo1", CreateDynamicObject(18650,0,0,0,0,0,0));
		                AttachObjectToVehicle(GetPVarInt(playerid, "Amarelo"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                AttachObjectToVehicle(GetPVarInt(playerid, "Amarelo1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                GameTextForPlayer(playerid, "~b~Adicionado o Neon Amarelo.",3500,5);
	                }
	                case 3:
	                {
                        SetPVarInt(playerid, "Neon", 1);
		                SetPVarInt(playerid, "Branco", CreateDynamicObject(18652,0,0,0,0,0,0));
		                SetPVarInt(playerid, "Branco1", CreateDynamicObject(18652,0,0,0,0,0,0));
		                AttachObjectToVehicle(GetPVarInt(playerid, "Branco"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                AttachObjectToVehicle(GetPVarInt(playerid, "Branco1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                GameTextForPlayer(playerid, "~b~Adicionado o Neon Branco.",3500,5);
	                }
	                case 4:
	                {
                        SetPVarInt(playerid, "Neon", 1);
		                SetPVarInt(playerid, "Rosa", CreateDynamicObject(18651,0,0,0,0,0,0));
		                SetPVarInt(playerid, "Rosa1", CreateDynamicObject(18651,0,0,0,0,0,0));
		                AttachObjectToVehicle(GetPVarInt(playerid, "Rosa"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                AttachObjectToVehicle(GetPVarInt(playerid, "Rosa1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		                GameTextForPlayer(playerid, "~b~Adicionado o Neon Rosa.",3500,5);
	                }
	                case 5:
	                {
                 		DestroyObject(GetPVarInt(playerid, "Azul"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Azul1"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Verde"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Verde1"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Amarelo"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Amarelo1"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Branco"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Branco1"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Rosa"));
	                    DeletePVar(playerid, "Neon");
	                    DestroyObject(GetPVarInt(playerid, "Rosa1"));
	                    DeletePVar(playerid, "Neon");
	                    GameTextForPlayer(playerid, "~g~Todos os neons foram removidos com sucesso",3500,5);
	                }
	            }
	        }
	    }
	    case DialogoMercado:
	    {
	        if(!response) return 1;
	        if(response)
	        {
	            switch(listitem)
	            {
					case 0:
					{
					    if(Dados[playerid][Dinheiro] < 3) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
                        ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 1, 1, 1, 1, 5000,1);
                        Dados[playerid][Dinheiro] -= 3;
                        SCM(playerid, Verde, "[INFO]: Você está comendo um X-Burguer");
                        SetPlayerHealth(playerid, vida + 3.0);
					}
					case 1:
					{
					    if(Dados[playerid][Dinheiro] < 4) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
					    ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 1, 1, 1, 1, 5000,1);
                        Dados[playerid][Dinheiro] -= 4;
                        SCM(playerid, Verde, "[INFO]: Você está comendo um X-Salada");
                        SetPlayerHealth(playerid, vida + 4.0);
					}
					case 2:
					{
						if(Dados[playerid][Dinheiro] < 6) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
					    ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 1, 1, 1, 1, 5000,1);
                        Dados[playerid][Dinheiro] -= 6;
                        SCM(playerid, Verde, "[INFO]: Você está comendo um X-Tudo");
                        SetPlayerHealth(playerid, vida + 6.0);
					}
					case 3:
					{
					    if(Dados[playerid][Dinheiro] < 7) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
					    ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 1, 1, 1, 1, 5000,1);
                        Dados[playerid][Dinheiro] -= 7;
                        SCM(playerid, Verde, "[INFO]: Você está comendo um X-Tudão");
                        SetPlayerHealth(playerid, vida + 7.0);
					}
					case 4:
					{
					    if(Dados[playerid][Dinheiro] < 6) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
						Dados[playerid][Dinheiro] -= 6;
						ApplyAnimation(playerid,"BAR","dnk_stndM_loop ", 4.1, 1, 1, 1, 1, 5000,1);
						SCM(playerid, Verde, "[INFO]: Você está tomando uma Coca-cola");
						SetPlayerHealth(playerid, vida + 6.0);
					}
					case 5:
					{
						if(Dados[playerid][Dinheiro] < 5) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
						Dados[playerid][Dinheiro] -= 5;
						ApplyAnimation(playerid,"BAR","dnk_stndM_loop ", 4.1, 1, 1, 1, 1, 5000,1);
						SCM(playerid, Verde, "[INFO]: Você está tomando uma Fanta-Laranja");
						SetPlayerHealth(playerid, vida + 5.0);
					}
					case 6:
					{
						if(Dados[playerid][Dinheiro] < 8) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer isso.");
						Dados[playerid][Dinheiro] -= 8;
						ApplyAnimation(playerid,"PED","WALK_DRUNK", 4.1, 1, 1, 1, 1, 5000,1);
						SCM(playerid, Verde, "[INFO]: Você está tomando uma Cerveja.");
						SCM(playerid, Amarelo, "[INFO]: Cuidado 6 Cervejas te deixa bebâdo!");
						SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 500);
					}
	            }
	        }
	    }
	    case DialogoComprarDrogas:
	    {
	        if(!response) return 1;
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    SPD(playerid, DialogoComprarMaconha, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Maconha você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FF0000}R$ 10,0", "Comprar", "Voltar");
	                }
	                case 1:
	                {
	                    SPD(playerid, DialogoComprarCrack, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Crack você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FF0000}R$ 15,0", "Comprar", "Voltar");
	                }
	                case 2:
	                {
	                    SPD(playerid, DialogoComprarHeroina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Heroína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FF0000}R$ 20,0", "Comprar", "Voltar");
	                }
	                case 3:
	                {
	                    SPD(playerid, DialogoComprarCocaina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Cocaína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FF0000}R$ 15,0", "Comprar", "Voltar");
	                }
	            }
	        }
	    }
	    case DialogoComprarMaconha:
	    {
	        if(!response) return SPD(playerid, DialogoComprarDrogas, DSL, "Escolha a droga que deseja comprar.", "Maconha ({00FF00}R$ 10,00 {FFFFFF}Cada)\nCrack ({00FF00}R$ 15,00 {FFFFFF}Cada)\nHeroina({00FF00}R$ 20,00 {FFFFFF}Cada)\nCocaina ({00FF00}R$ 15,00 {FFFFFF}Cada)", "Selecionar", "Cancelar");
			if(response)
			{
			    new total = strval(inputtext) * 10;
			    if(Dados[playerid][Maconha] > 100) return SCM(playerid, CorErro, "[ERRO]: Sua mochila está cheia de maconha.");
			    if(!strval(inputtext)) return SPD(playerid, DialogoComprarMaconha, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Maconha você quer.\nEntre 0 - 100 Unidades\nCada unidade vale:{FFFF00} R$ 10,0\n{FF0000}Coloque apenas números!", "Comprar", "Voltar");
                if(strval(inputtext) < 0 || strval(inputtext) > 100) return SPD(playerid, DialogoComprarMaconha, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Maconha você quer.\nEntre 0 - 100 Unidades\nCada unidade vale:{FFFF00} R$ 10,0", "Comprar", "Voltar");
				if(GetPlayerMoney(playerid) < total) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro o suficiente para comprar a droga.");
                Dados[playerid][Dinheiro] -= total;
				Dados[playerid][Maconha] += strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s comprou %d Maconhas que custou: R$ %d", Nome(playerid), strval(inputtext), total);
				SRM(playerid, Texto);
			}
		}
	    case DialogoComprarCrack:
	    {
	        if(!response) return SPD(playerid, DialogoComprarDrogas, DSL, "Escolha a droga que deseja comprar.", "{FFFFFF}Maconha ({00FF00}R$ 10,00 {FFFFFF}Cada)\nCrack ({00FF00}R$ 15,00 {FFFFFF}Cada)\nHeroina({00FF00}R$ 20,00 {FFFFFF}Cada)\nCocaina ({00FF00}R$ 15,00 {FFFFFF}Cada)", "Selecionar", "Cancelar");
			if(response)
			{
				if(Dados[playerid][Crack] > 100) return SCM(playerid, CorErro, "[ERRO]: Sua mochila está cheia de crack.");
			    new total = strval(inputtext) * 15;
			    if(!strval(inputtext)) return SPD(playerid, DialogoComprarCrack, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Crack você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 15,0\n{FF0000}Coloque apenas números!", "Comprar", "Voltar");
				if(strval(inputtext) < 0 || strval(inputtext) > 100) return SPD(playerid, DialogoComprarCrack, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Crack você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 15,0", "Comprar", "Voltar");
				if(GetPlayerMoney(playerid) < total) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro o suficiente para comprar a droga.");
                Dados[playerid][Dinheiro] -= total;
				Dados[playerid][Crack] += strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s comprou %d Cracks que custou: R$ %d", Nome(playerid), strval(inputtext), total);
				SRM(playerid, Texto);
			}
	    }
	    case DialogoComprarHeroina:
	    {
	        if(!response) return SPD(playerid, DialogoComprarDrogas, DSL, "Escolha a droga que deseja comprar.", "Maconha ({00FF00}R$ 10,00 {FFFFFF}Cada)\nCrack ({00FF00}R$ 15,00 {FFFFFF}Cada)\nHeroina({00FF00}R$ 20,00 {FFFFFF}Cada)\nCocaina ({00FF00}R$ 15,00 {FFFFFF}Cada)", "Selecionar", "Cancelar");
			if(response)
			{
			    if(Dados[playerid][Heroina] > 100) return SCM(playerid, CorErro, "[ERRO]: Sua mochila está cheia de Heroína.");
			    new total = strval(inputtext) * 20;
			    if(!strval(inputtext)) return SPD(playerid, DialogoComprarHeroina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Heroína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 20,0\n{FF0000}Coloque apenas números!", "Comprar", "Voltar");
                if(strval(inputtext) < 0 || strval(inputtext) > 100) return SPD(playerid, DialogoComprarHeroina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Heroína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 20,0", "Comprar", "Voltar");
				if(GetPlayerMoney(playerid) < total) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro o suficiente para comprar a droga.");
                Dados[playerid][Dinheiro] -= total;
				Dados[playerid][Heroina] += strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s comprou %d Heroínas que custou: R$ %d", Nome(playerid), strval(inputtext), total);
				SRM(playerid, Texto);
			}
	    }
		case DialogoComprarCocaina:
		{
		    if(!response) return SPD(playerid, DialogoComprarDrogas, DSL, "Escolha a droga que deseja comprar.", "Maconha ({00FF00}R$ 10,00 {FFFFFF}Cada)\nCrack ({00FF00}R$ 15,00 {FFFFFF}Cada)\nHeroina({00FF00}R$ 20,00 {FFFFFF}Cada)\nCocaina ({00FF00}R$ 15,00 {FFFFFF}Cada)", "Selecionar", "Cancelar");
			if(response)
			{
			    if(Dados[playerid][Cocaina] > 100) return SCM(playerid, CorErro, "[ERRO]: Sua mochila está cheia de Cocaína.");
			    new total = strval(inputtext) * 15;
			    if(!strval(inputtext)) return SPD(playerid, DialogoComprarCocaina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Cocaína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 15,0\n{FF0000}Coloque apenas números!", "Comprar", "Voltar");
                if(strval(inputtext) < 0 || strval(inputtext) > 100) return SPD(playerid, DialogoComprarCocaina, DSI, "Escolha a quantidade:", "{FFFFFF}Coloque abaixo o tanto de Cocaína você quer.\nEntre 0 - 100 Unidades\nCada unidade vale: {FFFF00}R$ 15,0", "Comprar", "Voltar");
				if(GetPlayerMoney(playerid) < total) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro o suficiente para comprar a droga.");
                Dados[playerid][Dinheiro] -= total;
				Dados[playerid][Cocaina] += strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s comprou %d Cocaínas que custou: R$ %d", Nome(playerid), strval(inputtext), total);
				SRM(playerid, Texto);
			}
		}
		case DialogoMochila:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(Fumando[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já está fumando, espere o efeito acabar para fumar de novo.");
		                if(Dados[playerid][Maconha] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem maconha.");
		                ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.0, 1, 0, 0, 0, 0);
		                Dados[playerid][Maconha] --;
		                SetPlayerWeather(playerid, 206);
		                SetTimerEx("FicarNormal", 60*1000, false, "i", playerid);
		                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2000);
		                format(Texto, sizeof(Texto), "[INFO]: O %s está fumando uma maconha.", Nome(playerid));
		                SRM(playerid, Texto);
		                Fumando[playerid] = 1;
		                SetPlayerArmour(playerid, colete+5);
		            }
		            case 1:
		            {
		                if(Fumando[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já está fumando, espere o efeito acabar para fumar de novo.");
		                if(Dados[playerid][Crack] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem crack.");
		                ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.0, 1, 0, 0, 0, 0);
		                Dados[playerid][Crack] --;
		                SetPlayerWeather(playerid, 103);
		                SetTimerEx("FicarNormal", 60*1000, false, "i", playerid);
		                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
		                format(Texto, sizeof(Texto), "[INFO]: O %s está cherando um crack.", Nome(playerid));
		                SRM(playerid, Texto);
		                Fumando[playerid] = 1;
		                SetPlayerArmour(playerid, colete+6);
		            }
		            case 2:
		            {
		                if(Fumando[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já está fumando, espere o efeito acabar para fumar de novo.");
		                if(Dados[playerid][Heroina] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem heroína.");
		                ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.0, 1, 0, 0, 0, 0);
		                Dados[playerid][Heroina] --;
		                SetPlayerWeather(playerid, 90);
		                SetTimerEx("FicarNormal", 60*1000, false, "i", playerid);
		                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 5000);
		                format(Texto, sizeof(Texto), "[INFO]: O %s está cherando uma heroína.", Nome(playerid));
		                SRM(playerid, Texto);
		                Fumando[playerid] = 1;
		                SetPlayerArmour(playerid, colete+7);
		            }
		            case 3:
		            {
		                if(Fumando[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já está fumando, espere o efeito acabar para fumar de novo.");
		                if(Dados[playerid][Cocaina] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem cocaína.");
		                ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.0, 1, 0, 0, 0, 0);
		                Dados[playerid][Cocaina] --;
		                SetPlayerWeather(playerid, 90);
		                SetTimerEx("FicarNormal", 60*1000, false, "i", playerid);
		                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 4000);
		                format(Texto, sizeof(Texto), "[INFO]: O %s está cherando uma cocaína.", Nome(playerid));
		                SRM(playerid, Texto);
		                Fumando[playerid] = 1;
		                SetPlayerArmour(playerid, colete+6);
		            }
		            case 4:
					{
					    if(Dados[playerid][Sinalizador] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem sinalizador.");
					    if(Acendido[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já acendeu um sinalizador digite /apagar para apagar o mesmo.");
					    if(skin == 230) return SCM(playerid, CorErro, "[ERRO]: Esta skin é inapropriada para acender um sinalizador.");
					    format(Texto, sizeof(Texto), "[INFO]: %s Acendeu um sinalizador.", Nome(playerid));
					    SRM(playerid, Texto);
					    Dados[playerid][Sinalizador] --;
					    SetPlayerAttachedObject(playerid, 3, 345, 1, 0.257000, 0.022998, -0.016000, -1.599998, 0.399990, -98.999870, 0.953000, 1.000000, 1.000000, 0, 0);
						Acendido[playerid] = 1;
					}
		        }
		    }
		}
		case DialogoMudarLuta:
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            SCM(playerid, Verde, "[INFO]: Você mudou o estilo de luta com sucesso.");
		            SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		        }
		        case 1:
		        {
		            SCM(playerid, Verde, "[INFO]: Você mudou o estilo de luta com sucesso.");
                    SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				}
		        case 2:
		        {
		            SCM(playerid, Verde, "[INFO]: Você mudou o estilo de luta com sucesso.");
		            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		        }
		        case 3:
		        {
              		SCM(playerid, Verde, "[INFO]: Você mudou o estilo de luta com sucesso.");
              		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		        }
		        case 4:
		        {
		            SCM(playerid, Verde, "[INFO]: Você mudou o estilo de luta com sucesso.");
		            SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
		        }
		    }
		}
		case DialogoVenderMaconha:
		{
		    if(!response)
		    {
		        SCM(playerid, Amarelo, "[INFO]: Você recusou a maconha.");
		        SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, "[INFO]: O Jogador recusou sua maconha.");
		        DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		    if(response)
		    {
				Dados[playerid][Dinheiro] -= GetPVarInt(playerid, "ValorDroga");
				Dados[playerid][Maconha] += GetPVarInt(playerid, "Quantia");
				Dados[GetPVarInt(playerid, "IDTrafi")][Dinheiro] += GetPVarInt(playerid, "ValorDroga");
				Dados[GetPVarInt(playerid, "IDTrafi")][Maconha] -= GetPVarInt(playerid, "Quantia");
				SCM(playerid, Amarelo, "[INFO]: Você aceitou a maconha com sucesso.");
				format(Texto, sizeof(Texto), "[INFO]: O Jogador %s aceitou a sua maconha, Você lucrou: R$ %d", Nome(playerid), GetPVarInt(playerid, "ValorDroga"));
				SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, Texto);
				DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		}
		case DialogoVenderHeroina:
		{
		    if(!response)
		    {
		        SCM(playerid, Amarelo, "[INFO]: Você recusou a Heroína.");
		        SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, "[INFO]: O Jogador recusou sua Heroína.");
		        DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		    if(response)
		    {
                Dados[playerid][Dinheiro] -= GetPVarInt(playerid, "ValorDroga");
				Dados[playerid][Heroina] += GetPVarInt(playerid, "Quantia");
				Dados[GetPVarInt(playerid, "IDTrafi")][Dinheiro] += GetPVarInt(playerid, "ValorDroga");
				Dados[GetPVarInt(playerid, "IDTrafi")][Heroina] -= GetPVarInt(playerid, "Quantia");
				SCM(playerid, Amarelo, "[INFO]: Você aceitou a Heroina com sucesso.");
				format(Texto, sizeof(Texto), "[INFO]: O Jogador %s aceitou a sua Heroina, Você lucrou: R$ %d", Nome(playerid), GetPVarInt(playerid, "ValorDroga"));
				SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, Texto);
				DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		}
		case DialogoVenderCrack:
		{
		    if(!response)
		    {
		        SCM(playerid, Amarelo, "[INFO]: Você recusou o Crack.");
		        SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, "[INFO]: O Jogador recusou seu crack.");
		        DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		    if(response)
		    {
                Dados[playerid][Dinheiro] -= GetPVarInt(playerid, "ValorDroga");
				Dados[playerid][Crack] += GetPVarInt(playerid, "Quantia");
				Dados[GetPVarInt(playerid, "IDTrafi")][Dinheiro] += GetPVarInt(playerid, "ValorDroga");
				Dados[GetPVarInt(playerid, "IDTrafi")][Crack] -= GetPVarInt(playerid, "Quantia");
				SCM(playerid, Amarelo, "[INFO]: Você aceitou o Crack com sucesso.");
				format(Texto, sizeof(Texto), "[INFO]: O Jogador %s aceitou o seu Crack, Você lucrou: R$ %d", Nome(playerid), GetPVarInt(playerid, "ValorDroga"));
				SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, Texto);
				DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		}
		case DialogoVenderCocaina:
		{
		    if(!response)
		    {
		        SCM(playerid, Amarelo, "[INFO]: Você recusou a Cocaina.");
		        SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, "[INFO]: O Jogador recusou sua Cocaina.");
		        DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		    if(response)
		    {
                Dados[playerid][Dinheiro] -= GetPVarInt(playerid, "ValorDroga");
				Dados[playerid][Cocaina] += GetPVarInt(playerid, "Quantia");
				Dados[GetPVarInt(playerid, "IDTrafi")][Dinheiro] += GetPVarInt(playerid, "ValorDroga");
				Dados[GetPVarInt(playerid, "IDTrafi")][Cocaina] -= GetPVarInt(playerid, "Quantia");
				SCM(playerid, Amarelo, "[INFO]: Você aceitou a Cocaina com sucesso.");
				format(Texto, sizeof(Texto), "[INFO]: O Jogador %s aceitou a sua Cocaina, Você lucrou: R$ %d", Nome(playerid), GetPVarInt(playerid, "ValorDroga"));
				SCM(GetPVarInt(playerid, "IDTrafi"), Amarelo, Texto);
				DeletePVar(playerid, "IDTrafi");
		        DeletePVar(playerid, "ValorDroga");
		        DeletePVar(playerid, "Quantia");
		    }
		}
		case DialogoEmpregos:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(GetPlayerScore(playerid) < 30) return SCM(playerid, CorErro, "[ERRO]: Você só pode ingressar nesta profissão com mais de 30 scores");
		                if(Dados[playerid][Profissao] != 0) return SCM(playerid, CorErro, "[ERRO]: Saia do seu emprego Primeiro, use /sairemprego.");
		                Dados[playerid][Profissao] = 1;
		                Dados[playerid][Salario] = 350;
		                format(Texto, sizeof(Texto), "[INFO]: Você agora é um traficante. Salário: R$ 350,00");
		                SCM(playerid, Amarelo, Texto);
		            }
		        }
		    }
		}
		case DialogoBugs:
		{
		    if(!response) return 1;
		    if(response)
		    {
				if(!strlen(inputtext)) return SCM(playerid, CorErro, "[ERRO]: Coloque um texto válido!");
				EscreverLog(playerid, "Bugs", inputtext);
				SCM(playerid, Amarelo, "[INFO]: Bug reportado com sucesso!");
		    }
		}
		case DialogoSugestao:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(!strlen(inputtext)) return SCM(playerid, CorErro, "[ERRO]: Coloque um texto válido!");
				EscreverLog(playerid, "Sugestões", inputtext);
				SCM(playerid, Amarelo, "[INFO]: Sugestão enviada com sucesso!");
		    }
		}
		case DialogoGolds:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(Dados[playerid][Gold] < 200) return SCM(playerid, CorErro, "[ERRO]: Você não tem golds suficiente para comprar isso.");
						if(Dados[playerid][NascerColete] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já comprou este item, espere ele expirar.");
						Dados[playerid][Gold] -= 200;
						Dados[playerid][NascerColete] = 1;
						Dados[playerid][TempoColete] = gettime() + (30 * 86400);
						SCM(playerid, Verde, "[GOLDS]: Você comprou o ítem com sucesso. Agora nascerá até acabar o tempo com Colete.");
						SetPlayerArmour(playerid, 100);
		            }
		            case 1:
		            {
		                if(Dados[playerid][Gold] < 150) return SCM(playerid, CorErro, "[ERRO]: Você não tem golds suficiente para comprar isso.");
						if(Dados[playerid][NascerArma] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já comprou este item, espere expirar.");
						SPD(playerid, DialogoPedirArma, DSI, "Coloque o ID da Arma.", "Coloque o ID da arma que você quer comprar\n\nUse IDs de Arma entre 1 - 8, Por favor.", "Comprar", "Cancelar");
		            }
		            case 2:
		            {
		                if(Dados[playerid][Gold] <= 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem golds suficiente para fazer uma transação.");
		                SPD(playerid, DialogoTransferirGold, DSI, "Coloque o ID do jogador", "Coloque o ID do jogador que você quer transferir.\n\nColoque um ID Válido, Por favor.", "Próximo", "Cancelar");
		            }
		            case 3:
		            {
		                if(Dados[playerid][Gold] < 1000) return SCM(playerid, CorErro, "[ERRO]: Você não tem golds suficiente para fazer isso.");
						if(Dados[playerid][Vip] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já é VIP, espere acabar o tempo para comprar novamente.");
						Dados[playerid][Vip] = 1;
						Dados[playerid][TmpVip] = gettime() + (30 * 86400);
						Dados[playerid][Gold] -= 1000;
						format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou VIP por 30 Dias. Usando /golds.", Nome(playerid));
						SGM(CorTOB, Texto);
		            }
		            case 4:
		            {
		                if(Dados[playerid][Dinheiro] < 10000) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente para fazer esta transação.");
		                SPD(playerid, DialogoTrocarDinheiroG, DSI, "Trocar Dinheiro por Golds", "Coloque a quantidade de Golds que você quer obter\n\nNão coloque uma Quantia que você não pode pagar, Por favor.", "Trocar", "Cancelar");
		            }
		            case 5:
		            {
		                if(Dados[playerid][Score] < 10) return SCM(playerid, CorErro, "[ERRO]: Você não tem scores suficiente para fazer isso.");
		                SPD(playerid, DialogoTrocarScoreG, DSI, "Trocar Score por Golds", "Coloque a quantidade de Golds que você quer obter\n\nNão coloque uma Quantia que você não tem de scores, Por favor.", "Trocar", "Cancelar");
		            }
		        }
		    }
		}
		case DialogoPedirArma:
		{
		    if(!response) return 1;
			if(response)
			{
			    if(!strval(inputtext)) return SCM(playerid, CorErro, "[ERRO]: Digite apenas números entre 1 - 8");
			    if(strval(inputtext) < 1 || strval(inputtext) > 8) return SCM(playerid, CorErro, "[ERRO]: Digite apenas números entre 1 - 8");
			    GivePlayerWeapon(playerid, strval(inputtext), 999999);
				Dados[playerid][Gold] -= 150;
			    Dados[playerid][IDArma] = strval(inputtext);
			    Dados[playerid][NascerArma] = 1;
			    Dados[playerid][TempoArma] = gettime() + (30 * 86400);
			    SCM(playerid, Verde, "[GOLDS]: Você comprou a arma com sucesso! Agora você tem 30 dias para usufruir das armas.");
			}
		}
		case DialogoTransferirGold:
		{
		    if(!response) return 1;
			if(response)
			{
				if(!IsPlayerConnected(strval(inputtext))) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está conectado neste momento.");
				SetPVarInt(playerid, "IDDele", strval(inputtext));
				SPD(playerid, DialogoTransferirGold2, DSI, "Coloque a quantidade de golds.", "Coloque abaixo a quantidade de Golds que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
			}
		}
		case DialogoTransferirGold2:
		{
		    if(!response) return 1;
			if(response)
			{
				if(!strval(inputtext)) return SPD(playerid, DialogoTransferirGold2, DSI, "Coloque a quantidade de golds.", "Coloque abaixo a quantidade de Golds que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000) SPD(playerid, DialogoTransferirGold2, DSI, "Coloque a quantidade de golds.", "Coloque abaixo a quantidade de Golds que você quer transferir para o jogador\n\nColoque uma quantidade entre 0 - 1000, E Apenas Números.", "Transferir", "Cancelar");
				Dados[GetPVarInt(playerid, "IDDele")][Gold] += strval(inputtext);
				Dados[playerid][Gold] -= strval(inputtext);
				format(Texto, sizeof(Texto), "[INFO]: O %s transferiu %d de Golds para você.", Nome(playerid), strval(inputtext));
				SCM(GetPVarInt(playerid, "IDDele"), Amarelo, Texto);
				format(Texto, sizeof(Texto), "[INFO]: Você transferiu %d de Golds para %s", strval(inputtext), Nome(GetPVarInt(playerid, "IDDele")));
				SCM(playerid, Amarelo, Texto);
			}
		}
		case DialogoTrocarDinheiroG:
		{
		    if(!response) return 1;
			if(response)
			{
			    new total = strval(inputtext) * 10000;
				if(!strval(inputtext)) return SCM(playerid, CorErro, "[ERRO]: Digite apenas números por favor.");
				if(strval(inputtext) < 0 || strval(inputtext) > 100) return SCM(playerid, CorErro, "[ERRO]: Digite quantias entre 0 - 100.");
				if(total > Dados[playerid][Dinheiro]) return SCM(playerid, CorErro, "[ERRO]: Você não possui todo este dinheiro.");
				Dados[playerid][Gold] += strval(inputtext);
				Dados[playerid][Dinheiro] -= total;
				format(Texto, sizeof(Texto), "[GOLDS]: Você trocou com sucesso. R$ %d por %d Golds.", total, strval(inputtext));
				SCM(playerid, Verde, Texto);
			}
		}
		case DialogoTrocarScoreG:
		{
		    if(!response) return 1;
			if(response)
			{
			    new total = strval(inputtext) * 10;
                if(!strval(inputtext)) return SCM(playerid, CorErro, "[ERRO]: Digite apenas números por favor.");
                if(strval(inputtext) < 0 || strval(inputtext) > 50) return SCM(playerid, CorErro, "[ERRO]: Digite quantias de 0 - 50.");
                if(total > Dados[playerid][Score]) return SCM(playerid, CorErro, "[ERRO]: Você não possui tudo isso de Score.");
                Dados[playerid][Gold] += strval(inputtext);
                Dados[playerid][Score] -= total;
                format(Texto, sizeof(Texto), "[GOLDS]: Você trocou com sucesso. %d de Score por %d Golds", total, strval(inputtext));
                SCM(playerid, Verde, Texto);
			}
		}
	}
	return 1;
}
//Comandos
YCMD:say(playerid, params[], help)//1
{
    SendComandoText(playerid, "/say", params);
	new texto[50];
	if(Dados[playerid][Vip] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1)
	{
		if(sscanf(params, "s[50]", texto)) return SCM(playerid, Corsscanf, "[USO]: /asay [Texto]");
		format(Texto, sizeof(Texto), "[GLOBAL %s] %s: %s", Dados[playerid][Vip] >= 1 ? ("VIP") : Dados[playerid][Orgi] >= 1 ? ("ORGANIZADOR") : ("PUXADOR"), Nome(playerid), texto);
		SGM(CorChatGlobal, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}

YCMD:asay(playerid, params[], help)//2
{
	if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/asay", params);
	new texto[50];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		if(sscanf(params, "s[50]", texto)) return SCM(playerid, Corsscanf, "[USO]: /a [Texto]");
		format(Texto, sizeof(Texto), "[%s] %s : %s",Dados[playerid][Gm] >= 1 ? ("Gamemaster") : ("Administrador"), Nome(playerid), texto);
		SGM(AzulMarinho, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}

YCMD:setadmin(playerid, params[], help)//3
{
    SendComandoText(playerid, "/setadmin", params);
	new id, query[300];
	if(Dados[playerid][Gm] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setadmin <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não está conectado");
		Dados[id][Admin] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Administrador graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
		mysql_format(Mysql, query, sizeof(query), "UPDATE `contas` SET `Admin`=%d WHERE `Nome` = '%e'", Dados[id][Admin], Nome(id));
		mysql_query(Mysql, query);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setgm(playerid, params[], help)//4
{
    SendComandoText(playerid, "/setgm", params);
	new id;
	if(IsPlayerAdmin(playerid))
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setgm <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Gm] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Game Master graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:setpux(playerid, params[], help)//5
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setpux", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setpux <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Pux] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Puxador graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setorg(playerid, params[], help)//6
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setorg", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setorg <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Orgi] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Organizador graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setvip(playerid, params[], help)//7
{
    SendComandoText(playerid, "/setvip", params);
	new id, dias;
    if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
    {
		if(sscanf(params, "ui", id, dias)) return SCM(playerid, Corsscanf, "[USO]: /setvip <ID> <Dias>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		if(dias < 0 || dias > 60) return SCM(playerid, CorErro, "[ERRO]: Use dias entre 0 - 60.");
		Dados[id][Vip] = 1;
		Dados[id][TmpVip] = gettime() + (dias * 60 * 60 * 24);
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou VIP por %d Dias graças ao %s", Nome(id), dias, Nome(playerid));
		SGM(CorTOB, Texto);
    }
    else
    {
        SCM(playerid, CorErro, MensagemErroCMD);
    }
	return 1;
}
YCMD:setbtl(playerid, params[], help)//8
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setbtl", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Cel] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setbtl <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Btl] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Batalhão graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setpres(playerid, params[], help)//9
{
    SendComandoText(playerid, "/setpres", params);
	new id;
	if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setpres <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Pres] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Presidente graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setvpres(playerid, params[], help)//10
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setvpres", params);
	new id;
	if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1 || Dados[playerid][Pres] >= 1)
	if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setvpres <ID>");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
	Dados[id][VPres] = 1;
	format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Vice-Presidente graças ao %s", Nome(id), Nome(playerid));
	SGM(CorTOB, Texto);
	return 1;
}
YCMD:setcel(playerid, params[], help)//11
{
    SendComandoText(playerid, "/setcel", params);
	new id;
	if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /setcel <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador não conectado");
		Dados[id][Cel] = 1;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s virou Coronel graças ao %s", Nome(id), Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:tirargm(playerid, params[], help)//12
{
    SendComandoText(playerid, "/tirargm", params);
	new id;
	if(IsPlayerAdmin(playerid))
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirargm <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Gm] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Gamemaster.");
	    Dados[id][Gm] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais GameMaster, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tiraradmin(playerid, params[], help)//13
{
    SendComandoText(playerid, "/tiraradmin", params);
	new id;
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tiraradmin <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Admin] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Administrador.");
	    Dados[id][Admin] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Administrador, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarpres(playerid, params[], help)//14
{
    SendComandoText(playerid, "/tirarpres", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarpres <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Pres] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Presidente.");
	    Dados[id][Pres] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Presidente, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarvpres(playerid, params[], help)//15
{
    SendComandoText(playerid, "/tirarvpres", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarvpres <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][VPres] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Vice-Presidente.");
	    Dados[id][VPres] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Vice-Presidente, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarorg(playerid, params[], help)//16
{
    SendComandoText(playerid, "/tirarorg", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarorg <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Orgi] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Organizador.");
	    Dados[id][Orgi] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Organizador, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarpux(playerid, params[], help)//17
{
    SendComandoText(playerid, "/tirarpux", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarpux <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Pux] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Puxador.");
	    Dados[id][Pux] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Puxador, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarvip(playerid, params[], help)//18
{
    SendComandoText(playerid, "/tirarvip", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarvip <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Vip] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Vip.");
	    Dados[id][Vip] = 0;
	    Dados[id][TmpVip] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Vip, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarcel(playerid, params[], help)//19
{
    SendComandoText(playerid, "/tirarcel", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarcel <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Cel] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Coronel.");
	    Dados[id][Cel] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Coronel, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:tirarbtl(playerid, params[], help)//20
{
    SendComandoText(playerid, "/tirarbtl", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tirarbtl <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Btl] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não é Policial.");
	    Dados[id][Btl] = 0;
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s não é mais Policial, graças ao %s", Nome(id), Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:minhatorcida(playerid, params[], help)//21
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/minhatorcida", params);
	new Texto2[200];
	new Contador = 0;
	format(Texto, sizeof(Texto), "%s\n\n", GetTorcidaNome[Dados[playerid][Torcida]]);
	strcat(Texto2, Texto);
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Dados[i][Torcida] == Dados[playerid][Torcida])
			{
				format(Texto, sizeof(Texto), "{FFFFFF}%d. [%s] %s(Level - %d)\n", Contador, GetCargoNome(i), Nome(i), Dados[i][Score]);
				strcat(Texto2, Texto);
				Contador ++;
				format(Texto, sizeof(Texto), "{FFFFFF}Torcedores Onlines : %i", Contador);
				SPD(playerid, DialogoTorcidaOnline, DSM, Texto, Texto2, "Ok", "");
			}
		}
	}
	return 1;
}
YCMD:vidat(playerid, params[], help)//22
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/vidat", params);
	new Float:x, Float:y, Float:z;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Cel] >= 1)
	{
		GetPlayerPos(playerid, x, y, z);
		for(new i = 0; i < GetMaxPlayers(); i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerPoint(i, 10.0, x, y, z))
				{
					SetPlayerHealth(i, 100.0);
					format(Texto, sizeof(Texto), "[INFO]: O %s setou a vida de todos perto a 100", Nome(playerid));
					SRM(playerid, Texto);
				}
			}
		}
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setvida(playerid, params[], help)//23
{
    SendComandoText(playerid, "/setvida", params);
    new id, vida;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		if(sscanf(params, "ui", id, vida)) return SCM(playerid, Corsscanf, "[USO]: /setvida <ID> <Vida>");
		if(vida < 0 || vida > 100) return SCM(playerid, CorErro, "[ERRO]: Use valores de 0 - 100.");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: ID Inválido.");
		SetPlayerHealth(id, vida);
		format(Texto, sizeof(Texto), "[INFO]: O Jogador %s teve sua vida setada a %d pelo %s", Nome(id), vida, Nome(playerid));
		SRM(playerid, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setcolete(playerid, params[], help)//24
{
    SendComandoText(playerid, "/setcolete", params);
    new id, colete;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		if(sscanf(params, "ui", id, colete)) return SCM(playerid, Corsscanf, "[USO]: /setcolete <ID> <Colete>");
		if(colete < 0 || colete > 100) return SCM(playerid, CorErro, "[ERRO]: Use valores de 0 - 100");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: ID Inválido.");
		SetPlayerArmour(id, colete);
		format(Texto, sizeof(Texto), "[INFO]: O Jogador %s teve seu colete setado a %d pelo %s", Nome(id), colete, Nome(playerid));
		SRM(playerid, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:tr(playerid, params[], help)//25
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/tr", params);
    new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /tr <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: ID Inválido.");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(id, X, Y, Z);
		format(Texto, sizeof(Texto), "[INFO]: %s Trouxe %s", Nome(playerid), Nome(id));
		SRM(playerid, Texto);
		format(Texto, sizeof(Texto), "[INFO]: %s Levou %s", Nome(playerid), Nome(id));
		SRM(id, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:trtodos(playerid, params[], help)//26
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/trtodos", params);
    new Float:x, Float:y, Float:z;
	if(Dados[playerid][Pres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][VPres] >= 1)
	{
		GetPlayerPos(playerid, x, y, z);
		for(new i = 0; i < GetMaxPlayers(); i++)
		{
			if(IsPlayerConnected(i))
			{
				if(Dados[i][Torcida] == Dados[playerid][Torcida])
				{
					if(Dados[i][BloqTR] == 0)
					{

						SetPlayerPos(i, x, y, z);
						format(Texto, sizeof(Texto), "[INFO]: O %s Puxou todos da %s", Nome(playerid), GetTorcidaNome[Dados[playerid][Torcida]]);
						SRM(i, Texto);
					}
				}
			}
		}
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:ir(playerid, params[], help)//27
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/ir", params);
    new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1 || Dados[playerid][Vip] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /ir <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(id, x, y, z);
		SetPlayerPos(playerid, x, y, z);
		format(Texto, sizeof(Texto), "[INFO]: Você Foi até %s", Nome(id));
		SCM(playerid, CorInfo, Texto);
		format(Texto, sizeof(Texto), "[INFO]: %s Foi até %s", Nome(playerid), Nome(id));
		SRM(id, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:espiar(playerid, params[], help)//28
{
	new id;
	SendComandoText(playerid, "/espiar", params);
    if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /espiar <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		if(id == playerid) return SCM(playerid, CorErro, "[ERRO]: Você não pode espiar você mesmo.");
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, id);
		SetPlayerInterior(playerid, GetPlayerInterior(id));
		Dados[playerid][IDEspiar] = id;
		Dados[playerid][TipoEspiar] = ADMIN_SPEC_TYPE_PLAYER;
		format(Texto, sizeof(Texto), "[INFO]: Você está espiando %s.", Nome(playerid));
		SCM(playerid, CorInfo, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:pararespiar(playerid, params[], help)//29
{
    SendComandoText(playerid, "/pararespiar", params);
    if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1)
	{
		TogglePlayerSpectating(playerid, 0);
		Dados[playerid][IDEspiar] = 0;
		Dados[playerid][TipoEspiar] = 0;
		SCM(playerid, CorInfo, "[INFO]: Você não está mais espiando.");
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}

YCMD:skin(playerid, params[], help)//30
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	new skin;
	if(sscanf(params, "i", skin)) return SCM(playerid, Corsscanf, "[USO]: /skin <0-299>");
	if(skin < 0 || skin > 299) return SCM(playerid, CorErro, "[ERRO]: Skin Inválida.");
	SetPlayerSkin(playerid, skin);
	Dados[playerid][Skin] = skin;
	format(Texto, sizeof(Texto), "[INFO]: Sua skin foi setada para a skin %i", skin);
	SCM(playerid, Amarelo, Texto);
	return 1;
}
YCMD:setskin(playerid, params[], help)//31
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setskin", params);
    new skin, id, Float:x, Float:y, Float:z;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1 || Dados[playerid][Cel] >= 1)
	{
		if(sscanf(params, "ui", id, skin)) return SCM(playerid, Corsscanf, "[USO]: /setskin <ID> <skin 0-299>");
		GetPlayerPos(id, x, y, z);
		if(skin < 0 || skin > 299) return SCM(playerid, CorErro, "[ERRO]: Skin Inválida.");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		if(!IsPlayerPoint(playerid, 10.0, x, y, z)) return SCM(playerid, CorErro, "[ERRO]: Você não está perto deste jogador.");
		SetPlayerSkin(id, skin);
		Dados[id][Skin] = skin;
		format(Texto, sizeof(Texto), "[INFO]: O %s Setou a skin de %s para %s", Nome(playerid), Nome(id), skin);
		SRM(id, Texto);
		format(Texto, sizeof(Texto), "[INFO]: Você setou a skin de %s para %s", Nome(id), skin);
		SCM(playerid, Amarelo, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}

YCMD:tapa(playerid, params[], help)//32
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/tapa", params);
	new id, altura;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /ir <ID>");
		if(sscanf(params, "ui", id, altura)) return SCM(playerid, Corsscanf, "[USO]: /tapa <ID> <Altura>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		if(altura < 0 || altura > 1000) return SCM(playerid, CorErro, "[ERRO]: Altura alta demais ou pequena demais.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(id, x, y, z);
		if(!IsPlayerPoint(playerid, 20.0, x, y, z)) return SCM(playerid, CorErro, "[ERRO]: Este Jogador não está perto de você.");
		SetPlayerPos(id, x, y, z+altura);
		format(Texto, sizeof(Texto), "[INFO]: O Jogador %s recebeu um tapa do %s de %d Metros", Nome(id), Nome(playerid), altura);
		SRM(id, Texto);
		format(Texto, sizeof(Texto), "[INFO]: Você deu um tapa de %d metros em %s", altura, Nome(id));
		SCM(playerid, CorInfo, Texto);
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:setskintodos(playerid, params[], help)//33
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/setskintodos", params);
	new skin, Float:x, Float:y, Float:z;
	if(Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Orgi] >= 1)
	{
		if(sscanf(params, "i", skin)) return SendClientMessage(playerid, Corsscanf, "[USO]: /setskintodos <skin 0-299>");
		if(skin < 1 || skin > 299) return SendClientMessage(playerid, -1, "[ERRO]: Skin inválida.");
		GetPlayerPos(playerid, x, y, z);
		for(new i = 0; i < GetMaxPlayers(); i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!IsPlayerInAnyVehicle(i))
				{
					if(IsPlayerPoint(i, 20.0, x, y, z))
					{
						if(Dados[i][Torcida] == Dados[playerid][Torcida])
						{
							SetPlayerSkin(i, skin);
							format(Texto, sizeof(Texto), "[INFO]: O %s setou a vida de todos da torcida perto dele para %i", GetCargoNome(playerid), Nome(playerid), skin);
							SRM(playerid, Texto);
						}
					}
				}
			}
		}
	}
	else
	{
		SCM(playerid, CorErro, MensagemErroCMD);
	}
	return 1;
}
YCMD:pm(playerid, params[], help)//34
{
    SendComandoText(playerid, "/pm", params);
    new id, msg[128];
	if(Dados[playerid][Calado] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está calado.");
	if(sscanf(params, "us[128]", id, msg)) return SCM(playerid, Corsscanf, "[USO]: /pm <ID> <Mensagem>");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	if(id == playerid) return SCM(playerid, CorErro, "[ERRO]: Você não pode mandar mensagens para você mesmo.");
	if(Dados[id][BloqPM] == 1) return SCM(playerid, CorErro, "[ERRO]: Jogador está com o PM Bloqueado.");
	format(Texto, sizeof(Texto), "[PM] para %s (%d) : %s", Nome(id), playerid, msg);
	SCM(playerid, CorPM, Texto);
	format(Texto, sizeof(Texto), "[PM] de %s (%d) : %s", Nome(playerid), playerid, msg);
	SCM(id, CorPM, Texto);
	return 1;
}
YCMD:statuspm(playerid, params[], help)//35
{
	if(Dados[playerid][BloqPM] == 1)
	{
		SPD(playerid, DialogoPM, DSL, "Status PM", "{FFFFFF}Status PM [{FF0000}OFF{FFFFFF}]", "Confirmar", "Cancelar");
	}
	else
	{
	    SPD(playerid, DialogoPM, DSL, "Status PM", "{FFFFFF}Status PM [{00FF00}ON{FFFFFF}]", "Confirmar", "Cancelar");
	}
	return 1;
}

YCMD:privacidade(playerid, params[], help)
{
	if(Dados[playerid][BloqTR] == 0)
	{
		SPD(playerid, DialogoPrivacidade, DSL, "Privacidade:", "{FFFFFF}Trazer Torcida: [{00FF00}ON{FFFFFF}]", "Confirmar", "Cancelar");
	}
	else
	{
		SPD(playerid, DialogoPrivacidade, DSL, "Privacidade:", "{FFFFFF}Trazer Torcida: [{FF0000}OFF{FFFFFF}]", "Confirmar", "Cancelar");
	}
	return 1;
}
YCMD:setgold(playerid, params[], help)//36
{
    SendComandoText(playerid, "/setgold", params);
	new id, quantidade;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "ui", id, quantidade)) return SCM(playerid, Corsscanf, "[USO]: /setgold <ID> <Quantidade>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(quantidade < 0 || quantidade > 10000) return SCM(playerid, CorErro, "[ERRO]: Quantidade de 0 - 10000");
	    Dados[id][Gold] += quantidade;
	    format(Texto, sizeof(Texto), "[INFO]: %s deu %d gold para Você", Nome(playerid), quantidade);
	    SCM(id, CorSet, Texto);
	    format(Texto, sizeof(Texto), "[INFO]: Você deu %d de gold para %s", quantidade, Nome(id));
	    SCM(playerid, CorInfo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:setscore(playerid, params[], help)//37
{
    SendComandoText(playerid, "/setscore", params);
	new id, quantidade;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		if(sscanf(params, "ui", id, quantidade)) return SCM(playerid, Corsscanf, "[USO]: /setscore <ID> <Quantidade>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(quantidade < 0 || quantidade > 20000) return SCM(playerid, CorErro, "[ERRO]: Quantidade de 0 - 20000");
	    Dados[id][Score] = quantidade;
	    format(Texto, sizeof(Texto), "[INFO]: %s setou o seu score para %d", Nome(playerid), quantidade);
	    SCM(id, CorSet, Texto);
	    format(Texto, sizeof(Texto), "[INFO]: Você setou o score de %s para %d", Nome(id), quantidade);
	    SCM(playerid, CorInfo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:setdinheiro(playerid, params[], help)//38
{
	SendComandoText(playerid, "/setdinheiro", params);
    new id, quantidade;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		if(sscanf(params, "ui", id, quantidade)) return SCM(playerid, Corsscanf, "[USO]: /setdinheiro <ID> <Quantidade>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(quantidade < 0 || quantidade > 1000000) return SCM(playerid, CorErro, "[ERRO]: Quantidade de 0 - 1000000");
	    Dados[id][Dinheiro] += quantidade;
     	format(Texto, sizeof(Texto), "[INFO]: %s deu R$:%d para Você", Nome(playerid), quantidade);
	    SCM(id, CorSet, Texto);
	    format(Texto, sizeof(Texto), "[INFO]: Você deu R$:%d para %s", quantidade, Nome(id));
	    SCM(playerid, CorInfo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}
YCMD:morrer(playerid, params[], help)//39
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/morrer", params);
	SetPlayerHealth(playerid, 0);
	SCM(playerid, CorSet, "[INFO]: Você optou por morrer!");
	return 1;
}
YCMD:mudartorcida(playerid, params[], help)//40
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/mudartorcida", params);
	SPD(playerid, DialogoTorcida, DSL, "Escolha sua torcida", "{FFFFFF}Sudeste\nCentro-Oeste\nSul\nNordeste", "Selecionar", "Cancelar");
	return 1;
}

YCMD:setprocurado(playerid, params[], help)//41
{
    SendComandoText(playerid, "/setprocurado", params);
	new id, estrelas;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "ui", id, estrelas)) return SCM(playerid, Corsscanf, "[USO]: /setprocurado <ID> <Estrelas>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(estrelas < 0 || estrelas > 6) return SCM(playerid, CorErro, "[ERRO]: Utilize quantias de 0 - 6");
	    SetPlayerWantedLevel(id, estrelas);
	    format(Texto, sizeof(Texto), "[INFO]: O %s setou as estrelas de %s para %d", Nome(playerid), Nome(id), estrelas);
	    SRM(id, Texto);
	    format(Texto, sizeof(Texto), "[INFO]: Você setou as estrelas de %s para %d", Nome(id), estrelas);
	    SCM(playerid, CorInfo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:avisar(playerid, params[], help)//42
{
	new id, motivo[60];
    SendComandoText(playerid, "/avisar", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "us[60]", id, motivo)) return SCM(playerid, Corsscanf, "[USO]: /avisar <ID> <Motivo>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, Corsscanf, "[ERRO]: Jogador Inválido.");
		Dados[id][Avisos] ++;
		format(Texto, sizeof(Texto), "~y~Avisos %d/3 Motivo: %s", Dados[id][Avisos], motivo);
		GameTextForPlayer(id, Texto, 3500, 5);
		format(Texto, sizeof(Texto), "[INFO]: Você avisou ao jogador %s pois: %s", Nome(id), motivo);
		SCM(playerid, CorInfo, Texto);
		if(Dados[id][Avisos] == 3)
		{
		    SCM(id, Vermelho, "[KICKADO]: Você foi kickado pois chegou ao 3° Aviso.");
		    SetTimerEx("KickEx", 1000, false, "i", id);
			format(Texto, sizeof(Texto), "[INFO]: O Jogador %s foi kickado pelo 3° Aviso do %s", Nome(id), Nome(playerid));
			SAM(CorTOB, Texto);
		}
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:reportar(playerid, params[], help)//43
{
    SendComandoText(playerid, "/reportar", params);
    new id, motivo[60];
    if(sscanf(params, "us[60]", id, motivo)) return SCM(playerid, Corsscanf, "[USO]: /reportar(rpt) <ID> <Motivo>");
    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	UltimoRpt ++;
	format(Texto, sizeof(Texto), "[RPT]: %s[ID:%d] reportou %s[ID:%d] Motivo: %s | Reporte Número: %d", Nome(playerid), playerid, Nome(id), id, motivo, UltimoRpt);
    SAM(Amarelo, Texto);
    SetPVarInt(playerid, "ID", playerid);
    SCM(playerid, Amarelo, "[RPT]: Você reportou com sucesso. Aguarde até um administrador ler o seu reporte.");
	return 1;
}

YCMD:lerrpt(playerid, params[], help)//44
{
	SendComandoText(playerid, "/lerrpt", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "i", UltimoRpt)) return SCM(playerid, Corsscanf, "[USO]: /lerrpt <ID Reporte>");
	    if(UltimoRpt == 0) return SCM(playerid, CorErro, "[ERRO]: Não existe reportes para ler.");
		Dados[playerid][RptLidos] ++;
	    format(Texto, sizeof(Texto), "[RPT]: O Administrador %s está lendo seu reporte.", Nome(playerid));
	    SCM(GetPVarInt(playerid, "ID"), Amarelo, Texto);
	    format(Texto, sizeof(Texto), "[RPT]: O %s Está lendo o reporte Número: %d.", Nome(playerid), UltimoRpt);
	    SAM(Amarelo, Texto);
	    UltimoRpt --;
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:verrptslidos(playerid, params[], help)//45
{
	new id;
	SendComandoText(playerid, "/verrptslidos", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /verreptslidos <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Gm] <= 0 || Dados[id][Admin] <= 0) return SCM(playerid, CorErro, "[ERRO]: O Jogador não pode ler reportes, então não pode ver quantos reportes ele fez.");
		format(Texto, sizeof(Texto), "Nome: %s | Reportes Lidos: %d", Nome(id), Dados[id][RptLidos]);
		SCM(playerid, -1, "*-------------------------------------------------*");
		SCM(playerid, CorInfo, Texto);
		SCM(playerid, -1, "*-------------------------------------------------*");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:kick(playerid, params[], help)//46
{
	SendComandoText(playerid, "/kick", params);
	new id, motivo[60];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][Cel] >= 1)
	{
	    if(sscanf(params, "us[60]", id, motivo)) return SCM(playerid, Corsscanf, "[USO]: /kick <ID> <Motivo>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s foi kickado pelo %s. Motivo: %s", Nome(id), Nome(playerid), motivo);
		SCMA(CorTOB, Texto);
		LimparChatJogador(id, 100);
		SetTimerEx("KickEx", 1000, false, "i", id);
		format(Texto, sizeof(Texto), "[INFO]: Você foi kickado por causa: %s", motivo);
		SCM(id, Vermelho, "*--------------------------------------*");
		SCM(id, Vermelho, Texto);
		SCM(id, Vermelho, "*--------------------------------------*");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:jetpack(playerid, params[], help)//47
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/jetpack", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	    SCM(playerid, CorInfo, "[INFO]: Você está usando um jetpack agora!");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:admins(playerid, params[], help)//48
{
	new text[500], contagem;
	for(new i = 0, j = GetMaxPlayers(); i < j; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Dados[i][Admin] >= 1 || Dados[i][Gm] >= 1)
	        {
	            format(Texto, sizeof(Texto), "{FFFFFF}%d. [%s]: %s ({00FF00}Level %d{FFFFFF})\n", i, Dados[i][Admin] >= 1 ? ("ADMIN") : ("GM"), Nome(i), Dados[i][Score]);
	            strcat(text, Texto);
	            contagem++;
	        }
	    }
	}
	SPD(playerid, DialogoAdmins, DSM, "Admins Onlines", text, "Ok", "");
	return 1;
}

YCMD:calar(playerid, params[], help)//49
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/calar", params);
	new id, tempo, motivo[60];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "uis[60]", id, tempo, motivo)) return SCM(playerid, Corsscanf, "[USO]: /calar <ID> <Minutos> <Motivo>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: ID Inválido!");
		if(tempo < 0 || tempo > 50) return SCM(playerid, CorErro, "[ERRO]: Coloque uma quantia de minuto entre 0 - 10");
		Dados[id][Calado] = true;
		new Sempo = tempo * 60000;
		SetTimerEx("DescalarJogador", 1000, true, "i", id);
		Dados[playerid][TempoCalado] = Sempo;
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s foi calado por %d minutos, pelo%s", Nome(id), tempo, Nome(playerid));
		SCMA(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
    return 1;
}

YCMD:comandos(playerid, params[], help)//50
{
	new Dialogo[52];
	strcat(Dialogo, "{FFFFFF}Comandos Gerais\n");
	strcat(Dialogo, "Comandos Admins\n");
	strcat(Dialogo, "Comandos Vips\n");
	SPD(playerid, DialogoComandos, DSL, "Comandos do TOB", Dialogo, "Selecionar", "Cancelar");
	return 1;
}

YCMD:nitro(playerid, params[], help)//51
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/nitro", params);
	if(Dados[playerid][Admin] >= 1 || Dados[playerid][Gm] >= 1)
	{
	    AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
	    SCM(playerid, CorInfo, "[INFO]: Nitro adicionado com sucesso!");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:calados(playerid, params[], help)//52
{
	new DialogoSS[500], contagem;
	for(new i = 0; i < GetMaxPlayers(); ++i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Dados[i][Calado] == 1)
	        {
	            format(Texto, sizeof(Texto), "{FFFFFF}%d. %s (%d) - {00FF00}Tempo: %d Minutos\n", i, Nome(i), Dados[i][Score], Dados[i][TempoCalado] / 60000);
	            strcat(DialogoSS, Texto);
	            contagem++;
	            SPD(playerid, DialogoCalados, DSM, "Calados:", Texto, "Ok", "");
	        }
	    }
	}
	if(contagem == 0)
	{
	    SCM(playerid, CorInfo, "[INFO]: Não existe pessoas caladas.");
	}
	return 1;
}



YCMD:congelar(playerid, params[], help)//53
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/congelar", params);
	new id, tempo;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "ui", id, tempo)) return SCM(playerid, Corsscanf, "[USO]: /congelar <ID> <Minutos>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(tempo < 0 || tempo > 60) return SCM(playerid, CorErro, "[ERRO]: Utilize minutos entre 0 - 60");
	    Dados[id][TempoCongelado] = tempo * 60000;
		SetTimerEx("Descongelar", tempo * 60000, false, "i", id);
	    TogglePlayerControllable(id, 0);
	    format(Texto, sizeof(Texto), "[INFO]: O %s deixou o %s Congelado, Por %d Minutos!", Nome(playerid), Nome(id), tempo * 60000);
		SRM(id, Texto);
		SRM(playerid, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:pagar(playerid, params[], help)//54
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/pagar", params);
	new id, quantidade;
	if(sscanf(params, "ui", id, quantidade)) return SCM(playerid, Corsscanf, "[USO]: /pagar <ID> <Quantidade>");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	if(quantidade > GetPlayerMoney(playerid)) return SCM(playerid, CorErro, "[ERRO]: Você não possui esta quantia.");
	if(quantidade < 0 || quantidade > 1000000) return SCM(playerid, CorErro, "[ERRO]: Use quantias de 0 - 1000000");
	Dados[id][Dinheiro] += quantidade;
	Dados[playerid][Dinheiro] -= quantidade;
	format(Texto, sizeof(Texto), "[INFO]: O %s deu %s de dinheiro para %s", Nome(playerid), quantidade, Nome(id));
	SCM(playerid, CorSet, Texto);
	SCM(id, CorSet, Texto);
	return 1;
}

YCMD:regras(playerid, params[], help)//55
{
	new Dialogo[622];
	strcat(Dialogo, "           {FFFFFF}Regras do servidor \n\n");
	strcat(Dialogo, "{FFFF00}1. {FFFFFF}Não mate pessoas de sua própria torcida.\n");
	strcat(Dialogo, "{FFFF00}2. {FFFFFF}Não use hacks, poderá ser banido.\n");
	strcat(Dialogo, "{FFFF00}3. {FFFFFF}Não crie fakes, poderá ser banid.\n");
	strcat(Dialogo, "{FFFF00}4. {FFFFFF}Não faça DB's, poderá ser preso.\n");
	strcat(Dialogo, "{FFFF00}5. {FFFFFF}Não abuse de bugs, poderá ser banido.\n");
	strcat(Dialogo, "{FFFF00}6. {FFFFFF}Não atrapalhe os Admins/Gms por nada, poderá ser kickado.\n");
	strcat(Dialogo, "{FFFF00}7. {FFFFFF}Não seja uma pessoa chata, isto é apenas um jogo leve na diversão.\n\n");
	strcat(Dialogo, "{FFFFFF}Para mais ajudas use os comandos: /comandos \n");
	strcat(Dialogo, "{FFFFFF}Acesse o nosso site para mais informações: www.tobsite.com");
	SPD(playerid, DialogoRegras, DSM, "Regras do TOB", Dialogo, "Ok", "");
	return 1;
}


/*YCMD:ptnick(playerid, params[], help)//57
{
	if(help) return SCM(playerid, CorInfo, "[INFO]: Serve para permitir outros jogadores trocar de nick.");
	new id;
	SendComandoText(playerid, "/ptnick", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /ptnick <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Permissao] == 1) return SCM(playerid, CorErro, "[ERRO]: Este jogador já tem permissão para trocar o seu nick.");
		Dados[id][Permissao] = true;
		format(Texto, sizeof(Texto), "[INFO]: O %s permitiu a troca de seu nick. use /trocarnick para efetuar a troca.", Nome(playerid));
		SCM(id, CorInfo, Texto);
		SCM(playerid, Amarelo, "[INFO]: Você permitiu que o jogador trocasse o nick com sucesso.");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}*/

YCMD:meustatus(playerid, params[], help)//58
{
	new Dialogoss[1000];
	new tempo = gettime();
	new tmres = Dados[playerid][TmpVip] - tempo;
	new diasvip = tmres / 60 / 60 / 24;
	new horasvip = tmres / 60 / 60;
	horasvip = horasvip - (diasvip*24);
	format(Texto, sizeof(Texto), "{FFFFFF}Status de: {D9C2A3}%s\n\n", Nome(playerid));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Score: {D9C2A3}%i\n", GetPlayerScore(playerid));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Dinheiro: {D9C2A3}%i\n", GetPlayerMoney(playerid));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Gold: {D9C2A3}%i\n", Dados[playerid][Gold]);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Matou: {D9C2A3}%i\n", Dados[playerid][Matou]);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Mortes: {D9C2A3}%i\n", Dados[playerid][Mortes]);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Skin-ID: {D9C2A3}%i\n", GetPlayerSkin(playerid));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Logou: {D9C2A3}%i vezes\n", Dados[playerid][Logou]);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Torcida: {D9C2A3}%s\n", GetTorcidaNome[Dados[playerid][Torcida]]);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Vip: {D9C2A3}%s\n", Dados[playerid][Vip] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Tempo vip: {D9C2A3}%d Dias %d Horas\n\n", Dados[playerid][Vip] == 1 ? diasvip : 0, Dados[playerid][Vip] == 1 ? horasvip : 0);
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Cargos:\n\n");
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}GM: {D9C2A3}%s\n", Dados[playerid][Gm] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Admin: {D9C2A3}%s\n", Dados[playerid][Admin] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Presidente: {D9C2A3}%s\n", Dados[playerid][Pres] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Vice-Presidente: {D9C2A3}%s\n", Dados[playerid][VPres] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Organizador: {D9C2A3}%s\n", Dados[playerid][Orgi] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Puxador: {D9C2A3}%s\n\n", Dados[playerid][Pux] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Organizações:\n\n");
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Coronel: {D9C2A3}%s\n", Dados[playerid][Cel] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Batalhão: {D9C2A3}%s\n", Dados[playerid][Btl] == 1 ? ("Sim") : ("Não"));
	strcat(Dialogoss, Texto);

	SPD(playerid, DialogoStatus, DSM, "Status", Dialogoss, "Ok", "");
	return 1;
}

YCMD:vercomandos(playerid, params[], help)//60
{
    SendComandoText(playerid, "/vercomandos", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		Dados[playerid][BloqVC] = Dados[playerid][BloqVC] == 1 ? false : true;
		format(Texto, sizeof(Texto), "[INFO]: Agora %s", Dados[playerid][BloqVC] == 0 ? ("você está vendo os comandos que as pessoas digitam.") : ("você não está mais vendo os comandos que as pessoas digitam."));
		SCM(playerid, CorInfo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:veiculos(playerid, params[], help)//61
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/veiculos", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Vip] >= 1 || Dados[playerid][Orgi] >= 1 || Dados[playerid][Pux] >= 1 || Dados[playerid][Pres] >= 1 || Dados[playerid][VPres] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
		ShowPlayerDialog(playerid, DialogoCarros, DIALOG_STYLE_INPUT, "Veículos", "Existe 2 Modos para pegar um veículo\n\n1° Modo: Digite o nome dele(Não precisa está corretinho)\n2°Modo: Digite o número do carro que quiser.", "Confirmar", "Cancelar");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:armas(playerid, params[], help)//62
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/armas", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		ShowPlayerDialog(playerid, DialogoArmas, DSI, "Armas", "Coloque em baixo o ID da arma que você quer.\nExiste várias armas que estão proibidas, por isso alguns ID não funcionará.", "Confirmar", "Cancelar");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:settempo(playerid, params[], help)//63
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/settempo", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
		new hora;
		if(sscanf(params, "i", hora)) return SCM(playerid, Corsscanf, "[USO]: /settime <Horas>");
		if(hora < 0 || hora > 24) return SCM(playerid, CorErro, "[ERRO]: Utilize números de 0 - 24");
		SetWorldTime(hora);
		SGM(Azul, "[INFO]: A Hora foi alterada com sucesso.");
	}
	return 1;
}

YCMD:cone(playerid, params[], help)//64
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/cone", params);
	new Float:Pos[4];
	if(Dados[playerid][Btl] >= 1 || Dados[playerid][Cel] >= 1)
	{
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		GetPlayerFacingAngle(playerid, Pos[3]);
		switch(Dados[playerid][Cones])
		{
		    case 0:
		    {
		        Cone[0][playerid] = CreateDynamicObject(1237, Pos[0], Pos[1], Pos[2]-1.0, 0.0, 0.0, Pos[3]);
				SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+3);
				format(Texto, sizeof(Texto), "[INFO]: O %s criou um cone.", Nome(playerid));
				SRM(CorInfo, Texto);
				SCM(playerid, CorInfo, "[INFO]: Cone 1 criado com sucesso");
				Dados[playerid][Cones] ++;
				return 1;
		    }
		    case 1:
		    {
		    	Cone[1][playerid] = CreateDynamicObject(1237, Pos[0], Pos[1], Pos[2]-1.0, 0.0, 0.0, Pos[3]);
				SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+3);
				format(Texto, sizeof(Texto), "[INFO]: O %s criou um cone.", Nome(playerid));
				SRM(CorInfo, Texto);
				SCM(playerid, CorInfo, "[INFO]: Cone 2 criado com sucesso");
				Dados[playerid][Cones] ++;
				return 1;
		    }
		    case 2:
			{
				Cone[2][playerid] = CreateDynamicObject(1237, Pos[0], Pos[1], Pos[2]-1.0, 0.0, 0.0, Pos[3]);
				SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+3);
				format(Texto, sizeof(Texto), "[INFO]: O %s criou um cone.", Nome(playerid));
				SRM(CorInfo, Texto);
				SCM(playerid, CorInfo, "[INFO]: Cone 3 criado com sucesso");
				Dados[playerid][Cones] ++;
				return 1;
			}
			case 3:
			{
				Cone[3][playerid] = CreateDynamicObject(1237, Pos[0], Pos[1], Pos[2]-1.0, 0.0, 0.0, Pos[3]);
				SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+3);
				format(Texto, sizeof(Texto), "[INFO]: O %s criou um cone.", Nome(playerid));
				SRM(CorInfo, Texto);
				SCM(playerid, CorInfo, "[INFO]: Cone 4 criado com sucesso");
				Dados[playerid][Cones] ++;
				return 1;
			}
			case 4:
			{
				Cone[4][playerid] = CreateDynamicObject(1237, Pos[0], Pos[1], Pos[2]-0.9, 0.0, 0.0, Pos[3]);
				SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]+3);
				format(Texto, sizeof(Texto), "[INFO]: O %s criou um cone.", Nome(playerid));
				SRM(CorInfo, Texto);
				SCM(playerid, CorInfo, "[INFO]: Cone 5 criado com sucesso");
				Dados[playerid][Cones] ++;
				return 1;
			}
			default:
			{
				 SendClientMessage(playerid, CorInfo, "[INFO]: Você já criou 5 cones, use /rcones para remover-los.");
			}
		}
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:rcones(playerid, params[], help)//65
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/rcones", params);
	if(Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
	    if(Dados[playerid][Cones] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não criou nenhum Cone.");
		RCones(playerid);
		SendClientMessage(playerid, CorInfo, "[INFO]: Todos seus cones foram retirados com sucesso.");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:descongelar(playerid, params[], help)//66
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/descongelar", params);
	new id;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /descongelar <ID>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][TempoCongelado] == 0) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está mais congelado!");
	    TogglePlayerControllable(id, 1);
		format(Texto, sizeof(Texto), "[INFO]: O %s deixou o %s descongelado!", Nome(playerid), Nome(id));
		SRM(id, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:tunar(playerid, params[], help)//67
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/tunar", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Vip] >= 1)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, CorErro, "[ERRO]: Você não está em um Veículo");
    	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SCM(playerid, CorErro, "[ERRO]: Você não é o motorista.");
		SPD(playerid, DialogoTunar, DSL, "Escolhe sua opção Tunning:", "{FFFFFF}Pintar Carro\nPaints Jobs\nRodas\nNitro\nNeon", "Selecionar", "Cancelar");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:contagem(playerid, params[], help)//68
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
    SendComandoText(playerid, "/contagem", params);
	new tempo;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "i", tempo)) return SCM(playerid, Corsscanf, "[USO]: /contagem <Segundos>");
	    if(tempo < 0 || tempo > 30) return SCM(playerid, CorErro, "[ERRO]: Escolha entre 0 - 30 Segundos.");
	    TmpContagem = SetTimer("Contar", 1000, true);
	    Dados[playerid][Contagem] = tempo * 1000;
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:reparar(playerid, params[], help)//69
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/reparar", params);
	if(GetPlayerMoney(playerid) < 50) return SCM(playerid, CorErro, "[ERRO]: Você não tem dinheiro suficiente");
	Dados[playerid][Dinheiro] -= 50;
	RepairVehicle(GetPlayerVehicleID(playerid));
	SCM(playerid, CorSet, "[INFO]: Carro reparado com sucesso. (R$50)");
	return 1;
}

YCMD:rcs(playerid, params[], help)//70
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/rcs", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    for(new i = 0; i < MAX_VEHICLES; ++i)
	    {
	        for(new s = 0; s < GetMaxPlayers(); ++s)
	        {
	            if(!IsPlayerInAnyVehicle(s))
	            {
	                SetVehicleToRespawn(i);
	            }
	        }
	    }
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:reparartodos(playerid, params[], help)//71
{
    SendComandoText(playerid, "/reparartodos", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    for(new i = 0; i < MAX_VEHICLES; i++)
	    {
	        RepairVehicle(i);
	    }
		SGM(CorTOB, "[T.O.B]: Todos os carros reparados com sucesso.");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:vidatodos(playerid, params[], help)//72
{
	SendComandoText(playerid, "/vidatodos", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    for(new i = 0; i < GetMaxPlayers(); ++i)
	    {
	        SetPlayerHealth(i, 100);
	    }
	    format(Texto, sizeof(Texto), "[T.O.B]: Todos os jogadores tiverem sua vidas restauradas pelo %s", Nome(playerid));
		SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:setvidatodos(playerid, params[], help)//73
{
	new quantidade;
	SendComandoText(playerid, "/setvidatodos", params);
	if(Dados[playerid][Gm] >= 1)
	{
		if(sscanf(params, "i", quantidade)) return SCM(playerid, Corsscanf, "[USO]: /setvidatodos <Quantidade>");
		if(quantidade < 0 || quantidade > 100) return SCM(playerid, Corsscanf, "[ERRO]: Use quantias entre 0 - 100");
	    for(new i = 0, j = GetMaxPlayers(); i < j; ++i)
	    {
			SetPlayerHealth(i, quantidade);
	    }
	    format(Texto, sizeof(Texto), "[T.O.B]: Todos os jogadores tiverem suas vidas setadas a: %d pelo %s", quantidade, Nome(playerid));
	    SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:matar(playerid, params[], help)//74
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	new id;
	SendComandoText(playerid, "/matar", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /matar <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
		SetPlayerHealth(id, 0);
		format(Texto, sizeof(Texto), "[INFO]: %s matou %s", Nome(playerid), Nome(id));
		SRM(id, Texto);
		format(Texto, sizeof(Texto), "[INFO]: Você matou %s.", Nome(id));
		SCM(playerid, CorSet, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:irsede(playerid, params[], help)//75
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/irsede", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    SpawnPlayer(playerid);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:mochila(playerid, params[], help)//76
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	new Dialogoss[500];
	SendComandoText(playerid, "/mochila", params);
 	format(Texto, sizeof(Texto), "{FFFFFF}Maconha: {FFFF00}%i {FFFFFF}- ({00FF00}2 Cliques para Usar{FFFFFF})\n", Dados[playerid][Maconha]);
  	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Crack: {FFFF00}%i {FFFFFF}- ({00FF00}2 Cliques para Usar{FFFFFF})\n", Dados[playerid][Crack]);
  	strcat(Dialogoss, Texto);
  	format(Texto, sizeof(Texto), "{FFFFFF}Heroina: {FFFF00}%i {FFFFFF}- ({00FF00}2 Cliques para Usar{FFFFFF})\n", Dados[playerid][Heroina]);
  	strcat(Dialogoss, Texto);
	format(Texto, sizeof(Texto), "{FFFFFF}Cocaina: {FFFF00}%i {FFFFFF}- ({00FF00}2 Cliques para Usar{FFFFFF})\n", Dados[playerid][Cocaina]);
  	strcat(Dialogoss, Texto);
  	format(Texto, sizeof(Texto), "{FFFFFF}Sinalizador: {FFFF00}%i {FFFFFF}- ({00FF00}2 Cliques para Usar{FFFFFF})\n", Dados[playerid][Sinalizador]);
  	strcat(Dialogoss, Texto);
  	SPD(playerid, DialogoMochila, DSL, "Mochila", Dialogoss, "Selecionar", "Cancelar");
	return 1;
}

YCMD:sinalizador(playerid, params[], help)//77
{
    new skin = GetPlayerSkin(playerid);
	SendComandoText(playerid, "/sinalizador", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    if(Acendido[playerid] == 1) return SCM(playerid, CorErro, "[ERRO]: Você já acendeu um sinalizador digite /apagar para apagar o mesmo.");
	    if(Dados[playerid][Sinalizador] <= 0) return SCM(playerid, CorErro, "[ERRO]: Você não tem sinalizador.");
	    if(skin == 230) return SCM(playerid, CorErro, "[ERRO]: Esta skin é inapropriada para acender um sinalizador.");
	    format(Texto, sizeof(Texto), "[INFO]: %s Acendeu um sinalizador.", Nome(playerid));
	    SRM(playerid, Texto);
	    Dados[playerid][Sinalizador] --;
	    SetPlayerAttachedObject(playerid, 3, 345, 1, 0.257000, 0.022998, -0.016000, -1.599998, 0.399990, -98.999870, 0.953000, 1.000000, 1.000000, 0, 0);
		Acendido[playerid] = 1;
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:apagar(playerid, params[], help)//78
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/apagar", params);
 	if(Acendido[playerid] == 0) return SCM(playerid, CorErro, "[ERRO]: Você não acendeu nenhum sinalizador.");
 	if(!IsPlayerAttachedObjectSlotUsed(playerid, 3)) return SCM(playerid, CorErro, "[ERRO]: Você não está usando nenhum sinalizador.");
 	format(Texto, sizeof(Texto), "[INFO]: %s Apagou o seu sinalizador.", Nome(playerid));
 	SRM(playerid, Texto);
 	RemovePlayerAttachedObject(playerid, 3);
 	Acendido[playerid] = 0;
	return 1;
}

YCMD:setclima(playerid, params[], help)//79
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/setclima", params);
	new tempo;
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "i", tempo)) return SCM(playerid, Corsscanf, "[USO]: /settempo <Tempo>");
	    if(tempo < 0 || tempo > 1000) return SCM(playerid, CorErro, "[ERRO]: Use quantias de tempo entre 0 - 1000");
	    SetWeather(tempo);
		format(Texto, sizeof(Texto), "[T.O.B]: Clima alterado para o: %i", tempo);
		SGM(CorTOB, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:mudarluta(playerid, params[], help)//80
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SPD(playerid, DialogoMudarLuta, DSL, "Mude sua Luta", "{FFFFFF}Boxe\nKungFu\nBriga de Rua\nAgarra e Chute\nNormal", "Selecionar", "Cancelar");
	return 1;
}


YCMD:vender(playerid, params[], help)//81
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/vender", params);
	if(Dados[playerid][Btl] >= 1 || Dados[playerid][Cel] >= 1) return SCM(playerid, CorErro, "[ERRO]: Você faz parte da policia, não pode vender drogas.");
	if(Dados[playerid][Profissao] == 1)
	{
		new tipo[50], id, quantia, valor, Float:Pos[3];
		if(sscanf(params, "s[50]uii", tipo, id, quantia, valor)) return SCM(playerid, Corsscanf, "[USO]: /vender <maconha|crack|heroina|cocaina> <ID> <Quantia> <Valor>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(quantia < 0 || quantia > 100) return SCM(playerid, CorErro, "[ERRO]: Você só pode vender quantias de 0 - 100");
	    if(valor < 0 || valor > 500) return SCM(playerid, CorErro, "[ERRO]: Você só pode vender com valores entre 0 - 500");
		GetPlayerPos(id, Pos[0], Pos[1], Pos[2]);
		if(!IsPlayerPoint(playerid, 5.0, Pos[0], Pos[1], Pos[2])) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está perto de você.");
	    if(valor > GetPlayerMoney(id)) return SCM(playerid, CorErro, "[ERRO]: Este jogador não tem dinheiro suficiente para comprar este valor.");
		if(strcmp(tipo, "maconha", true) == 0)
		{
		    if(Dados[playerid][Maconha] > 0)
		    {

				if(quantia > Dados[playerid][Maconha]) return SCM(playerid, CorErro, "[ERRO]: Você não possui tudo isso de maconha.");
				format(Texto, sizeof(Texto), "{FFFFFF}O Jogador {FFFF00}%s {FFFFFF}está lhe oferecendo Maconha\n\nValor: {FFFF00}R$%d{FFFFFF} | Quantia: {FFFF00}%d\n\n{FFFFFF}Deseja aceitar?", Nome(playerid), valor, quantia);
				SPD(id, DialogoVenderMaconha, DSM, "Vender drogas.", Texto, "Aceitar", "Recusar");
				SCM(playerid, Amarelo, "[INFO]: Você ofereceu a ele com sucesso, espere até ele aceitar ou recusar.");
				SetPVarInt(id, "IDTrafi", playerid);
				SetPVarInt(id, "ValorDroga", valor);
				SetPVarInt(id, "Quantia", quantia);
			}
		    else return SCM(playerid, CorErro, "[ERRO]: Você não tem maconha suficiente.");
		}
		if(strcmp(tipo, "crack", true) == 0)
		{
		    if(Dados[playerid][Crack] > 0)
		    {
		        if(quantia > Dados[playerid][Crack]) return SCM(playerid, CorErro, "[ERRO]: Você não possui tudo isso de crack.");
				format(Texto, sizeof(Texto), "{FFFFFF}O Jogador {FFFF00}%s{FFFFFF} está lhe oferecendo Crack\n\nValor: {FFFF00}R$%d | {FFFFFF}Quantia: {FFFF00}%d\n\n{FFFFFF}Deseja aceitar?", Nome(playerid), valor, quantia);
				SPD(id, DialogoVenderCrack, DSM, "Vender drogas.", Texto, "Aceitar", "Recusar");
				SCM(playerid, Amarelo, "[INFO]: Você ofereceu a ele com sucesso, espere até ele aceitar ou recusar.");
				SetPVarInt(id, "IDTrafi", playerid);
				SetPVarInt(id, "ValorDroga", valor);
				SetPVarInt(id, "Quantia", quantia);
		    }
		    else return SCM(playerid, CorErro, "[ERRO]: Você não tem crack suficiente.");
		}
		if(strcmp(tipo, "heroina", true) == 0)
		{
		    if(Dados[playerid][Heroina] > 0)
		    {
				if(quantia > Dados[playerid][Heroina]) return SCM(playerid, CorErro, "[ERRO]: Você não possui tudo isso de heroina.");
				format(Texto, sizeof(Texto), "{FFFFFF}O Jogador {FFFF00}%s{FFFFFF} está lhe oferecendo heroína\n\nValor: {FFFF00}R$%d | {FFFFFF}Quantia: {FFFF00}%d\n\n{FFFFFF}Deseja aceitar?", Nome(playerid), valor, quantia);
				SPD(id, DialogoVenderHeroina, DSM, "Vender drogas.", Texto, "Aceitar", "Recusar");
				SCM(playerid, Amarelo, "[INFO]: Você ofereceu a ele com sucesso, espere até ele aceitar ou recusar.");
				SetPVarInt(id, "IDTrafi", playerid);
				SetPVarInt(id, "ValorDroga", valor);
				SetPVarInt(id, "Quantia", quantia);
		    }
		    else return SCM(playerid, CorErro, "[ERRO]: Você não tem heroina suficiente.");
		}
		if(strcmp(tipo, "cocaina", true) == 0)
		{
		    if(Dados[playerid][Cocaina] > 0)
		    {
		        if(quantia > Dados[playerid][Cocaina]) return SCM(playerid, CorErro, "[ERRO]: Você não possui tudo isso de cocaina.");
				format(Texto, sizeof(Texto), "{FFFFFF}O Jogador {FFFF00}%s{FFFFFF} está lhe oferecendo cocaína\n\nValor: {FFFF00}R$%d |{FFFFFF} Quantia: {FFFF00}%d\n\n{FFFFFF}Deseja aceitar?", Nome(playerid), valor, quantia);
				SPD(id, DialogoVenderCocaina, DSM, "Vender drogas.", Texto, "Aceitar", "Recusar");
				SCM(playerid, Amarelo, "[INFO]: Você ofereceu a ele com sucesso, espere até ele aceitar ou recusar.");
				SetPVarInt(id, "IDTrafi", playerid);
				SetPVarInt(id, "ValorDroga", valor);
				SetPVarInt(id, "Quantia", quantia);
		    }
		    else return SCM(playerid, CorErro, "[ERRO]: Você não tem cocaina suficiente.");
		}
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:sairemprego(playerid, params[], help)//82
{
    if(Dados[playerid][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Você está preso e não pode efetuar comandos.");
	SendComandoText(playerid, "/sairemprego", params);
	if(Dados[playerid][Profissao] != 0) return SCM(playerid, CorErro, "[ERRO]: Você não está em um trabalho.");
	Dados[playerid][Profissao] = 0;
	Dados[playerid][Salario] = 0;
	SCM(playerid, Amarelo, "[INFO]: Você saiu do emprego com sucesso.");
	return 1;
}

YCMD:presos(playerid, params[], help)//83
{
	new Dialogoss[500], contagem;
	strcat(Dialogoss, "Jogadores onlines presos:\n\n");
	for(new i = 0; i < GetMaxPlayers(); ++i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Dados[i][Preso] == 1)
	        {
	            new status = Dados[playerid][TempoPreso];
	            format(Texto, sizeof(Texto), "{FFFFFF}%i. %s (%i) - Tempo: %d Segundos\n", i, Nome(i), Dados[i][Score], status / 1000);
	            strcat(Dialogoss, Texto);
	            contagem++;
	            SPD(playerid, DialogoPresos, DSM, "Presos", Dialogoss, "Ok", "");
	        }
	    }
	}
	if(contagem == 0)
	{
	    SCM(playerid, CorInfo, "[INFO]: Não existe presos online.");
	}
	return 1;
}

YCMD:prender(playerid, params[], help)//84
{
	SendComandoText(playerid, "/prender", params);
	new id, tempo, motivo[50];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Cel] >= 1)
	{
	    if(sscanf(params, "uis[50]", id, tempo, motivo)) return SCM(playerid, Corsscanf, "[USO]: /prender <ID> <Minutos> <Motivo>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Preso] == 1) return SCM(playerid, CorErro, "[ERRO]: Este jogador já está preso.");
	    if(tempo < 0 || tempo > 60) return SCM(playerid, CorErro, "[ERRO]: Escolha minutos entre 0 - 60.");
	    format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s foi preso pelo %s. Minutos: %d | Motivo: %s", Nome(id), Nome(playerid), tempo, motivo);
	    SGM(CorTOB, Texto);
	    format(Texto, sizeof(Texto), "[INFO]: Você foi preso pelo %s. Minutos: %d | Motivo: %s", Nome(playerid), tempo, motivo);
		SCM(id, Amarelo, Texto);
		format(Texto, sizeof(Texto), "[INFO]: Você prendeu com sucesso o %s. Minutos: %d | Motivo: %s", Nome(id), tempo, motivo);
		SCM(playerid, Amarelo, Texto);
		PrenderJogador(id, tempo);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:soltar(playerid, params[], help)//85
{
    SendComandoText(playerid, "/soltar", params);
	new id, motivo[50];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Cel] >= 1)
	{
	    if(sscanf(params, "us[50]", id, motivo)) return SCM(playerid, Corsscanf, "[USO]: /soltar <ID> <Motivo>");
	    if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
	    if(Dados[id][Preso] == 0) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está preso.");
		format(Texto, sizeof(Texto), "[T.O.B]: O Jogador %s foi solto pelo %s. Motivo: %s", Nome(id), Nome(playerid), motivo);
		SGM(CorTOB, Texto);
		format(Texto, sizeof(Texto), "[INFO]: Você foi solto pelo %s. Motivo: %s", Nome(playerid), motivo);
		SCM(id, Amarelo, Texto);
		SCM(playerid, Amarelo, "[INFO]: Você soltou o jogador com sucesso.");
		Dados[id][Preso] = false;
		Dados[id][TempoPreso] = 0;
		OnPlayerSpawn(id);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:setprocuradotodos(playerid, params[], help)//86
{
	SendComandoText(playerid, "/setprocuradotodos", params);
	new level;
	if(Dados[playerid][Gm] >= 1)
	{
	    if(sscanf(params, "i", level)) return SCM(playerid, Corsscanf, "[USO]: /setprocuradotodos <Level>");
	    if(level < 0 || level > 6) return SCM(playerid, CorErro, "[ERRO]: Use leveis de 0 - 6");
	    for(new i = 0; i < GetMaxPlayers(); ++i)
	    {
	        if(IsPlayerConnected(i))
			{
				SetPlayerWantedLevel(i, level);
				format(Texto, sizeof(Texto), "[T.O.B]: O %s setou as estrelas de todo mundo para %i", Nome(playerid), level);
				SCM(i, CorTOB, Texto);
			}
	    }
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:limparchat(playerid, params[], help)//87
{
	SendComandoText(playerid, "/limparchat", params);
	new linhas;
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1)
	{
	    if(sscanf(params, "i", linhas)) return SCM(playerid, Corsscanf, "[USO]: /limparchat <Linhas>");
	    if(linhas < 0 || linhas > 100) return SCM(playerid, CorErro, "[ERRO]: Use linhas de 0 - 100 para não ultrapassar os limites");
	    LimparChatGeral(linhas);
	    SGM(CorTOB, "[T.O.B]: Chat limpado com sucesso.");
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:virar(playerid, params[], help)//88
{
    new Float:x = 0.0, Float:y = 0.0, Float:z = 0.0;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, CorErro, "[ERRO]: Você não está em um veículo.");
	SetCameraBehindPlayer(playerid);
	GetPlayerPos(playerid, x, y, z);
	SetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
	SetVehicleZAngle(GetPlayerVehicleID(playerid), 0.0);
	return 1;
}

YCMD:gov(playerid, params[], help)//89
{
	SendComandoText(playerid, "/gov", params);
	new texto[40], Float:x, Float:y, Float:z;
	if(Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1)
	{
	    if(sscanf(params, "s[40]", texto)) return SCM(playerid, Corsscanf, "[USO]: /gov <Texto>");
	    GetPlayerPos(playerid, x, y, z);
	    for(new i = 0; i < GetMaxPlayers(); ++i)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerPoint(i, 30.0, x, y, z))
	            {
	                SCM(i, Amarelo, texto);
	            }
	        }
	    }
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:desarmartodos(playerid, params[], help)//91
{
    SendComandoText(playerid, "/desarmartodos", params);
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1 || Dados[playerid][Pres] >= 1)
	{
		for(new i = 0, j = GetMaxPlayers(); i < j; ++i)
		{
		    if(IsPlayerPoint(i, 30.0, Pos[0], Pos[1], Pos[2]))
		    {
		        ResetPlayerWeapons(i);
				format(Texto, sizeof(Texto), "[INFO]: O %s desarmou todos pertos.", Nome(playerid));
				SCM(i, Amarelo, Texto);
		    }
		}
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:blindar(playerid, params[], help)//92
{
	SendComandoText(playerid, "/blindar", params);
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Vip] >= 1)
	{
		Blindado[playerid] = Blindado[playerid] == 0 ? 1 : 0;
		format(Texto, sizeof(Texto), "[INFO]: Você %s", Blindado[playerid] == 0 ? ("desativou o blindamento") : ("ativou o blindamento"));
		SCM(playerid, Amarelo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:desarmar(playerid, params[], help)//93
{
	SendComandoText(playerid, "/desarmar", params);
	new id, Float:Pos[3];
	if(Dados[playerid][Gm] >= 1 || Dados[playerid][Admin] >= 1 || Dados[playerid][Cel] >= 1 || Dados[playerid][Btl] >= 1 || Dados[playerid][Pres] >= 1)
	{
		if(sscanf(params, "u", id)) return SCM(playerid, Corsscanf, "[USO]: /desarmar <ID>");
		if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador inválido.");
		GetPlayerPos(id, Pos[0], Pos[1], Pos[2]);
		if(!IsPlayerPoint(playerid, 30.0, Pos[0], Pos[1], Pos[2])) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está próximo a você.");
		ResetPlayerWeapons(id);
		format(Texto, sizeof(Texto), "[INFO]: O %s desarmou o %s.", Nome(playerid), Nome(id));
		SRM(playerid, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:sugestao(playerid, params[], help)//94
{
    SendComandoText(playerid, "/sugestao", params);
    SPD(playerid, DialogoSugestao, DSI, "Reporte um bug para nós.", "{FFFFFF}Acha que está faltando alguma coisa em nosso servidor? coloque sua sugestão, talvez poderá ser adicionada!\n\nA Sua opinião é a fonte do nosso trabalho e inspiração.", "Confirmar", "Cancelar");
	return 1;
}

YCMD:bug(playerid, params[], help)//95
{
    SendComandoText(playerid, "/bug", params);
    SPD(playerid, DialogoBugs, DSI, "Reporte um bug para nós.", "{FFFFFF}Achou um bug? então é só você colocar oque exatamente acontece para nós concertar o bug.\n\nA Sua opinião é a fonte do nosso trabalho e inspiração.", "Confirmar", "Cancelar");
	return 1;
}

YCMD:sorte(playerid, params[], help)//99
{
	SendComandoText(playerid, "/sorte", params);
	if(SorteLiberado[playerid] == false) return SCM(playerid, CorErro, "[ERRO]: Você só pode fazer isso no próximo Pagamento ou o comando ser liberado!");
	new randomm = RandomP(1, 100), total = RandomP(1, randomm), dinheiro;
	dinheiro = total*100/10*3;
	if(total <= 95)
	{
	    dinheiro *= 2;
		Dados[playerid][Dinheiro] += dinheiro;
		format(Texto, sizeof(Texto), "[SORTE]: O Número sorteado para você foi %d. Você ganhou: R$%d.", total, dinheiro);
		SCM(playerid, Verde, Texto);
	}
	else
	{
		dinheiro *= 5;
		Dados[playerid][Dinheiro] += dinheiro;
	    format(Texto, sizeof(Texto), "[SORTE]: Você foi um grande sortudo, então ganhou o valor : R$%d. Número sorteado: %d", dinheiro, total);
		SCM(playerid, Verde, Texto);
	    format(Texto, sizeof(Texto), "[SORTE]: Jogador Sortudo!! %s Ganhou: R$%d com o Número sorteado: %d", Nome(playerid), dinheiro, total);
		SGM(Amarelo, Texto);
	}
	SorteLiberado[playerid] = false;
	return 1;
}

YCMD:liberarsorte(playerid, params[], help)//100
{
    SendComandoText(playerid, "/liberarsorte", params);
	if(Dados[playerid][Gm] >= 1)
	{
	    for(new i = 0, j = GetMaxPlayers(); i < j; ++i)
	    {
	        if(IsPlayerConnected(i))
	        {
	            SorteLiberado[i] = true;
				format(Texto, sizeof(Texto), "[T.O.B]: O %s liberou para todos o Comando /sorte, tente sua sorte!", Nome(playerid));
				SCM(i, CorTOB, Texto);
	        }
	    }
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:liberarpagamento(playerid, params[], help)//101
{
    SendComandoText(playerid, "/liberarpagamento", params);
    if(Dados[playerid][Gm] >= 1)
    {
		format(Texto, sizeof(Texto), "[T.O.B]: O %s liberou o pagamento para todo mundo!", Nome(playerid));
		SGM(CorTOB, Texto);
		Pagamento();
    }
    else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:descalar(playerid, params[], help)//102
{
	new id, motivo[50];
	SendComandoText(playerid, "/descalar", params);
    if(Dados[playerid][Gm] >= 1)
    {
        if(sscanf(params, "us[50]", id, motivo)) return SCM(playerid, Corsscanf, "[USO]: /descalar <ID> <Motivo>");
        if(id == INVALID_PLAYER_ID) return SCM(playerid, CorErro, "[ERRO]: Jogador Inválido.");
        if(Dados[id][Calado] == 0) return SCM(playerid, CorErro, "[ERRO]: Este jogador não está calado.");
        Dados[id][Calado] = false;
        Dados[id][TempoCalado] = 0;
        format(Texto, sizeof(Texto), "[T.O.B]: O %s descalou o jogador %s. Motivo: %s", Nome(playerid), Nome(id), motivo);
        SGM(CorTOB, Texto);
        SCM(playerid, Amarelo, "[INFO]: Você descalou o jogador com sucesso.");
        SCM(id, Amarelo, "[INFO]: Você foi descalado com sucesso.");
    }
    else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:golds(playerid, params[], help)//103
{
	new Dialogo[600];
	SendComandoText(playerid, "/golds", params);
    strcat(Dialogo, "{FFFFFF}Nascer com Colete: [{FFFF00}200 Golds{FFFFFF}] [{FFFF00}30 Dias{FFFFFF}]\n");
    strcat(Dialogo, "{FFFFFF}Nascer com Armas:  [{FFFF00}150 Golds{FFFFFF}] [{FFFF00}30 Dias{FFFFFF}]\n");
	strcat(Dialogo, "{FFFFFF}Transferir {0000FF}Golds\n");
	strcat(Dialogo, "{FFFFFF}Comprar VIP:       [{FFFF00}1000 Golds{FFFFFF}] [{FFFF00}30 Dias{FFFFFF}]\n");
	strcat(Dialogo, "{FFFFFF}Trocar {0000FF}Dinheiro{FFFFFF} por {0000FF}Gold: {FFFFFF}[{FFFF00}R$10000 por 1 Gold{FFFFFF}]\n");
    strcat(Dialogo, "{FFFFFF}Trocar {0000FF}Score{FFFFFF} por {0000FF}Gold: {FFFFFF}[{FFFF00}10 Scores por 1 Gold{FFFFFF}]\n");
	format(Texto, sizeof(Texto), "{FFFFFF}Golds: [{FFFF00}%d{FFFFFF}]\n", Dados[playerid][Gold]);
    SPD(playerid, DialogoGolds, DSL, Texto, Dialogo, "Selecionar", "Cancelar");
	return 1;
}

YCMD:vertempovip(playerid, params[], help)//104
{
	if(Dados[playerid][Vip] >= 1)
	{
		SendComandoText(playerid, "/vertempovip", params);
		new tempo = gettime();
		new tmres = Dados[playerid][TmpVip] - tempo;
		new diasvip = tmres / 60 / 60 / 24;
		new horasvip = tmres / 60 / 60;
		horasvip = horasvip - (diasvip*24);
		format(Texto, sizeof(Texto), "[INFO]: Você tem %d dias VIP e %d horas VIP", diasvip, horasvip);
		SCM(playerid, Amarelo, Texto);
	}
	else return SCM(playerid, CorErro, MensagemErroCMD);
	return 1;
}

YCMD:vips(playerid, params[], help)//105
{
	new tempo = gettime(), DialogoS[1000], contador = 0;
	for(new i = 0; i < GetMaxPlayers(); ++i)
	{
		if(IsPlayerConnected(i))
		{
		    if(Dados[playerid][Vip] >= 1)
		    {
				new tmres = Dados[i][TmpVip] - tempo;
				new diasvip = tmres / 60 / 60 / 24;
				new horasvip = tmres / 60 / 60;
				horasvip = horasvip - (diasvip*24);
		        format(Texto, sizeof(Texto), "{FFFFFF}%d. %s - Tempo: %d Dias e %d Horas\n", i, Nome(i), diasvip, horasvip);
		        strcat(DialogoS, Texto);
		        contador ++;
		    }
		}
	}
	if(contador == 0)
	{
	    SCM(playerid, CorErro, "[ERRO]: Não existem vips online.");
	}
	SPD(playerid, DialogoVips, DSM, "Vips onlines", DialogoS, "Ok", "");
	return 1;
}