/*
					JFS Velocimetro v1.0

Postado v1.0: 01/12/2012
Atualizado v2.0: 24/01/2013
Criado Por: Jonathan Feitosa ( JFS )
Skype: jonathanfeitosajfs
================================================================================
			CURTA No Facebook: Facebook.com/GoHumorGTA <<
================================================================================
*/


#include <a_samp>
#include <zcmd>

#define POSICAO 2

#define MAXPLAYERSJFS 50 // Slots do seu Servidor

#define DesgasteMAX 100 // Maximo de Desgaste do Pneu ( 100% )
#define GasMAX 100 // Maximo de GAS ( 100% )

#define Tempo 15000 // Tempo para Diminuir o GAS
#define TempoDes 30000 // Tempo para Diminuir o Desgaste do Pneu

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

main()
{
	print("\n\n----------------------------------");
	print(" JFS Velocimetro - Criado Por Jonathan Feitosa :)");
	print(" Não Retire os Créditos do FilterScript !!!");
	print("----------------------------------\n\n");
}

enum
	SavePlayerPosEnum
{
	Float:LastX,
	Float:LastY,
	Float:LastZ
};

new
	giveplayerid,
	Float:JJX[MAXPLAYERSJFS],
	Float:JJY[MAXPLAYERSJFS],
	Float:JJZ[MAXPLAYERSJFS],
	PlayerPausa[MAXPLAYERSJFS],
	JFSVerificando[MAXPLAYERSJFS],
    SemGasolina[MAXPLAYERSJFS],
    KMP[MAX_VEHICLES],
    Valor,
	UpdateSeconds = 1,
    Float:distance,
 	CheckGasT,
 	CheckDesT,
	PararVeiculoT,
	Gas[MAX_VEHICLES],
	Desgaste[MAX_VEHICLES],
	Abastecendo[MAXPLAYERSJFS],
	ArrumandoPneu[MAXPLAYERSJFS],
	gGasBiz[MAXPLAYERSJFS],
 	Float:GasX,
 	Float:GasY,
	Float:GasZ,
	JFSAACC,
	JFSACPreco,
 	Float:olddistance,
 	Float:newdistance,
 	Float:x,
 	Float:y,
 	Float:z,
	Float:x1,
	Float:y1,
	Float:z1,
	Float:x2,
	Float:y2,
	Float:z2,
	closest = -1,
	ZonaSA[28],
	Text:TextDrawJFS[MAXPLAYERSJFS],
	Text:TextDrawJFSV[MAXPLAYERSJFS],
	bool:Velocimetro[MAXPLAYERSJFS],
	SavePlayerPos[MAXPLAYERSJFS][SavePlayerPosEnum],
	Celula[128]
;
new
	Float:LocaisGAS[13][3] =
{
	{1004.0070,-939.3102,42.1797}, // LS
	{1944.3260,-1772.9254,13.3906}, // LS
	{-90.5515,-1169.4578,2.4079}, // LS
	{-1609.7958,-2718.2048,48.5391}, // LS
	{2202.2349,2474.3494,10.5258}, // LV
	{614.9333,1689.7418,6.6968}, // LV
	{-1328.8250,2677.2173,49.7665}, // LV
	{70.3882,1218.6783,18.5165}, // LV
	{2113.7390,920.1079,10.5255}, // LV
	{-2029.4968,156.4366,28.9498}, // SF
	{-2408.7590,976.0934,45.4175}, // SF
	{-2243.9629,-2560.6477,31.8841}, // LS/SF
	{-1676.6323,414.0262,6.9484} // LS/SF
};

forward
	JFSAC();
forward
	NoPosto(playerid);
forward
	Float:DistanciaPosto(p1,Float:px,Float:py,Float:pz);
forward
	PararVeiculo();
forward
	CheckGas();
forward
	CheckDes();

//Nome dos Carros - Retirado do ThugLife City v4.0 Desenvolvido por mim :)
new
	NomesVeiculos[][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster",
	"Stretch","Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulancia","Leviathan","Moonbeam","Esperanto",
	"Taxi","Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee",
	"Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo",
	"RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer",
	"Turismo","Speeder","Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer",
	"PCJ-600","Faggio","Freeway","RC Baron","RC Raider","Glendale","Oceanic","Sanchez","Sparrow","Patriot",
	"Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR-350","Walton","Regina","Comet","BMX",
	"Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo",
	"Greenwood","Jetmax","Hotring","Sandking","Blista Compact","Maverick Policial","Boxville","Benson","Mesa",
	"RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","Rancher","Super GT","Elegant",
	"Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain","Nebula","Majestic",
	"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona",
	"FBI Truck","Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight",
	"Streak","Vortex","Vincent","Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob",
	"Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus",
	"Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight",
	"Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford",
	"BF-400","Newsvan","Tug","Trailer A","Emperor","Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C",
	"Andromada","Dodo","RC Cam","Launch","Viatura (LSPD)","Viatura (SFPD)","Viatura (LVPD)","Police Ranger",
	"Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A","Luggage Trailer B",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};

enum
	SAZonas
{
	Zona_Nomes[28],
	Float:Zona_Coords[6]
};

static const ZonaLS[][SAZonas] =
{
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

public OnFilterScriptInit()
{
	for(new c = 0;c < MAX_VEHICLES;c++)
	{
		Gas[c] = GasMAX;
		Desgaste[c] = DesgasteMAX;
	}
	PararVeiculoT = SetTimer("PararVeiculo", Tempo, 1);
	CheckGasT = SetTimer("CheckGas", Tempo, 1);
	CheckDesT = SetTimer("CheckDes", TempoDes, 1);

	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 1004.0070,-939.3102,42.1797, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 1944.3260,-1772.9254,13.3906, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -90.5515,-1169.4578,2.4079, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -1609.7958,-2718.2048,48.5391, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -2029.4968,156.4366,28.949, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -2408.7590,976.0934,45.4175, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -2243.9629,-2560.6477,31.8841, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -1676.6323,414.0262,6.9484, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 2202.2349,2474.3494,10.5258, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 614.9333,1689.7418,6.6968, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -1328.8250,2677.2173,49.7665, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 70.3882,1218.6783,18.5165, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 2113.7390,920.1079,10.5255, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -1327.7218,2678.8723,50.0625, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 2146.5759,2750.8442,10.6447, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 2146.8779,2739.6157,10.6435, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 1595.3046,2191.1331,10.6454, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, 1596.3274,2206.7070,10.6449, 20.0, 0, 1);
 	Create3DTextLabel("Abastecer, Consertar Pneu\n{FF7777}/jfsvelocimetro", -1, -736.9305,2742.6138,47.015, 20.0, 0, 1);

	return true;
}

public OnFilterScriptExit()
{
    KillTimer(PararVeiculoT);
    KillTimer(CheckGasT);
    KillTimer(CheckDesT);
    for(new i=0; i<MAXPLAYERSJFS; i++)
    {
        TextDrawDestroy(Text:TextDrawJFS[i]);
        TextDrawDestroy(Text:TextDrawJFSV[i]);
	}
	return true;
}

public OnPlayerConnect(playerid)
{
	#if(POSICAO == 1)
	TextDrawJFS[playerid] = TextDrawCreate(479.000000, 340.000000, "   "); // 288
	TextDrawBackgroundColor(TextDrawJFS[playerid], 255);
 	TextDrawLetterSize(TextDrawJFS[playerid], 0.255555, 0.999999);
	TextDrawFont(TextDrawJFS[playerid], 1);
 	TextDrawTextSize(TextDrawJFS[playerid], 630.000000,-18.000000);
	TextDrawColor(TextDrawJFS[playerid], 16777215);
	TextDrawSetOutline(TextDrawJFS[playerid], 0);
	TextDrawSetProportional(TextDrawJFS[playerid], 1);
	TextDrawSetShadow(TextDrawJFS[playerid], 1);
	TextDrawUseBox(TextDrawJFS[playerid], 1);
 	TextDrawBoxColor(TextDrawJFS[playerid], 80);

	TextDrawJFSV[playerid] = TextDrawCreate(556.000000, 325.000000, "JFS Velocimetro");
	TextDrawAlignment(TextDrawJFSV[playerid], 2);
	TextDrawBackgroundColor(TextDrawJFSV[playerid], 255);
	TextDrawFont(TextDrawJFSV[playerid], 3);
	TextDrawLetterSize(TextDrawJFSV[playerid], 0.379999, 1.299999);
	TextDrawColor(TextDrawJFSV[playerid], -1);
	TextDrawSetOutline(TextDrawJFSV[playerid], 1);
	TextDrawSetProportional(TextDrawJFSV[playerid], 1);

	#endif
	#if(POSICAO == 2)
	TextDrawJFS[playerid] = TextDrawCreate(150.000000, 349.000000, "   ");
	TextDrawBackgroundColor(TextDrawJFS[playerid], 255);
 	TextDrawLetterSize(TextDrawJFS[playerid], 0.255555, 0.999999);
	TextDrawFont(TextDrawJFS[playerid], 1);
	TextDrawTextSize(TextDrawJFS[playerid], 300.000000, 380.000000);
	TextDrawColor(TextDrawJFS[playerid], 16777215);
	TextDrawSetOutline(TextDrawJFS[playerid], 0);
	TextDrawSetProportional(TextDrawJFS[playerid], 1);
	TextDrawSetShadow(TextDrawJFS[playerid], 1);
 	TextDrawUseBox(TextDrawJFS[playerid], 1);
 	TextDrawBoxColor(TextDrawJFS[playerid], 80);

	TextDrawJFSV[playerid] = TextDrawCreate(224.000000, 334.000000, "JFS Velocimetro");
	TextDrawAlignment(TextDrawJFSV[playerid], 2);
	TextDrawBackgroundColor(TextDrawJFSV[playerid], 255);
	TextDrawFont(TextDrawJFSV[playerid], 3);
	TextDrawLetterSize(TextDrawJFSV[playerid], 0.379999, 1.299999);
	TextDrawColor(TextDrawJFSV[playerid], -1);
	TextDrawSetOutline(TextDrawJFSV[playerid], 1);
	TextDrawSetProportional(TextDrawJFSV[playerid], 1);
 	#endif
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	return 0;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
        return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    Velocimetro[playerid] = true;
	    SetTimerEx("AtualizarVelocimetro", 200, true, "i", playerid);
	    SetTimerEx("Quilometragem", 1000, true, "i", playerid);
	    TextDrawShowForPlayer(playerid, Text:TextDrawJFS[playerid]);
	    TextDrawShowForPlayer(playerid, Text:TextDrawJFSV[playerid]);
	}
	return true;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == 4567)
	{
           if(response)
           {
     	   		if(listitem == 0)
           		{
 		    		new ModeloID =  GetVehicleModel(GetPlayerVehicleID(playerid));
					if(Bikes(ModeloID)) return SendClientMessage(playerid, 0x696969AA, "Impossivel Encher a Gasolina de uma Bicicleta!");
				    olddistance = 999999;
					for(new i = 0; i < sizeof(LocaisGAS); i++)
					{
						GasX = LocaisGAS[i][0];
						GasY = LocaisGAS[i][1];
						GasZ = LocaisGAS[i][2];
						newdistance = DistanciaPosto(playerid,GasX,GasY,GasZ);
						if (newdistance < olddistance)
						{
						    olddistance = newdistance;
							closest = i;
						}
					}
 	   				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Abastecendo Veiculo Aguarde",2000,3);
					SetTimer("JFSAC", 5000,0);
					gGasBiz[playerid] = closest+12;
					Abastecendo[playerid] = 1;
					new l,pn,pa,po;
	       			new vehicle = GetPlayerVehicleID(playerid);
					GetVehicleDamageStatus(vehicle,pa,po,l,pn);
					UpdateVehicleDamageStatus(vehicle, pa, po, l, 0);
					return true;
           		}
     	   		else if(listitem == 1)
           		{
		    		new ModeloID =  GetVehicleModel(GetPlayerVehicleID(playerid));
					if(VeiculosNaoTerrestres(ModeloID)) return SendClientMessage(playerid, 0x696969AA, "Esse Veiculo não tem Pneu  !");
				    olddistance = 999999;
					for(new i = 0; i < sizeof(LocaisGAS); i++)
					{
						GasX = LocaisGAS[i][0];
						GasY = LocaisGAS[i][1];
						GasZ = LocaisGAS[i][2];
						newdistance = DistanciaPosto(playerid,GasX,GasY,GasZ);
						if (newdistance < olddistance)
						{
						    olddistance = newdistance;
							closest = i;
						}
					}
 	   				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Arrumando PNEU Aguarde",2000,3);
					SetTimer("JFSAC", 5000,0);
					gGasBiz[playerid] = closest+12;
					ArrumandoPneu[playerid] = 1;
					return true;
           		}
		   }
   		   return true;
	}
	return 1;
}

COMMAND:jfsvelocimetro(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xAFAFAFAA,"Você não estã em um beículo.");
	if(!NoPosto(playerid)) return SendClientMessage(playerid,0xAFAFAFAA,"Você Não Esta Em um Posto De Combustivel");
	ShowPlayerDialog(playerid, 4567, DIALOG_STYLE_LIST, "JFS Velocimetro v1.0 - Painel", "Abastecer Veiculo\nArrumar Pneu - 200R$", "Selecionar", "Cancelar");
	return true;
}
COMMAND:sairveiculo(playerid, params[])
{
	if(SemGasolina[playerid] == 1)
	{
		TogglePlayerControllable(playerid, 1);
		RemovePlayerFromVehicle(playerid);
		SemGasolina[playerid] = 0;
	}
	return true;
}

public Float:DistanciaPosto(p1,Float:px,Float:py,Float:pz)
{
	if(!IsPlayerConnected(p1))
		return -1.00;

	GetPlayerPos(p1,x1,y1,z1);
	x2 = px;
	y2 = py;
	z2 = pz;
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public NoPosto(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,6.0,1004.0070,-939.3102,42.1797) || IsPlayerInRangeOfPoint(playerid,6.0,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,6.0,-90.5515,-1169.4578,2.4079) || IsPlayerInRangeOfPoint(playerid,6.0,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,6.0,-2029.4968,156.4366,28.9498) || IsPlayerInRangeOfPoint(playerid,8.0,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-2243.9629,-2560.6477,31.8841) || IsPlayerInRangeOfPoint(playerid,8.0,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,6.0,2202.2349,2474.3494,10.5258) || IsPlayerInRangeOfPoint(playerid,10.0,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,8.0,-1328.8250,2677.2173,49.7665) || IsPlayerInRangeOfPoint(playerid,6.0,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,8.0,2113.7390,920.1079,10.5255) || IsPlayerInRangeOfPoint(playerid,6.0,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
        }
        else if(IsPlayerInRangeOfPoint(playerid,8.0,2146.5759,2750.8442,10.6447) || IsPlayerInRangeOfPoint(playerid,6.0,2146.8779,2739.6157,10.6435))
		{//LV2
		    return 1;
        }
        else if(IsPlayerInRangeOfPoint(playerid,8.0,1595.3046,2191.1331,10.6454) || IsPlayerInRangeOfPoint(playerid,6.0,1596.3274,2206.7070,10.6449))
		{//LV3
		    return 1;
        }
        else if(IsPlayerInRangeOfPoint(playerid,8.0,-736.9305,2742.6138,47.0158))
		{//Landtankstelle
		    return 1;
        }
	}
	return 0;
}

public CheckDes()
{
	for(new i=0;i<MAXPLAYERSJFS;i++)
	{
    	if(IsPlayerConnected(i))
		{
  			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				new l,pn,pa,po;
	       		new vehicle = GetPlayerVehicleID(i);
				if(Desgaste[vehicle] >= 1)
				{
					Desgaste[vehicle]--;
				}
			    new VGas[MAXPLAYERSJFS];
				if(Desgaste[vehicle] == 15)
				{
                    VGas[i] = 1;
					if(VGas[i] == 1)
					{
						SendClientMessage(i, -1, "Seu Pneu está Desgastado e seu Pneu Direito da Frente Furou !!! Vá no posto consertar !");
						GetVehicleDamageStatus(vehicle,pa,po,l,pn);
						UpdateVehicleDamageStatus(vehicle, pa, po, l, 2);
					}
				}
				if(Desgaste[vehicle] == 14)
				{
				    VGas[i] = 0;
				}
				if(Desgaste[vehicle] == 10)
				{
                    VGas[i] = 1;
					if(VGas[i] == 1)
					{
						SendClientMessage(i, -1, "Seu Pneu está Desgastado e seu Pneu Esquerdo da Frente Furou !!! Vá no posto consertar !");
						GetVehicleDamageStatus(vehicle,pa,po,l,pn);
						UpdateVehicleDamageStatus(vehicle, pa, po, l, 10);
					}
				}
				if(Desgaste[vehicle] == 9)
				{
				    VGas[i] = 0;
				}
				if(Desgaste[vehicle] == 5)
				{
                    VGas[i] = 1;
					if(VGas[i] == 1)
					{
						SendClientMessage(i, -1, "Seu Pneu está Desgastado e seu Pneu Direito de trás Furou !!! Vá no posto consertar !");
						GetVehicleDamageStatus(vehicle,pa,po,l,pn);
						UpdateVehicleDamageStatus(vehicle, pa, po, l, 11);
					}
				}
				if(Desgaste[vehicle] == 4)
				{
				    VGas[i] = 0;
				}
	        	if(Desgaste[vehicle] == 1)
		   		{
		   		    VGas[i] = 1;
					if(VGas[i] == 1)
					{
		              	SemGasolina[i] = 1;
			        	SendClientMessage(i, -1, "Seu Pneu se desgastou, por isso furou todos os seus pneu.");
						GetVehicleDamageStatus(vehicle,pa,po,l,pn);
						UpdateVehicleDamageStatus(vehicle, pa, po, l, 15);
					}
				}
				if(Desgaste[vehicle] == 0)
				{
				    VGas[i] = 0;
				}
			}
		}
	}
	return 1;
}

public CheckGas()
{
	for(new i=0;i<MAXPLAYERSJFS;i++)
	{
    	if(IsPlayerConnected(i))
		{
			new vehicle = GetPlayerVehicleID(i);
  			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(Gas[vehicle] >= 1)
				{
					Gas[vehicle]--;
				}
	        	if(Gas[vehicle] < 1)
		   		{
	              	SemGasolina[i] = 1;
	              	TogglePlayerControllable(i, 0);
		        	SendClientMessage(i, -1, "Acabou a Gasolina ! Use /sairveiculo Para sair do veiculo");
				}
			}
		}
	}
	return 1;
}

public PararVeiculo()
{
	for(new i=0; i<MAXPLAYERSJFS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				Valor = floatround(distance * 3600);
				if(UpdateSeconds > 1)
				{
					Valor = floatround(Valor / UpdateSeconds);
				}
				if(Valor == 0)
				{
					Gas[GetPlayerVehicleID(i)] ++;
					Desgaste[GetPlayerVehicleID(i)]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public JFSAC()
{
	for(new i=0; i<MAXPLAYERSJFS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
			if(Abastecendo[i] == 1)
		    {
		        JFSAACC = GasMAX - Gas[GetPlayerVehicleID(i)];
				JFSACPreco = JFSAACC * 10;
				if(GetPlayerMoney(i) >= JFSACPreco)
				{
					Gas[GetPlayerVehicleID(i)] += JFSAACC;
				    format(Celula,sizeof(Celula),"Você Abasteceu Seu Veiculo Por $%d .",JFSACPreco);
				    SendClientMessage(i,0x33CCFFAA, Celula);
				    GivePlayerMoney(i,-JFSACPreco);
				    if(JFSACPreco > 0)
					JFSACPreco = 0;
					Abastecendo[i] = 0;
				}
			   	else
			   	{
			   	    format(Celula,sizeof(Celula),"Você Não Tem $%d Para Abastecer Seu Veiculo",JFSACPreco);
				    SendClientMessage(i,0x33CCFFAA,Celula);
			   	}
		 	}
			if(ArrumandoPneu[i] == 1)
		    {
				if(GetPlayerMoney(i) >= 2000)
				{
				    Desgaste[GetPlayerVehicleID(i)] = 100;
				    format(Celula,sizeof(Celula),"Você Consertou o Pneu do Seu Veiculo Por 200R$.");
				    SendClientMessage(i,0x33CCFFAA, Celula);
				    GivePlayerMoney(i, -2000);
				}
			   	else
			   	{
			   	    format(Celula,sizeof(Celula),"Você Não Tem 200R$ Para Consertar o Pneu do Seu Veiculo");
				    SendClientMessage(i,0x33CCFFAA,Celula);
			   	}
		 	}
		}
	}
	return 1;
}

stock PegarPlayerNaZona(playerid, Zona[], String)
{
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(ZonaLS); i++ )
 	{
		if(x >= ZonaLS[i][Zona_Coords][0] && x <= ZonaLS[i][Zona_Coords][3] && y >= ZonaLS[i][Zona_Coords][1] && y <= ZonaLS[i][Zona_Coords][4])
		{
		    return format(Zona, String, ZonaLS[i][Zona_Nomes], 0);
		}
	}
	return 0;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}

forward AtualizarVelocimetro(playerid);
public AtualizarVelocimetro(playerid)
{
	if(Velocimetro[playerid] == true)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
      		new vehicleid = GetPlayerVehicleID(playerid);
			new CVel[200], Float:SangueV;
			GetVehicleHealth(vehicleid, SangueV);
    		PegarPlayerNaZona(playerid, ZonaSA, 28);
    		new ModeloID =  GetVehicleModel(GetPlayerVehicleID(playerid));
			if(VeiculosNaoTerrestres(ModeloID))
			{
				format(CVel,sizeof(CVel),"~p~%d ~g~KM/H~n~~p~KM Percorrido: ~g~%d~n~~p~Local: ~g~%s~n~~p~Veiculo: ~g~%s~n~~p~Lataria: ~g~%d%%~n~~p~Gasolina: ~g~%d%%", GetPlayerSpeed(playerid),  floatround(KMP[vehicleid])/100, ZonaSA, NomesVeiculos[GetVehicleModel(vehicleid)-400], floatround(SangueV)/10, Gas[vehicleid]);
				TextDrawSetString(Text:TextDrawJFS[playerid], CVel);
			}
 	 		else if(Bikes(ModeloID))
			{
				format(CVel,sizeof(CVel),"~p~%d ~g~KM/H~n~~p~KM Percorrido: ~g~%d~n~~p~Local: ~g~%s~n~~p~Veiculo: ~g~%s~n~~p~Lataria: ~g~%d%%~n~~p~Desgaste do Pneu: ~g~%d%%", GetPlayerSpeed(playerid), floatround(KMP[vehicleid])/100, ZonaSA, NomesVeiculos[GetVehicleModel(vehicleid)-400], floatround(SangueV)/10, Desgaste[vehicleid]);
				TextDrawSetString(Text:TextDrawJFS[playerid], CVel);
			}
/* ----------------------- RETIRE SE VOCÊ USA JÁ 0.3Z ----------------------
			else if(Blindados(ModeloID))
    		{
				format(CVel,sizeof(CVel),"~p~%d ~g~KM/H~n~~p~KM Percorrido: ~g~%d~n~~p~Local: ~g~%s~n~~p~Veiculo: ~g~%s~n~~p~Lataria: ~g~%d%%~n~~p~Gasolina: ~g~%d%%~n~~p~Desgaste do Pneu: ~g~%d%%~n~~r~BLINDADO!!!", GetPlayerSpeed(playerid), floatround(KMP[vehicleid])/100, ZonaSA, NomesVeiculos[GetVehicleModel(vehicleid)-400], floatround(SangueV)/10, Gas[vehicleid], Desgaste[vehicleid]);
				TextDrawSetString(Text:TextDrawJFS[playerid], CVel);
			}
--------------------------------------------------------------------------*/

			else if(!VeiculosNaoTerrestres(ModeloID) && !Bikes(ModeloID) /*&& !Blindados(ModeloID) */) // < RETIRE SE VOCÊ USA JÁ USA 0.3Z
    		{
				format(CVel,sizeof(CVel),"~p~%d ~g~KM/H~n~~p~KM Percorrido: ~g~%d~n~~p~Local: ~g~%s~n~~p~Veiculo: ~g~%s~n~~p~Lataria: ~g~%d%%~n~~p~Gasolina: ~g~%d%%~n~~p~Desgaste do Pneu: ~g~%d%%", GetPlayerSpeed(playerid), floatround(KMP[vehicleid])/100, ZonaSA, NomesVeiculos[GetVehicleModel(vehicleid)-400], floatround(SangueV)/10, Gas[vehicleid], Desgaste[vehicleid]);
				TextDrawSetString(Text:TextDrawJFS[playerid], CVel);
			}
		}
		else
		{
   			TextDrawHideForPlayer(playerid, Text:TextDrawJFS[playerid]);
   			TextDrawHideForPlayer(playerid, Text:TextDrawJFSV[playerid]);
		    Velocimetro[playerid] = false;
		    KillTimer(AtualizarVelocimetro(playerid));
		    KillTimer(Quilometragem(playerid));
		}
	}
	return true;
}

forward JFSAntiMovimento(playerid);
public JFSAntiMovimento(playerid)
{
    new
        Float:JFSX, Float:JFSY, Float: JFSZ;
    GetPlayerPos(playerid, JFSX, JFSY, JFSZ);

    if(JFSX == JJX[playerid] && JFSY == JJY[playerid] && JFSZ == JJZ[playerid])
	{
	        PlayerPausa[playerid] = 1;
	        SetPlayerDrunkLevel (playerid, 5000);
   			TextDrawHideForPlayer(playerid, Text:TextDrawJFS[playerid]);
   			TextDrawHideForPlayer(playerid, Text:TextDrawJFSV[playerid]);
		    Velocimetro[playerid] = false;
		    KillTimer(AtualizarVelocimetro(playerid));
		    KillTimer(Quilometragem(playerid));
	}
	JFSVerificando[playerid] = 0;
	return true;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if (PRESSED(KEY_FIRE) || PRESSED(KEY_ACTION) || PRESSED(KEY_SECONDARY_ATTACK) || PRESSED(KEY_UP) || PRESSED(KEY_DOWN)
	|| PRESSED(KEY_LEFT) || PRESSED(KEY_RIGHT))
	{
		if (PlayerPausa[playerid] == 1 && IsPlayerInAnyVehicle(playerid))
		{
	    	Velocimetro[playerid] = true;
	    	SetTimerEx("AtualizarVelocimetro", 200, true, "i", playerid);
	    	SetTimerEx("Quilometragem", 1000, true, "i", playerid);
	    	TextDrawShowForPlayer(playerid, Text:TextDrawJFS[playerid]);
	    	TextDrawShowForPlayer(playerid, Text:TextDrawJFSV[playerid]);
  			PlayerPausa[playerid] = 0;
            SetPlayerDrunkLevel (playerid, 0);
		}
	}
	return 1;
}


forward Quilometragem(playerid);
public Quilometragem(playerid)
{
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
				if(JFSVerificando[playerid] == 0)
				{
					JFSVerificando[playerid] = 1;
					GetPlayerPos(playerid, Float:JJX[playerid], Float:JJY[playerid], Float:JJZ[playerid]);
		    		SetTimerEx("JFSAntiMovimento", 10000, false,"d", giveplayerid);
		     	}
			    new vehicle = GetPlayerVehicleID(playerid);
                static Float:PosX,Float:PosY,Float:PosZ;
                GetVehicleVelocity(vehicle, PosX, PosY, PosZ);
                KMP[vehicle] += (floatround(floatmul(((floatmul(floatsqroot(floatadd(floatadd(floatpower(PosX, 2), floatpower(PosY, 2)),  floatpower(PosZ, 2))), 20.0) * 1)), 15)) / 25);
        }
        return true;
}

forward VeiculosNaoTerrestres(ID);
public VeiculosNaoTerrestres(ID)
{
	if(ID == 417 || ID == 425 || ID == 430 || ID == 435 || ID == 446 || ID == 447 || ID == 449 || ID == 450 || ID == 452 ||
 	ID == 453 || ID == 454 || ID == 460 || ID == 464 || ID == 465 || ID == 472 || ID == 473 || ID == 484 || ID == 487 || ID == 488 ||
	ID == 493 || ID == 501 || ID == 511 || ID == 512 || ID == 513 || ID == 519 || ID == 520 ||
	ID == 539 || ID == 548 || ID == 553 || ID == 563 || ID == 577 || ID == 592 || ID == 593 || ID == 594 || ID == 595)
	{
	    return true;
	}
	return false;
}

forward Bikes(ID);
public Bikes(ID)
{
	if(ID == 481 || ID == 509 || ID == 510)
	{
	    return true;
	}
	return false;
}

/* ----------------------- RETIRE SE VOCÊ USA JÁ 0.3Z ----------------------
forward Blindados(ID);
public Blindados(ID)
{
	if(ID == 417 || ID == 425 || ID == 427 || ID == 428 || ID == 528 || ID == 563 || ID == 601)
	{
	    return true;
	}
	
	return false;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(hittype == 2)
	{
 		new VeiculosJFS = GetVehicleModel(hitid);
		if(weaponid == 35 || weaponid == 36 || weaponid == 38 || weaponid == 39 || weaponid == 16 || weaponid == 18 ) // ARMAS
        {
            if(VeiculosJFS == 417 || VeiculosJFS == 425 || VeiculosJFS == 427 || VeiculosJFS == 428 || VeiculosJFS == 528 || VeiculosJFS == 563 || VeiculosJFS == 601)
			{
	           	RepairVehicle(hitid);
	        }
        }
     }
}
 */